<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>朝辞</title>
  
  <subtitle>Have a nice day!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-07-18T14:48:25.147Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Zhaoci</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode-#2-两数相加(Add-Two-Number)</title>
    <link href="http://yoursite.com/2020/07/18/2020-07-17-LeetCode-#2-Add-Two-Number/"/>
    <id>http://yoursite.com/2020/07/18/2020-07-17-LeetCode-#2-Add-Two-Number/</id>
    <published>2020-07-18T15:10:00.000Z</published>
    <updated>2020-07-18T14:48:25.147Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。 </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// 如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。 </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// 您可以假设除了数字 0 之外，这两个数都不会以 0 开头。 </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// 示例： </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// 输入：(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)</span></span><br><span class="line"><span class="comment">//输出：7 -&gt; 0 -&gt; 8</span></span><br><span class="line"><span class="comment">//原因：342 + 465 = 807</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// Related Topics 链表 数学 </span></span><br><span class="line"><span class="comment">// 👍 4617 👎 0</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"><span class="keyword">package</span> leetcode.editor.cn;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AddTwoNumbers</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Solution solution = <span class="keyword">new</span> AddTwoNumbers().<span class="keyword">new</span> Solution();</span><br><span class="line">        ListNode l1 = <span class="keyword">new</span> ListNode(<span class="number">2</span>), l2 = <span class="keyword">new</span> ListNode(<span class="number">5</span>);</span><br><span class="line">        l1.next = <span class="keyword">new</span> ListNode(<span class="number">4</span>);</span><br><span class="line">        l1.next.next = <span class="keyword">new</span> ListNode(<span class="number">3</span>);</span><br><span class="line">        l2.next = <span class="keyword">new</span> ListNode(<span class="number">6</span>);</span><br><span class="line">        l2.next.next = <span class="keyword">new</span> ListNode(<span class="number">4</span>);</span><br><span class="line">        ListNode l3 = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">        l3.next = solution.addTwoNumbers(l1, l2);</span><br><span class="line">        <span class="keyword">while</span>(l3.next !=<span class="keyword">null</span>) &#123;</span><br><span class="line">            l3 = l3.next;</span><br><span class="line">            System.out.print(l3.val + <span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ListNode</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> val;</span><br><span class="line">        ListNode next;</span><br><span class="line">        ListNode(<span class="keyword">int</span> x)&#123; val=x; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//leetcode submit region begin(Prohibit modification and deletion)</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment">     * public class ListNode &#123;</span></span><br><span class="line"><span class="comment">     *     int val;</span></span><br><span class="line"><span class="comment">     *     ListNode next;</span></span><br><span class="line"><span class="comment">     *     ListNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> ListNode <span class="title">addTwoNumbers</span><span class="params">(ListNode l1, ListNode l2)</span> </span>&#123;</span><br><span class="line">            ListNode sumHead = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">            ListNode p = l1, q = l2, currNode = sumHead;</span><br><span class="line">            <span class="keyword">int</span> carry = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(p!=<span class="keyword">null</span> || q!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">int</span> x = (p!=<span class="keyword">null</span>)? p.val : <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">int</span> y = (q!=<span class="keyword">null</span>)? q.val : <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">int</span> sum = carry + x + y;</span><br><span class="line">                carry = sum / <span class="number">10</span>;</span><br><span class="line">                currNode.next = <span class="keyword">new</span> ListNode(sum % <span class="number">10</span>);</span><br><span class="line">                currNode = currNode.next;</span><br><span class="line">                <span class="keyword">if</span>(p != <span class="keyword">null</span>)</span><br><span class="line">                    p = p.next;</span><br><span class="line">                <span class="keyword">if</span>(q != <span class="keyword">null</span>)</span><br><span class="line">                    q = q.next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(carry &gt; <span class="number">0</span>)</span><br><span class="line">                currNode.next = <span class="keyword">new</span> ListNode(carry);</span><br><span class="line">            <span class="keyword">return</span> sumHead.next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//leetcode submit region end(Prohibit modification and deletion)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://yoursite.com/categories/leetcode/"/>
    
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
      <category term="链表" scheme="http://yoursite.com/tags/%E9%93%BE%E8%A1%A8/"/>
    
      <category term="数学" scheme="http://yoursite.com/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode-#1-两数之和(Two-Sum)</title>
    <link href="http://yoursite.com/2020/07/18/2020-07-17-LeetCode-#1-Two-Sum/"/>
    <id>http://yoursite.com/2020/07/18/2020-07-17-LeetCode-#1-Two-Sum/</id>
    <published>2020-07-18T14:20:00.000Z</published>
    <updated>2020-07-18T14:48:35.795Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。 </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// 你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。 </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// 示例: </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// 给定 nums = [2, 7, 11, 15], target = 9</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//因为 nums[0] + nums[1] = 2 + 7 = 9</span></span><br><span class="line"><span class="comment">//所以返回 [0, 1]</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// Related Topics 数组 哈希表 </span></span><br><span class="line"><span class="comment">// 👍 8675 👎 0</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"><span class="keyword">package</span> leetcode.editor.cn;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TwoSum</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Solution solution = <span class="keyword">new</span> TwoSum().<span class="keyword">new</span> Solution();</span><br><span class="line">        <span class="keyword">int</span>[] res = solution.twoSum(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">2</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">15</span>&#125;, <span class="number">9</span>);</span><br><span class="line">        System.out.println(Arrays.toString(res));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//leetcode submit region begin(Prohibit modification and deletion)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; nums.length; j++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (nums[j] == target - nums[i]) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[] &#123; i, j &#125;;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"No two sum solution"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//leetcode submit region end(Prohibit modification and deletion)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Solution1: 暴力破解</span></span><br><span class="line"><span class="comment"> * T: O(n^2)  S: O(1)</span></span><br><span class="line"><span class="comment"> * class Solution &#123;</span></span><br><span class="line"><span class="comment"> *         public int[] twoSum(int[] nums, int target) &#123;</span></span><br><span class="line"><span class="comment"> *             for (int i = 0; i &lt; nums.length; i++) &#123;</span></span><br><span class="line"><span class="comment"> *                 for (int j = i + 1; j &lt; nums.length; j++) &#123;</span></span><br><span class="line"><span class="comment"> *                     if (nums[j] == target - nums[i]) &#123;</span></span><br><span class="line"><span class="comment"> *                         return new int[] &#123; i, j &#125;;</span></span><br><span class="line"><span class="comment"> *                     &#125;</span></span><br><span class="line"><span class="comment"> *                 &#125;</span></span><br><span class="line"><span class="comment"> *             &#125;</span></span><br><span class="line"><span class="comment"> *             throw new IllegalArgumentException("No two sum solution");</span></span><br><span class="line"><span class="comment"> *         &#125;</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Solution2: 两遍哈希表</span></span><br><span class="line"><span class="comment"> * T: O(n)  S: O(n)</span></span><br><span class="line"><span class="comment"> * 1. 第一次迭代，将每个元素的值和它的索引添加到表中.</span></span><br><span class="line"><span class="comment"> * 2. 第二次迭代，检查每个元素所对应的目标元素(target-nums[i]是否在表中)</span></span><br><span class="line"><span class="comment"> * class Solution &#123;</span></span><br><span class="line"><span class="comment"> *     public int[] twoSum(int[] nums, int target) &#123;</span></span><br><span class="line"><span class="comment"> *         Map&lt;Integer, Integer&gt; map = new HashMap&lt;&gt;();</span></span><br><span class="line"><span class="comment"> *         for (int i = 0; i &lt; nums.length; i++) &#123;</span></span><br><span class="line"><span class="comment"> *             map.put(nums[i], i);</span></span><br><span class="line"><span class="comment"> *         &#125;</span></span><br><span class="line"><span class="comment"> *         for (int i = 0; i &lt; nums.length; i++) &#123;</span></span><br><span class="line"><span class="comment"> *             int complement = target - nums[i];</span></span><br><span class="line"><span class="comment"> *             if (map.containsKey(complement) &amp;&amp; map.get(complement) != i) &#123;</span></span><br><span class="line"><span class="comment"> *                 return new int[] &#123; i, map.get(complement) &#125;;</span></span><br><span class="line"><span class="comment"> *             &#125;</span></span><br><span class="line"><span class="comment"> *         &#125;</span></span><br><span class="line"><span class="comment"> *         throw new IllegalArgumentException("No two sum solution");</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://yoursite.com/categories/leetcode/"/>
    
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
      <category term="数组" scheme="http://yoursite.com/tags/%E6%95%B0%E7%BB%84/"/>
    
      <category term="哈希表" scheme="http://yoursite.com/tags/%E5%93%88%E5%B8%8C%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>Processing目录下组件了解</title>
    <link href="http://yoursite.com/2020/07/15/2020-07-15-Processing-%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%BB%84%E4%BB%B6%E4%BA%86%E8%A7%A3/"/>
    <id>http://yoursite.com/2020/07/15/2020-07-15-Processing-%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%BB%84%E4%BB%B6%E4%BA%86%E8%A7%A3/</id>
    <published>2020-07-15T15:36:00.000Z</published>
    <updated>2020-07-15T15:39:14.171Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Processing目录组件"><a href="#Processing目录组件" class="headerlink" title="Processing目录组件"></a>Processing目录组件</h2><p>目标：了解Processing目录下组件如何使用。(主要完成对数据的预处理工作)</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrmisyib5j30720a1wei.jpg" alt="png"></p><p>查看方法：选中组件按<code>F1</code>，或者在<code>帮助</code>的<code>help content</code>中搜索组件名。</p><blockquote><p>tmap/tAggregateRow/tFilterRow/tSplitRow</p></blockquote><h2 id="tAggregateRow"><a href="#tAggregateRow" class="headerlink" title="tAggregateRow"></a>tAggregateRow</h2><p><code>接收流并基于一个或多个列进行聚合</code></p><p>对于每个输出行，都提供了聚合键和相关集合操作(min,max,sum…)。</p><p>可用于以下job框架：</p><ul><li><p><code>Standard</code>: see <a href="http://127.0.0.1:59832/help/ntopic/org.talend.help/guide/components/en/zqy1572276418115.html#nnb1550477842274" target="_blank" rel="noopener">tAggregateRow Standard properties</a>.</p><p>The component in this framework is available in all <a href="https://www.talend.com/products/?utm_medium=help&utm_source=help_content" target="_blank" rel="noopener">Talend products</a>.</p></li><li><p><code>MapReduce</code>: see <a href="http://127.0.0.1:59832/help/ntopic/org.talend.help/guide/components/en/zqy1572276418115.html#mmh1550477842446" target="_blank" rel="noopener">tAggregateRow MapReduce properties (deprecated)</a>.</p><p>The component in this framework is available in all <a href="https://www.talend.com/products/big-data/big-data-compare-all?utm_medium=help&utm_source=help_content" target="_blank" rel="noopener">subscription-based Talend products with Big Data</a>                   and <a href="https://www.talend.com/products/data-fabric?utm_medium=help&utm_source=help_content" target="_blank" rel="noopener">Talend Data Fabric</a>.</p></li><li><p><code>Spark Batch</code>: see <a href="http://127.0.0.1:59832/help/ntopic/org.talend.help/guide/components/en/zqy1572276418115.html#npy1550477842603" target="_blank" rel="noopener">tAggregateRow properties for Apache Spark Batch</a>.</p><p>The component in this framework is available in all <a href="https://www.talend.com/products/big-data/big-data-compare-all?utm_medium=help&utm_source=help_content" target="_blank" rel="noopener">subscription-based Talend products with Big Data</a>                   and <a href="https://www.talend.com/products/data-fabric?utm_medium=help&utm_source=help_content" target="_blank" rel="noopener">Talend Data Fabric</a>.</p></li><li><p><code>Spark Streaming</code>: see <a href="http://127.0.0.1:59832/help/ntopic/org.talend.help/guide/components/en/zqy1572276418115.html#snh1550477851873" target="_blank" rel="noopener">tAggregateRow properties for Apache Spark Streaming</a>.</p><p>This component is available in <a href="https://www.talend.com/products/big-data/real-time-big-data/?utm_medium=help&utm_source=help_content" target="_blank" rel="noopener">Talend Real Time Big Data Platform</a> and <a href="https://www.talend.com/products/data-fabric?utm_medium=help&utm_source=help_content" target="_blank" rel="noopener">Talend Data Fabric</a>.</p></li><li><p><code>Storm</code>: see <a href="http://127.0.0.1:59832/help/ntopic/org.talend.help/guide/components/en/zqy1572276418115.html#sbd1550477851951" target="_blank" rel="noopener">tAggregateRow Storm properties (deprecated)</a>. </p><p>This component is available in <a href="https://www.talend.com/products/big-data/real-time-big-data/?utm_medium=help&utm_source=help_content" target="_blank" rel="noopener">Talend Real Time Big Data Platform</a> and <a href="https://www.talend.com/products/data-fabric?utm_medium=help&utm_source=help_content" target="_blank" rel="noopener">Talend Data Fabric</a>.</p></li></ul><p>该组件处理数据流，因此需要输入和输出，所以其被定义为中间步骤。</p><p>通常，<code>tAggregateRow</code>与<code>tSortRow</code>结合使用。</p><h4 id="Demo1-聚合和排序数据"><a href="#Demo1-聚合和排序数据" class="headerlink" title="Demo1 - 聚合和排序数据"></a>Demo1 - 聚合和排序数据</h4><p>示例：使用Talend组件来对学生的综合分数进行聚合，并基于学生的姓名对聚合的分数进行排序。</p><p>思路：创建作业，使用tAggregateRow组件聚合学生的综合分数，然后使用tSortRow组件对聚合的数据进行排序，最后在控制台中显示聚合和排序的数据。</p><ol><li><p>创建job.</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrow02orkj30kp04haa3.jpg" alt="png"></p></li><li><p>配置job.</p><p>①组件tFixedFlowInput编辑schema，添加name字段和score字段。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggroypyekkj30q30dft9l.jpg" alt="png"></p><p>Mode区域，选择Use Inline Content(delimited file),并在内容框填入输入数据.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Peter;92</span><br><span class="line">James;93</span><br><span class="line">Thomas;91</span><br><span class="line">Peter;94</span><br><span class="line">James;96</span><br><span class="line">Thomas;95</span><br><span class="line">Peter;96</span><br><span class="line">James;92</span><br><span class="line">Thomas;98</span><br><span class="line">Peter;95</span><br><span class="line">James;96</span><br><span class="line">Thomas;93</span><br><span class="line">Peter;98</span><br><span class="line">James;97</span><br><span class="line">Thomas;95</span><br></pre></td></tr></table></figure></li></ol><p>   <img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrp0v33ohj30ln0h4wf7.jpg" alt="png"></p><p>   ②组件tAggregateRow编辑schema,Output添加5个列.</p><p>   <img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrp5mlu9fj30rc0awdgc.jpg" alt="png"></p><p>   Group by中添加一行，并选择Output column和Input column position的<code>name</code>字段对输入数据基于<code>name</code>列进行分组。</p><p>   并在Operations table中添加四行来定义要执行的操作，<code>sum</code>,<code>average</code>,<code>max</code>,<code>min</code>。然后都从Input column position中选择<code>score</code>列字段来基于它对输入数据进行聚合。</p><p>   ③组件tSortRow，在Criteria table中添加一行，并指定为排序操作需要基于的列。本例中为<code>name</code>列，然后选择<code>按照字母排序</code>，<code>升序</code>排列。</p><p>   ④组件tLogRow，在Basic settings的Mode中，选择Table(print values in cells of a table)来打印结果。</p><ol start="3"><li><p>运行job.</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrpmdawajj31hc0smq9x.jpg" alt="png"></p></li></ol><h2 id="tFilterRow"><a href="#tFilterRow" class="headerlink" title="tFilterRow"></a>tFilterRow</h2><p><code>通过在选定的列上设置一个或多个条件来筛选输入行</code></p><p>可用于以下job框架：</p><ul><li><p>Standard: see <a href="http://127.0.0.1:59832/help/ntopic/org.talend.help.filterrow/guide/components/en/lkv1572276420081.html#koe1550478042642" target="_blank" rel="noopener">tFilterRow Standard properties</a>.</p><p>The component in this framework is available in all <a href="https://www.talend.com/products/?utm_medium=help&utm_source=help_content" target="_blank" rel="noopener">Talend                products</a>.</p></li><li><p>MapReduce: see <a href="http://127.0.0.1:59832/help/ntopic/org.talend.help.filterrow/guide/components/en/lkv1572276420081.html#nip1550478042752" target="_blank" rel="noopener">tFilterRow MapReduce properties (deprecated)</a>.</p><p>The component in this framework is available in all <a href="https://www.talend.com/products/big-data/big-data-compare-all?utm_medium=help&utm_source=help_content" target="_blank" rel="noopener">subscription-based Talend products with Big Data</a>                   and <a href="https://www.talend.com/products/data-fabric?utm_medium=help&utm_source=help_content" target="_blank" rel="noopener">Talend Data Fabric</a>.</p></li><li><p>Spark Batch:            see <a href="http://127.0.0.1:59832/help/ntopic/org.talend.help.filterrow/guide/components/en/lkv1572276420081.html#fjg1550478042830" target="_blank" rel="noopener">tFilterRow properties for Apache Spark Batch</a>.</p><p>The component in this framework is available in all <a href="https://www.talend.com/products/big-data/big-data-compare-all?utm_medium=help&utm_source=help_content" target="_blank" rel="noopener">subscription-based Talend products with Big Data</a>                   and <a href="https://www.talend.com/products/data-fabric?utm_medium=help&utm_source=help_content" target="_blank" rel="noopener">Talend Data Fabric</a>.</p></li><li><p>Spark Streaming:                see <a href="http://127.0.0.1:59832/help/ntopic/org.talend.help.filterrow/guide/components/en/lkv1572276420081.html#xqd1550478042939" target="_blank" rel="noopener">tFilterRow properties for Apache Spark Streaming</a>.</p><p>This component is available in <a href="https://www.talend.com/products/big-data/real-time-big-data/?utm_medium=help&utm_source=help_content" target="_blank" rel="noopener">Talend Real Time Big Data Platform</a> and <a href="https://www.talend.com/products/data-fabric?utm_medium=help&utm_source=help_content" target="_blank" rel="noopener">Talend Data Fabric</a>.</p></li><li><p>Storm: see <a href="http://127.0.0.1:59832/help/ntopic/org.talend.help.filterrow/guide/components/en/lkv1572276420081.html#ejs1550478043064" target="_blank" rel="noopener">tFilterRow Storm properties (deprecated)</a>.</p><p>This component is available in <a href="https://www.talend.com/products/big-data/real-time-big-data/?utm_medium=help&utm_source=help_content" target="_blank" rel="noopener">Talend Real Time Big Data Platform</a> and <a href="https://www.talend.com/products/data-fabric?utm_medium=help&utm_source=help_content" target="_blank" rel="noopener">Talend Data Fabric</a>.</p></li></ul><h4 id="Demo1-使用简单的条件筛选名称列表"><a href="#Demo1-使用简单的条件筛选名称列表" class="headerlink" title="Demo1 - 使用简单的条件筛选名称列表"></a>Demo1 - 使用简单的条件筛选名称列表</h4><p>示例：创建工作使用简单的条件来对记录列表进行筛选，并将输出两个表：第一个表将列出所有last name少于9个字母并且年龄在10-80岁间的所有男性；第二个表将列出所有不符合筛选要求的记录。同时每个未满足筛选条件的记录还会有一条错误信息来说明该记录为何被剔除。</p><ol><li><p>创建job.</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrr90g2ggj30fs07r74h.jpg" alt="png"></p></li><li><p>配置job.</p><p>①tFixedFlowInput组件.</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrrbqmdadj30eu0awglu.jpg" alt="png"></p><p>选择Use Inline Content(delimited file)选项，并将输入数据填入内容框.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Van Buren;M;73;Chicago</span><br><span class="line">Adams;M;40;Albany</span><br><span class="line">Jefferson;F;66;New York</span><br><span class="line">Adams;M;9;Albany</span><br><span class="line">Jefferson;M;30;Chicago</span><br><span class="line">Carter;F;26;Chicago</span><br><span class="line">Harrison;M;40;New York</span><br><span class="line">Roosevelt;F;15;Chicago</span><br><span class="line">Monroe;M;8;Boston</span><br><span class="line">Arthur;M;20;Albany</span><br><span class="line">Pierce;M;18;New York</span><br><span class="line">Quincy;F;83;Albany</span><br><span class="line">McKinley;M;70;Boston</span><br><span class="line">Coolidge;M;4;Chicago</span><br><span class="line">Monroe;M;60;Chicago</span><br></pre></td></tr></table></figure></li></ol><p>   <img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrrdub3d7j30kn0fwdgn.jpg" alt=""></p><p>   ② tFilterRow组件</p><p>   填入筛选条件，并选择逻辑操作符<code>And</code>表示兼顾所有筛选条件.</p><p>   <img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrrhbhhw9j30mz0g4750.jpg" alt="png"></p><p>   ③ tLogRow组件</p><p>   选择<code>Table(print values in cells of a table)</code>.</p><p>   <img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrrmf3efnj30ip0e33z1.jpg" alt="png"></p><h4 id="Demo2-通过不同的逻辑操作符过滤名称列表"><a href="#Demo2-通过不同的逻辑操作符过滤名称列表" class="headerlink" title="Demo2 - 通过不同的逻辑操作符过滤名称列表"></a>Demo2 - 通过不同的逻辑操作符过滤名称列表</h4><p>示例：基于上一个场景，进一步过滤输入数据，以便只接受来自纽约和芝加哥的人员的记录。在不更改前一个场景中所定义的筛选器设置情况下，在此场景中添加了高级条件，以便于在同一个tFilterRow组件中同时启用逻辑与和逻辑或操作。</p><ol><li><p>复制上一步的job.</p></li><li><p>使用<code>高级模式</code>，并键入下列代码来补充筛选条件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">input_row.City.equals(&quot;Chicago&quot;) || input_row.City.equals(&quot;New York&quot;)</span><br></pre></td></tr></table></figure></li></ol><p>   其中使用了逻辑操作符OR。</p><ol start="3"><li><p>保存job并运行：</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrt6xbzkgj30lw0fi74t.jpg" alt="png"></p></li></ol><h2 id="tSplitRow"><a href="#tSplitRow" class="headerlink" title="tSplitRow"></a>tSplitRow</h2><p><code>将一个输入行分割为多个输出行</code></p><h4 id="Demo1-Splitting-one-row-into-two-rows"><a href="#Demo1-Splitting-one-row-into-two-rows" class="headerlink" title="Demo1 - Splitting one row into two rows"></a>Demo1 - Splitting one row into two rows</h4><p>示例：一行包含两个公司信息的数据被分为两行。</p><ol><li><p>创建job.</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrtksfop6j30g203l3yj.jpg" alt="png"></p></li><li><p>配置job.</p><p>① 组件tFixedFlowInput.</p><p>选择Mode中的Use Inline Content(delimited file)，并填入输入数据:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Talend;LA;California;537;5thAvenue;IT;Lionbridge;Memphis;Tennessee;537;LincolnRoad;IT Service;</span><br></pre></td></tr></table></figure></li></ol><p>   <img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrto2eluij30lh0doaai.jpg" alt="png"></p><p>   Schema添加字段.<img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrtse5b4zj30h70ewdg9.jpg" alt="png"></p><p>   ② 组件tSplitRow.</p><p>   使用<code>Edit Schema</code>为output data设置schema.</p><p>   <img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggru4nnr28j30qm0eegmd.jpg" alt=".png"></p><p>   在列映射中填入下列值：</p>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Company: row1.Company, row1.Company2;</span><br><span class="line">Country: row1.CountryCode, row1.CountryCode2;</span><br><span class="line">Address: row1.Street+&quot;,&quot;+row1.City+&quot;,&quot;+row1.State, row1.Street2+&quot;,&quot;+row1.City2+&quot;,&quot;+row1.State2;</span><br><span class="line">Industry: row1.Industry, row1.Industry2;</span><br></pre></td></tr></table></figure><p>   <img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggruhjx8xtj30xq07s0ta.jpg" alt="png"></p><p>   ③ tLogRow组件.</p><p>   选择Table(print values in cells of a table), 然后点击<code>同步列</code>。</p><ol start="3"><li><p>保存job并运行.</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggruqb8jblj30od0pi0tt.jpg" alt="png"></p></li></ol><h2 id="tMap"><a href="#tMap" class="headerlink" title="tMap"></a>tMap</h2><p><code>将数据从单个或多个源转换和路由到单个或多个目的地</code></p><h4 id="Demo-电影导演信息整理"><a href="#Demo-电影导演信息整理" class="headerlink" title="Demo - 电影导演信息整理"></a>Demo - 电影导演信息整理</h4><p><a href="https://saipeng-li.github.io/2020/07/14/2020-07-14-Talend-%E5%88%9B%E5%BB%BA%E7%AC%AC%E4%B8%80%E4%BB%BD%E4%BD%9C%E4%B8%9A/" target="_blank" rel="noopener">https://saipeng-li.github.io/2020/07/14/2020-07-14-Talend-%E5%88%9B%E5%BB%BA%E7%AC%AC%E4%B8%80%E4%BB%BD%E4%BD%9C%E4%B8%9A/</a> </p><h2 id="tAggregateSortedRow-amp-tSortRow"><a href="#tAggregateSortedRow-amp-tSortRow" class="headerlink" title="tAggregateSortedRow &amp; tSortRow"></a>tAggregateSortedRow &amp; tSortRow</h2><p><code>tAggregateSortedRow: 根据一组操作聚合已排序的输入数据得到输出列。每个输出列都由所需的多行，要执行的操作和要从中获取数据的输入列所配置，以便更好地进行数据聚合。</code></p><ol><li><p>创建job.</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggry8r2s3cj30pd0480sw.jpg" alt="png"></p></li><li><p>配置job.</p><p>① tFixedFlowInput组件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1;Thomas;28;Component Team</span><br><span class="line">2;Harry;32;Doc Team</span><br><span class="line">3;John;26;Component Team</span><br><span class="line">4;Nicolas;27;QA Team</span><br><span class="line">5;George;24;Component Team</span><br><span class="line">6;Peter;30;Doc Team</span><br><span class="line">7;Teddy;23;QA Team</span><br><span class="line">8;Jame;26;Component Team</span><br></pre></td></tr></table></figure></li></ol><p>   <img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrychsaoyj30pd0ao0t6.jpg" alt="png"></p><p>   编辑schema.</p><p>   <img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrydug5pej30hs0awt8z.jpg" alt="png"></p><p>   ② tSortRow组件.<img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggryge4q4tj30qd0c70ta.jpg" alt="png"></p><p>   ③ tLogRow组件.</p><p>   选择Table(print values in cells of a table).</p><p>   ④ tAggregateSortedRow组件</p><p>   <img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggryk4lvh9j30rc0awq3h.jpg" alt="png"></p><p>   分别列出操作<code>AggCount</code>,<code>MinAge</code>,<code>MaxAge</code>,<code>AvgAge</code>.</p><p>   <img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrymmqvu9j30q20cc0td.jpg" alt="png"></p><p>   ⑤ tLogRow组件</p><p>   选择Table(print values in cells of a table).</p><ol start="3"><li><p>保存job并运行.</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggryt8psdyj30jb0hggmb.jpg" alt="png"></p></li></ol><h2 id="tConvertType"><a href="#tConvertType" class="headerlink" title="tConvertType"></a>tConvertType</h2><p><code>将一种Talend java类型自动转换为另一种类型，从而避免编译错误.</code></p><ol><li><p>创建job.</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggryzes7a7j30jq03gglo.jpg" alt="png"></p></li><li><p>配置job.</p><p>① tFileInputDelimited组件.</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrz2g2iv3j306q030a9x.jpg" alt="png"></p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrz430816j30lu082t94.jpg" alt="png"></p><p>编辑schema.</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrz5tguloj30ic0awq37.jpg" alt="png"></p><p>② tConvertType组件</p><p>选择内置(<code>Built in</code>)schema并点击<code>列同步</code>，然后编辑schema.</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrz7yzeltj30rc0aw74r.jpg" alt="png"></p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrz9ryehbj30mc07kaad.jpg" alt="png"></p><p>③ tMap组件.</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrzdinnvjj30sx0smdh1.jpg" alt="png"></p><p>④ tLogRow组件.</p><p>选择Table(print values in cells of a table)</p></li><li><p>保存job并运行.</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrzv4auk1j30h409hweq.jpg" alt="png"></p></li></ol><h2 id="tExternalSortRow"><a href="#tExternalSortRow" class="headerlink" title="tExternalSortRow"></a>tExternalSortRow</h2><p><code>使用外部排序应用程序，根据排序类型和顺序，基于一列或几列来对输入数据进行排序.</code></p><h2 id="tFilterColumns"><a href="#tFilterColumns" class="headerlink" title="tFilterColumns"></a>tFilterColumns</h2><p><code>通过对列排序、删除不需要的列或添加新列来同质化模式(schema).</code></p><h2 id="tJoin"><a href="#tJoin" class="headerlink" title="tJoin"></a>tJoin</h2><p><code>在主数据流和查找流之间执行内部或外部连接.</code></p><p>tJoin通过在几个列上执行精准匹配来连接两个表。它将主流中的列于查找流中的列进行比较，并输出主流数据和/或被拒绝的数据。</p><h4 id="Demo-对两列进行精确匹配，并输出主数据和被拒绝数据"><a href="#Demo-对两列进行精确匹配，并输出主数据和被拒绝数据" class="headerlink" title="Demo - 对两列进行精确匹配，并输出主数据和被拒绝数据"></a>Demo - 对两列进行精确匹配，并输出主数据和被拒绝数据</h4><p>示例：在引用的输入文件数据中的firstnameClient列，以及lastnameClient列进行精确匹配。精确匹配的输出写在两个单独的文件，精确的数据写在一个Excel文件中，不精确的数据写在一个分隔的文件中。</p><ol><li><p>创建job.</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggs0hnvjyuj30dw06vjru.jpg" alt="png"></p></li><li><p>配置job.</p><p>① tFileInputDelimited组件(Main_Input).</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;people.csv</span><br><span class="line"></span><br><span class="line">FirstName;LastName;HouseNo;Street;City</span><br><span class="line">Gerald;Roosevelt;48;Fairview Avenue;Oklahoma City</span><br><span class="line">Benjamin;Harrison;27;Katella Avenue;Little Rock</span><br><span class="line">Bob;Clinton;11;Bowles Avenue;Raleigh</span><br><span class="line">James;Quincy;45;Cerrillos Road;Saint Paul</span><br><span class="line">Gerald;Harrison;27;Katella Avenue;Little Rock</span><br><span class="line">Harry;Madison;85;Santa Monica Road;Raleigh</span><br><span class="line">Helen;Roosevelt;48;Fairview Avenue;Oklahoma City</span><br><span class="line">Mary;Clinton;11;Bowles Avenue;Raleigh</span><br><span class="line">Cathey;Quincy;45;Cerrillos Road;Saint Paul</span><br><span class="line">John;Smith;64;Market Street;Helena</span><br></pre></td></tr></table></figure></li></ol><p>   <img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggs0djc4soj30kx09rjrt.jpg" alt="png"></p><p>   编辑schema.</p><p>   <img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggs0gvsz02j30dq08ddgk.jpg" alt="png"></p><p>   ② tFileInputDelimited组件(Ref_Input).</p><p>   编辑schema,仅定义一个dynamic schema列：<code>FamilyInfo</code>。</p>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; the reference input file.</span><br><span class="line"></span><br><span class="line">LastName;HouseNo;Street;City</span><br><span class="line">Clinton;11;Bowles Avenue;Raleigh</span><br><span class="line">Quincy;45;Cerrillos Road;Saint Paul</span><br><span class="line">Smith;64;Market Street;Helena</span><br></pre></td></tr></table></figure><p>   ③ tJoin组件</p><p>   <img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggs0q1gj6pj30kq0913zj.jpg" alt="png"></p><p>   在键定义区域，选择你希望的输入列属性匹配的查询列属性，本例中<code>FamilyInfo</code>与<code>row2.FamilyInfo</code>进行匹配。</p><p>   <img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggs0plmwmwj30fu093q3v.jpg" alt="png"></p><p>   确保<code>Inner join(with reject output)</code>|<code>内连接(带有拒绝输出)</code>被选中。</p><p>   ④ tLogRow组件</p><ol start="3"><li><p>保存job并运行。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggs0vi2xblj30fd0c1wg6.jpg" alt="png"></p></li></ol><h2 id="tReplace"><a href="#tReplace" class="headerlink" title="tReplace"></a>tReplace</h2><p><code>在进一步处理之前清除所有文件. 在定义的输入列中执行搜索和替换操作.</code></p><h4 id="Demo-清理和过滤CSV文件"><a href="#Demo-清理和过滤CSV文件" class="headerlink" title="Demo - 清理和过滤CSV文件"></a>Demo - 清理和过滤CSV文件</h4><p>示例： 在CSV文件中搜索并替换各种拼写错误和缺陷，然后执行列过滤并生成带有最终输出的新csv文件。</p><ol><li><p>创建job.</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggs114sxb5j30ex0583yt.jpg" alt="png"></p></li><li><p>配置job.</p><p>① tFileInputDelimited组件.</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggs12jr7gzj30f2053q39.jpg" alt="png"></p><p>② tReplace组件.</p><p>文件中包含以下错误：</p><p><code>Nikson</code> -&gt; <code>Nikxon</code></p><p><code>streat</code> -&gt; <code>Street</code>  …</p><p>在tReplace组件中设置search&amp;replace参数:</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggs15d0sesj30g206haam.jpg" alt="png"></p><p>③ tFilterColumn组件.</p><p>tFilterColumn组件中有一个模式编辑器，允许根据输入schema的列名构建输出schema。本例中添加一个名为empty_field的新列，并更改输入schema列的顺序，得到如下schema:<code>empty_field</code>,<code>Firstname</code>,<code>Name</code>,<code>Street</code>,<code>Amount</code>.</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggs1afc68yj30q709uabg.jpg" alt="png"></p><p>④tFileOutputDelimited组件</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggs1f0elaaj30dq045dg1.jpg" alt="png"></p></li><li><p>保存job并运行</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggs1fhg76pj30b303owes.jpg" alt="png"></p></li></ol><h2 id="tSampleRow"><a href="#tSampleRow" class="headerlink" title="tSampleRow"></a>tSampleRow</h2><p><code>根据单行列表和/或多行列表选择行.</code></p><h4 id="Demo-过滤行和行组"><a href="#Demo-过滤行和行组" class="headerlink" title="Demo - 过滤行和行组"></a>Demo - 过滤行和行组</h4><p>示例：<code>tRowGenerator</code>用于创建随机条目，这些随机条目被直接发送到<code>tSampleRow</code>,在<code>tSampleRow</code>中根据定义的范围对它们进行过滤。本例中，假设输入流包含销售人员姓名、他们各自销售的产品数量以及他们在企业中的工作年限。</p><ol><li><p>创建job.</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggs1jey31tj30as030t8q.jpg" alt="png"></p></li><li><p>配置job.</p><p>① tRowgenerator组件.</p><p>编辑schema.</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggs1oijvtnj30bs07bgm9.jpg" alt="png"></p><p>在RowGenerator Editor中, 在<code>Number of Rows for RowGenerator</code>中指定希望生成的行数。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggs1q9bz2lj30h205fdgg.jpg" alt="png"></p><p>② tSampleRow组件.</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggs1re3jh5j30dc05kt93.jpg" alt="png"></p><p>设置<code>Built-In</code>的schema, 并点击<code>列同步</code>。在<code>Range</code>中，设置筛选器进行行选择。本例中，选择了第1、5、9-12的一组行。</p></li><li><p>保存job并运行.</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggs1up9zdtj30cg05rmxm.jpg" alt="png"></p></li></ol><h2 id="tXMLMap"><a href="#tXMLMap" class="headerlink" title="tXMLMap"></a>tXMLMap</h2><p><code>将数据从单个或多个源转换和路由到单个或多个目的地.</code></p><p><code>tXMLMap是一个经过优化的高级组件，用于转换和路由XML数据流(文档类型的数据)，特别是在处理大量XML数据源时.</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Processing目录组件&quot;&gt;&lt;a href=&quot;#Processing目录组件&quot; class=&quot;headerlink&quot; title=&quot;Processing目录组件&quot;&gt;&lt;/a&gt;Processing目录组件&lt;/h2&gt;&lt;p&gt;目标：了解Processing目录下组件如何
      
    
    </summary>
    
    
      <category term="Talend" scheme="http://yoursite.com/categories/Talend/"/>
    
    
      <category term="Talend" scheme="http://yoursite.com/tags/Talend/"/>
    
  </entry>
  
  <entry>
    <title>组件入门</title>
    <link href="http://yoursite.com/2020/07/15/2020-07-16-Talend-%E7%BB%84%E4%BB%B6%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2020/07/15/2020-07-16-Talend-%E7%BB%84%E4%BB%B6%E5%85%A5%E9%97%A8/</id>
    <published>2020-07-15T05:36:00.000Z</published>
    <updated>2020-07-15T05:43:47.554Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Talend-——-组件入门"><a href="#Talend-——-组件入门" class="headerlink" title="Talend —— 组件入门"></a>Talend —— 组件入门</h1><blockquote><p><a href="https://talend.github.io/component-runtime/main/1.1.22/tutorial-create-my-first-component.html" target="_blank" rel="noopener">https://talend.github.io/component-runtime/main/1.1.22/tutorial-create-my-first-component.html</a> </p></blockquote><h2 id="Talend组件套件"><a href="#Talend组件套件" class="headerlink" title="Talend组件套件"></a>Talend组件套件</h2><p>Talend Component Kit是个Java框架，从两个级别上简化组件的开发：</p><ul><li><strong>运行时</strong>：运行时是关于将特定的组件代码注入作业或管道中。该框架有助于尽可能地统一在数据集成（DI）和BEAM环境中运行所需的代码。 </li><li><strong>图形界面</strong>：该框架有助于统一所需的代码，以便能够在浏览器（Web）或基于Eclipse的Studio（SWT）中呈现组件。 </li></ul><p>开发的大部分内容是作为Maven或Gradle项目进行的，并且需要诸如IntelliJ之类的专用工具。</p><p>组件套件由以下组件制成：</p><ul><li>入门程序（Starter）是一个图形界面，可用于定义开发项目的框架。</li><li>用于实现组件UI和运行时的API。</li><li>开发工具：Maven和Gradle包装器，验证规则，打包，Web预览等。</li><li>基于JUnit 4和5的测试套件。</li></ul><p>通过在基本开发环境中使用此工具，可以开始创建组件。</p><h2 id="Talend组件套件方法论"><a href="#Talend组件套件方法论" class="headerlink" title="Talend组件套件方法论"></a>Talend组件套件方法论</h2><p>使用组件工具包框架开发新组件包括：</p><ol><li>使用<a href="https://starter-toolkit.talend.io/" target="_blank" rel="noopener">启动程序</a>或<a href="https://talend.github.io/component-runtime/main/1.1.22/installing-talend-intellij-plugin.html" target="_blank" rel="noopener">Talend IntelliJ插件</a><a href="https://talend.github.io/component-runtime/main/1.1.22/index-generating-project.html" target="_blank" rel="noopener">创建项目</a>。此步骤允许构建项目的框架。它包括：<ol><li>为项目中的每个组件定义常规配置模型</li><li>从入门者生成和下载项目档案</li><li>编译项目</li></ol></li><li>在您的IDE中导入已编译的项目。如果您已经使用IntelliJ插件生成了项目，则不需要此步骤。</li><li><a href="https://talend.github.io/component-runtime/main/1.1.22/index-creating-components.html" target="_blank" rel="noopener">实现组件</a>，包括：<ol><li>通过指定组件的元数据来注册组件：族，类别，版本，图标，类型和名称。</li><li>定义组件的布局和可配置部分</li><li>定义组件的执行逻辑，也称为运行时。</li></ol></li><li><a href="https://talend.github.io/component-runtime/main/1.1.22/index-testing-components.html" target="_blank" rel="noopener">测试组件</a>。</li><li><a href="https://talend.github.io/component-runtime/main/1.1.22/index-deploying-components.html" target="_blank" rel="noopener">将组件部署</a>到Talend Studio或Cloud应用程序。</li></ol><h2 id="组件类型"><a href="#组件类型" class="headerlink" title="组件类型"></a>组件类型</h2><p>组件共有三种类型，每种类型都有其特殊性，尤其是在运行时。</p><ul><li><strong>输入组件</strong>：从定义的源检索要处理的数据。输入组件由以下组成：<ul><li><strong>组件的执行逻辑</strong>，由<code>Mapper</code>或<code>Emitter</code>类表示。</li><li><strong>组件的源逻辑</strong>，由<code>Source</code>类表示。</li><li><strong>组件的布局和最终用户在使用组件时需要提供的配置</strong>（由<code>Configuration</code>类定义）。所有输入组件都必须在其配置中指定一个数据集，并且每个数据集都必须使用一个数据存储。</li></ul></li><li><strong>处理器</strong>：处理和转换数据。处理器由以下材料制成：<ul><li><strong>组件的执行逻辑</strong>，描述如何处理其接收的每个记录或记录的批次。它还描述了如何将记录传递到其输出连接。此逻辑在<code>Processor</code>类中定义。</li><li><strong>组件的布局和最终用户在使用组件时需要提供的配置</strong>（由<code>Configuration</code>类定义）。</li></ul></li><li><strong>输出组件</strong>：将处理后的数据发送到定义的目的地。输出组件由以下组成：<ul><li><strong>组件的执行逻辑</strong>，描述如何处理其接收的每个记录或记录的批次。此逻辑在<code>Output</code>类中定义。与处理器不同，输出组件是执行的最后一个组件，不返回任何数据。</li><li><strong>组件的布局和最终用户在使用组件时需要提供的配置</strong>（由<code>Configuration</code>类定义）。所有输入组件都必须在其配置中指定一个数据集，并且每个数据集都必须使用一个数据存储。</li></ul></li></ul><h2 id="创建第一个组件"><a href="#创建第一个组件" class="headerlink" title="创建第一个组件"></a>创建第一个组件</h2><p>本例所创建的组件是一个简单的处理器组件，该组件<strong>从上一组件接收数据并将其显示在日志中，以及用户输入的其他信息</strong>。</p><h3 id="开发环境："><a href="#开发环境：" class="headerlink" title="开发环境："></a>开发环境：</h3><ul><li>Java JDK 1.8或更高版本;</li><li>Talend Open Studio;</li><li>下载并安装IntelliJ;</li><li><a href="https://talend.github.io/component-runtime/main/1.1.22/installing-talend-intellij-plugin.html" target="_blank" rel="noopener">下载IntelliJ的Talend Component Kit插件</a>.</li></ul><h3 id="生成一个简单的组件项目"><a href="#生成一个简单的组件项目" class="headerlink" title="生成一个简单的组件项目"></a>生成一个简单的组件项目</h3><ol><li><p>启动IntelliJ并创建一个新项目。在可用选项中，您应该看到<strong>Talend Component</strong>。 </p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggql2eqatzj30js0et0ui.jpg" alt="png"></p></li><li><p>确保已选择<strong>Project SDK</strong>。然后，选择<strong>Talend组件</strong>，然后单击<strong>下一步</strong>。<br>在<strong>拓蓝组件工具包入门</strong>打开。</p></li><li><p>输入项目详细信息。这里的目标是定义组件和项目元数据。更改默认值，如下所示：</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggql7qkrbxj30y10o2di9.jpg" alt="png"></p><ul><li>该<strong>组件家庭</strong>和<strong>类别</strong>将在Talend Open Studio的后来被用来寻找新的组件。</li><li>项目元数据主要用于标识项目结构。一种常见的做法是将默认值中的“公司”替换为您自己的值，例如域名。</li></ul></li><li><p>填充完元数据后，选择<strong>添加组件</strong>。<strong>Talend组件工具包启动器</strong>中将显示一个新屏幕，可让您定义组件的常规配置。默认情况下，新组件是处理器， </p></li><li><p>输入组件的有效Java名称。例如，<strong>Logger</strong>。 </p></li><li><p>选择<strong>配置模型，</strong>然后添加一个名为的字符串字段<code>level</code>。该输入字段将在组件配置中用于输入其他信息以显示在日志中。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqlt0e39zj314j0ndgnm.jpg" alt="png"></p></li><li><p>在“ <strong>输入/输出”</strong>部分中，单击默认的<strong>MAIN</strong>输入分支以访问其详细信息，并确保将记录模型设置为<strong>Generic</strong>。保留分支<strong>名称</strong>为其默认<code>MAIN</code>值。 </p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqlu19idaj314j0ndtak.jpg" alt="png"></p></li><li><p>对默认的<strong>MAIN</strong>输出分支重复相同的步骤。</p><blockquote><p>因为组件是处理器，所以默认情况下它具有输出分支。没有任何输出分支的处理器被视为输出组件。选择“ <strong>激活IO”</strong>选项时，可以创建输出组件。 </p></blockquote></li><li><p>单击“ <strong>下一步”</strong>，检查项目的名称和位置，然后单击“ <strong>完成”</strong>以在IDE中生成项目。 </p></li></ol><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqlw3esrkj31hc0smnpd.jpg" alt="png"></p><p>至此，您的组件在技术上已经准备好进行编译并部署到Talend Open Studio。</p><ul><li>根据在<strong>Talend Component Kit Starter中</strong>定义的组件的名称和类型，生成了两个类：<ul><li><code>LoggerProcessor</code>是定义组件逻辑的地方;</li><li><code>LoggerProcessorConfiguration</code>是定义组件布局和可配置字段的位置，其中包括在组件的配置模型中较早定义的<code>level</code>字符串字段.</li></ul></li><li>该<strong>package-info.java</strong>文件包含了在<strong>Talend组件工具包入门</strong>中所定义的组件元数据，如家庭和类别。</li><li>您还可以注意到，树结构中的元素是以在<strong>Talend Component Kit Starter</strong>定义的项目元数据命名的。</li></ul><p>如果以后需要编辑组件的配置，逻辑和元数据，则这些文件是起点。</p><h3 id="将组件编译并部署到Talend-Open-Studio"><a href="#将组件编译并部署到Talend-Open-Studio" class="headerlink" title="将组件编译并部署到Talend Open Studio"></a>将组件编译并部署到Talend Open Studio</h3><p>无需对组件代码进行任何修改，就可以编译项目并将组件部署到Talend Open Studio的本地实例。</p><p>这样，很容易检查Studio中可见的内容是否符合预期。</p><blockquote><p>在开始运行任何命令之前，请确保Talend Open Studio未运行。 </p></blockquote><ol><li><p>从IntelliJ中的组件项目中，打开一个终端，并确保所选目录是项目的根目录。</p></li><li><p>通过运行以下命令编译项目：<code>mvnw clean install</code>。 该<code>mvnw</code>命令引用了Talend Component Kit随附的Maven包装器。它允许为您的项目使用正确版本的Maven，而无需事先手动安装。等效包装器可用于Gradle。</p><p>IDEA中配置好Maven环境： </p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqrh47ej7j30y50ohgnj.jpg" alt="png"></p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqrhpixhqj31hc0sm79v.jpg" alt="png"></p></li><li><p>一旦执行了命令，并且在终端中看到了<strong>BUILD SUCCESS</strong>，请使用以下命令将组件部署到Talend Open Studio的本地实例： </p><p><code>mvnw talend-component:deploy-in-studio -Dtalend.component.studioHome=&quot;&lt;path to Talend Open Studio home&gt;&quot;</code> </p><p>如本例：</p><p><code>mvnw talend-component:deploy-in-studio -Dtalend.component.studioHome=&quot;F:\Talend-Pro\studio-se-master\build\talend.studio.tos.di.product\target\products\org.talend.studio.tos.di.product\win32\win32\TOS_DI-20200629_1603-V7.4.1SNAPSHOT&quot;</code></p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqrm37g8jj31hc0smdl8.jpg" alt="png"></p></li><li><p>确保构建成功。 </p></li><li><p>打开<code>Talend Open Studio</code>并创建一个新的Job：</p><ul><li>新组件位于<strong>Talend组件工具包入门版</strong>中指定的新系列和类别中。您可以将其添加到作业中并打开其设置。</li><li>请注意，出现了在<strong>Talend Component Kit Starter中</strong>组件的配置模型中指定的<code>level</code>字段。</li></ul><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqv0jcjubj31hc0sm77u.jpg" alt="png"></p><p>此时，您的新组件可在Talend Open Studio中使用，并且其可配置部分已经设置。但是组件逻辑仍有待定义。</p></li></ol><h3 id="编辑组件"><a href="#编辑组件" class="headerlink" title="编辑组件"></a>编辑组件</h3><p>现在，您可以编辑组件以实现简单的逻辑：<strong>读取组件输入分支中包含的数据，以向其显示作业的执行日志。组件的级别字段的值也需要显示并更改为大写</strong>。 </p><ol><li><p>保存先前创建的作业，然后关闭Talend Open Studio。 </p></li><li><p>返回IntelliJ，打开<strong>LoggerProcessor</strong>类。这是可以定义组件逻辑的类。</p></li><li><p>寻找<code>@ElementListener</code>方法。它已经存在，并且引用了<strong>Talend Component Kit Starter中</strong>定义的默认输入分支，但尚未完成。 </p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqv6anrpwj30te05lt92.jpg" alt=""></p></li><li><p>为了能够将输入中的数据记录到控制台，请添加以下行： </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Log to the console </span></span><br><span class="line">System.out.println(<span class="string">"["</span>+configuration.getLevel().toUpperCase()+<span class="string">"] "</span>+defaultInput);</span><br></pre></td></tr></table></figure></li></ol><p>   <code>@ElementListener</code>现在，该方法如下所示： </p>   <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ElementListener</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNext</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        @Input <span class="keyword">final</span> Record defaultInput,</span></span></span><br><span class="line"><span class="function"><span class="params">        @Output <span class="keyword">final</span> OutputEmitter&lt;Record&gt; defaultOutput)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// this is the method allowing you to handle the input(s) and emit the output(s)</span></span><br><span class="line">        <span class="comment">// after some custom logic you put here, to send a value to next element you can use an</span></span><br><span class="line">        <span class="comment">// output parameter and call emit(value).</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//Log to the console</span></span><br><span class="line">    System.out.println(<span class="string">"["</span>+configuration.getLevel().toUpperCase()+<span class="string">"] "</span>+defaultInput);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="5"><li><p>再次打开终端以编译项目并再次部署组件。为此，请依次运行以下两个命令:</p><ul><li><code>mvnw clean install</code></li></ul><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqvmilz4bj30wq0sm42t.jpg" alt="png"></p><ul><li>``mvnw talend-component:deploy-in-studio -Dtalend.component.studioHome=”<path to Talend Open Studio home>“ `</li></ul><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqvosnrs1j30sr0smae6.jpg" alt="png"></p><p>现在应该将组件逻辑的更新部署到Studio。重新启动Studio后，您将准备构建作业并首次使用组件。 </p></li></ol><h3 id="使用组件构建工作"><a href="#使用组件构建工作" class="headerlink" title="使用组件构建工作"></a>使用组件构建工作</h3><p>现在可以使用该组件了，现在该创建作业并检查其行为是否符合预期。</p><ol><li>再次打开Talend Open Studio，然后转到先前创建的作业。新组件仍然存在。 </li><li>添加一个<strong>tRowGenerator</strong>组件并将其连接到记录器。 </li><li>双击<strong>tRowGenerator</strong>以指定要生成的数据：<ul><li>添加名为的第一列，<code>firstName</code>然后选择<strong>TalendDataGenerator.getFirstName（）</strong>函数。</li><li>添加第二个名为“ lastName”的列，然后选择<strong>TalendDataGenerator.getLastName（）</strong>函数。</li><li>将<strong>RowGenerator的行数</strong>设置为<code>10</code>。</li></ul></li></ol><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrl6w6kmnj30oq0gg0t5.jpg" alt="png"></p><ol start="4"><li><p>验证<strong>tRowGenerator</strong>配置。</p></li><li><p>打开<strong>TutorialFamilyLogger</strong>组件，并将<strong>level</strong>字段设置为<code>info</code>。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrl81oatuj30qo0smtbl.jpg" alt="png"></p></li><li><p>转到作业的<strong>“运行”</strong>选项卡并运行作业。 作业已执行。您可以在控制台中观察到已记录的10条生成的行中的每一行都已记录，并且<code>info</code>在记录器中输入的值也与每条记录一起以大写形式显示。 </p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggrlc3wbokj31hc0smgpv.jpg" alt="png"></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Talend-——-组件入门&quot;&gt;&lt;a href=&quot;#Talend-——-组件入门&quot; class=&quot;headerlink&quot; title=&quot;Talend —— 组件入门&quot;&gt;&lt;/a&gt;Talend —— 组件入门&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
      <category term="Talend" scheme="http://yoursite.com/categories/Talend/"/>
    
    
      <category term="Talend" scheme="http://yoursite.com/tags/Talend/"/>
    
  </entry>
  
  <entry>
    <title>创建第一份作业</title>
    <link href="http://yoursite.com/2020/07/14/2020-07-14-Talend-%E5%88%9B%E5%BB%BA%E7%AC%AC%E4%B8%80%E4%BB%BD%E4%BD%9C%E4%B8%9A/"/>
    <id>http://yoursite.com/2020/07/14/2020-07-14-Talend-%E5%88%9B%E5%BB%BA%E7%AC%AC%E4%B8%80%E4%BB%BD%E4%BD%9C%E4%B8%9A/</id>
    <published>2020-07-14T14:56:00.000Z</published>
    <updated>2020-07-15T05:50:39.086Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Talend-——-创建第一份作业"><a href="#Talend-——-创建第一份作业" class="headerlink" title="Talend —— 创建第一份作业"></a>Talend —— 创建第一份作业</h1><blockquote><p><a href="https://help.talend.com/reader/03R8Bxnby~n6dlhgIgQEDw/QceMGWhkrMO82TyumzJx6Q" target="_blank" rel="noopener">https://help.talend.com/reader/03R8Bxnby~n6dlhgIgQEDw/QceMGWhkrMO82TyumzJx6Q</a> </p></blockquote><p>本文主要介绍：在文件夹中创建名为<code>getting_started</code>的作业文件夹和名为<code>movies</code>的作业。</p><h2 id="创建作业"><a href="#创建作业" class="headerlink" title="创建作业"></a>创建作业</h2><ol><li><p>在 <code>Repository</code> (存储库) 树视图中，右键单击 <code>Job Designs</code> (作业设计) 节点，然后从上下文菜单中选择 <code>Create folder</code> (创建文件夹)。</p></li><li><p>在 <code>New Folder</code> (新建文件夹) 向导中，将作业文件夹命名为 <code>getting_started</code> 并单击 <code>Finish</code> (完成) 创建文件夹。</p></li><li><p>右键单击 <code>getting_started</code> 文件夹并从上下文菜单中选择 <code>Create Job</code> (创建标准作业)。</p></li><li><p>在 <code>New Job</code> (新建作业) 向导中，为要创建的作业指定名称，并根据需要提供其他有用信息。</p><p>在本示例中，在 <code>Name</code> (名称) 字段输入 <code>movies</code> (影片)。</p></li></ol><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqdscptx8j30mq0eygmb.jpg" alt="jpg"></p><h2 id="拖放和连接组件"><a href="#拖放和连接组件" class="headerlink" title="拖放和连接组件"></a>拖放和连接组件</h2><ol><li><p>将一个 <code>tFileInputDelimited</code> 和一个 <code>tLogRow</code> 组件从 <code>Palette</code> (调色板) 拖放到设计工作区。</p><p>您可以在 <code>Palette</code> (调色板) 中 <code>File</code> (文件) 族的 <code>Input</code> (输入) 组中找到 <code>tFileInputDelimited</code> 组件，在 <code>Logs &amp; Errors</code> (日志和错误) 族中找到 <code>tLogRow</code> 组件。</p></li><li><p>单击 <code>tFileInputDelimited</code> 组件，即会显示 <code>o</code> 图标，将 <code>o</code> 图标拖放到 <code>tLogRow</code> 组件上。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqdwztfehj30dn03t3yg.jpg" alt=""></p><p>两个组件现在通过 <code>Row</code> (行) &gt; <code>Main</code> (主) 连接进行连接。</p></li></ol><h2 id="准备影片元数据"><a href="#准备影片元数据" class="headerlink" title="准备影片元数据"></a>准备影片元数据</h2><p>此示例说明如何在 Repository (存储库) 中设置源文件 movies.csv 的元数据。存储库元数据可以在作业中使用，让您快速配置作业，而无需手动定义每个参数和 schema。 </p><blockquote><p>数据准备：F:\movies.csv</p></blockquote><ol><li><p>在 <code>Repository</code> (存储库) 树视图中，展开 <code>Metadata</code> (元数据) 节点，右键单击 <code>File delimited</code> (分隔文件)，然后从上下文菜单中选择 <code>Create file delimited</code> (创建分隔文件) 以打开 <code>New Delimited File</code> (新建分隔文件) 向导。</p></li><li><p>在 <code>New Delimited File</code> (新建分隔文件) 向导中，输入文件元数据的名称 (在本示例中，是 <code>movies</code> [影片]) 以及其他有用信息，以更好地描述文件元数据，然后单击 Next (下一步) 继续下一步的操作并定义文件的常规属性。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqe868lxrj30ow0hzdgf.jpg" alt=""></p><p>在向导的这一步，<code>Name</code> (名称) 是唯一必填字段。将鼠标指针移到文件连接上时，Description (说明) 字段中提供的信息将显示为工具提示。</p></li><li><p>在 <code>File</code> (文件) 字段中，指定源文件的路径，或单击 Browse (浏览) 以浏览到该文件。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqe9f2jwjj30ow0hz75e.jpg" alt="png"></p><p>文件已加载，<code>File Viewer</code> (文件查看器) 区域显示文件摘要，您可以检查文件一致性、有无文件头以及文件的大体结构。</p></li><li><p>从 <code>Format</code> (格式) 列表中，选择操作系统，然后单击 Next (下一步) 解析文件。</p></li><li><p>在 <code>Preview</code> (预览) 选项卡上，选中 <code>Set heading row as column names</code> (将标题行设为列名) 复选框以从第一行获取文件列名，然后单击 <code>Refresh Preview</code> (刷新预览)。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqebgr3vfj30ow0ns3zz.jpg" alt="png"></p><p>此时将刷新文件预览，并自动选中 <code>Rows To Skip</code> (要跳过的行) 区域中的 <code>Header</code> (文件头) 复选框，并将要跳过的文件头行数加 1。</p></li><li><p>如果文件包含多个需要在文件解析中跳过的标题行，请在此字段中指定数字，然后再次单击 <code>Refresh Preview</code> (刷新预览)。</p></li><li><p>单击 Next (下一步) 获取文件 schema。</p><p><code>Description of the Schema</code> (Schema 描述) 表显示生成的文件 schema。</p></li><li><p>将 schema 命名为 <code>movies_schema</code> 并检查文件 schema，然后根据实际需要进行编辑。</p><p>在本示例中，增加 <code>title</code> (标题) 和 <code>url</code> 列的长度。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqeego62kj30ow0ns0to.jpg" alt="png"></p></li><li><p>单击 Finish (完成) 确认 schema 并关闭向导。</p><p>创建的文件元数据显示在 <code>Repository</code> (存储库) 树视图中。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqefra6h5j307z0dt3yw.jpg" alt="png"></p></li></ol><p>现在影片文件元数据即已准备就绪，可供使用。接下来，您需要将创建的元数据应用于读取源文件的组件。  </p><h2 id="配置和执行作业"><a href="#配置和执行作业" class="headerlink" title="配置和执行作业"></a>配置和执行作业</h2><p>本步骤说明如何使用上一过程创建的元数据配置组件并运行作业。</p><ol><li><p>在 <code>Repository</code> (存储库) 树视图中，双击作业 <code>movies</code> (影片) 以在设计工作区中将其打开。</p><p>如果作业已在设计工作区中打开并处于活动状态，则可以跳过此步骤。</p></li><li><p>在 <code>Repository</code> (存储库) 树视图中，展开 <code>Metadata</code> (元数据) &gt; <code>File delimited</code> (分隔文件)，然后将文件连接 <code>movies</code> (影片) 或其 <code>schema movies_schema</code> 拖放到设计工作区中的 <code>tFileInputDelimited</code> 组件上。系统询问您是否要将更改传播到输出组件时，单击 Yes (是)。</p><p>在 <code>Component</code> (组件) 视图的 <code>Basic settings</code> (基本设置) 选项卡中，可以看到组件的所有参数已自动填充。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqeqcicc8j30qp0awjs6.jpg" alt="png"></p></li><li><p>双击 <code>tLogRow</code> 组件，打开其 <code>Basic settings</code> (基本设置) 选项卡视图。</p></li><li><p>在 <code>Mode</code> (模式) 中，选择 <code>Vertical (each row is a key/value list)</code> (垂直 [每行是一个键/值列表]) 选项，以在 Run (运行) 控制台上更好地读取长字段。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqet9o42yj30mp0av74v.jpg" alt="png"></p></li><li><p>按下 F6 或单击 Run (运行) 视图中的 Run (运行) 按钮来执行作业。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqev0hf86j30xp0fbjry.jpg" alt="png"></p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqevpwi0fj30dg03v0sr.jpg" alt="png"></p><h2 id="筛选影片信息"><a href="#筛选影片信息" class="headerlink" title="筛选影片信息"></a>筛选影片信息</h2><p>此示例将可扩展<code>读取CSV文件中的影片信息</code>中所述的作业来筛选数据流，以便于仅获取<code>包含有效导演信息</code>的影片。</p><p>实现:</p><ul><li>如何复制作业;</li><li>如何通过在连接或设计工作区上键入组件名称来添加组件;</li><li>如何将元数据项目或其schema作为组件拖放到设计工作区;</li><li>如何使用tMap对数据流进行基本处理</li></ul><h3 id="准备导演文件元数据"><a href="#准备导演文件元数据" class="headerlink" title="准备导演文件元数据"></a>准备导演文件元数据</h3><blockquote><p>数据准备: F:\directors.txt</p></blockquote><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqfeli8prj30mp0fx3z1.jpg" alt="png"></p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqffdylfoj30mp0fx74w.jpg" alt="png"></p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqfgjwp21j30mp0lyt9x.jpg" alt=""></p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqfi6cg5tj30mp0lyt9h.jpg" alt="png"></p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqfjdp71zj307y0aaglr.jpg" alt="png"></p><p>现在，在设置组件读取引用文件时便可以使用导演文件元数据。</p><h3 id="复制现有作业"><a href="#复制现有作业" class="headerlink" title="复制现有作业"></a>复制现有作业</h3><p>之前，在<code>读取CSV文件中的影片信息</code>步骤中已经创建并成功执行了名为<code>movies</code>的作业。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqflwy7ssj30fb06pt8n.jpg" alt="png"></p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqfmb6q52j307t02oa9x.jpg" alt="png"></p><h3 id="添加映射组件"><a href="#添加映射组件" class="headerlink" title="添加映射组件"></a>添加映射组件</h3><p>此过程说明如何通过直接在现有连接上键入组件名称来添加映射组件。</p><ol><li><p>在名为 <code>filter_movies</code> 的新作业中，选择连接 <code>tFileInputDelimited</code> 和 <code>tLogRow</code> 组件的 <code>Row</code> (行) 连接，并键入 <code>tMap</code> 的名称或名称的一部分。</p><p>开始键入组件名称时，将显示与您的输入匹配的组件列表。除组件列表外，您可以选择一个组件来查看其描述。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqfs4csjtj30hu06pwer.jpg" alt="png"></p></li></ol></li></ol><ol start="2"><li><p>双击列表中的 <code>tMap</code>将其添加到连接。</p><p>新添加的 <code>tMap</code> 组件现已与输入组件连接，一个对话框将打开，要求您为新的输出连接命名。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqfz5uybvj309v03djra.jpg" alt="png"></p><p>输入新输出连接的名称，在本示例中为 <code>Valid_movies</code>，然后单击 OK (确定)。系统询问您是否要将输入 <code>schema 传播到目标输出组件</code>时，单击 Yes (是)。 </p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqfyovhh6j30hx0aojrp.jpg" alt="png"></p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqfzri6nlj30hf03fq2y.jpg" alt=""></p><p>此时，<code>tMap</code>组件已经添加到作业中，并通过Row &gt; Main连接与两个现有组件连接。</p><h3 id="添加查找组件"><a href="#添加查找组件" class="headerlink" title="添加查找组件"></a>添加查找组件</h3><p>此示例说明如何从<code>Repository(存储库)</code>添加查找输入组件，将其连接到<code>tMap</code>，以及如何在组件中启用列剪裁。</p></li><li><p>在 <code>Repository (存储库)</code> 树视图中，展开 <code>Metadata (元数据) &gt; File delimited</code> (分隔文件)，将文件连接 <code>directors</code> (导演) 或其 <code>schema directors_schema</code> 拖放到设计工作区。</p><p>此时 <code>Components (组件)</code> 对话框会打开，显示可以从此元数据项目添加到作业的组件列表。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqg9jci5rj30n20dygn1.jpg" alt="png"></p></li><li><p>选择 <code>tFileInputDelimited</code> 并单击 OK (确定)。</p><p>标记为 <code>directors (导演)</code> 的 <code>tFileInputDelimited</code> 会添加到设计工作区，并自动填充其基本设置。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqgaoic14j30i3091dg0.jpg" alt="png"></p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqgbak03ej30km0fbt9n.jpg" alt="png"></p></li><li><p>右键单击新增的 <code>tFileInputDelimited</code> 组件，从上下文菜单中选择 <code>Row (行) &gt; Main</code> (主)，然后单击 <code>tMap</code> 组件。</p><p><code>tFileInputDelimited</code> 现在即已通过查找连接连接到 <code>tMap</code>。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqgdi379mj30hw0810sy.jpg" alt="png"></p></li><li><p>在新 <code>tFileInputDelimited</code> 组件的 <code>Advanced settings (高级设置)</code> 选项卡中，选中 <code>Trim all columns(剪裁所有列)</code> 复选框。</p><p>引用输入文件 <code>directors.txt</code> 的某些记录包含前导空格。通过这一选项，您可以在执行作业时从查找输入流中移除此类空格。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqgetoatyj30kn0atq3e.jpg" alt=""></p><p>此时，该作业中已拥有筛选影片信息所需的所有组件。接下来，需要<strong>在tMap组件中配置映射，以针对查找流筛选主输入流并输出所需信息</strong>。</p><h3 id="配置映射并执行作业"><a href="#配置映射并执行作业" class="headerlink" title="配置映射并执行作业"></a>配置映射并执行作业</h3><p>此过程将说明如何配置映射和内连接以输出含有效导演ID的影片信息。</p></li><li><p>双击 <code>tMap</code> 组件打开 <code>Map</code> 编辑器。</p><p><code>Map</code> 编辑器显示三个表，在本示例中名为 <code>row1</code>、<code>row2</code> 和 <code>Valid_movies</code>，分别对应于<code>影片文件 schema</code>、<code>导演文件 schema</code> 和<code>有效影片信息的输出 schema</code>，且 row1 表中的列已映射到 Valid_movies 表中的列。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqgkwp90oj31hc0smwg9.jpg" alt="png"></p></li><li><p>选择 <code>row1</code> 表中的 <code>directorID</code> 列，并将其放到 <code>row2</code> 表中的 <code>directorID</code> 列，根据<code>导演 ID</code> 创建两个输入数据集之间的连接。 </p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqh3nin38j30gv09cdfy.jpg" alt="png"></p></li><li><p>单击 <code>tMap settings</code> (tMap 设置) 按钮，然后单击 <code>Join Model</code> (连接模型) 的 <code>Value</code> (值) 字段，再单击出现的 <code>[...]</code> 按钮打开 <code>Options</code> (选项) 对话框。在对话框中，选择 <code>Inner Join</code> (内连接)，然后单击 OK (确定) 将联接定义为内连接。 </p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqgrnfwdtj30ns08vjru.jpg" alt="png"></p><p>使用此设置，只有<code>导演 ID</code> 与<code>引用文件中的导演 ID</code> 匹配的影片记录才会传到输出。</p></li><li><p>在 <code>Map</code> 编辑器底部的 <code>Schema editor</code> (Schema 编辑器) 中，选择<code>输出 schema</code> 的 <code>directorID</code> 列，在本示例中为 <code>Valid_movies</code>，然后单击 <code>X</code> 按钮将其移除。 </p></li><li><p>单击输出表下方的 <code>[+]</code> 按钮添加新列，将其命名为 <code>directedBy</code>，将长度设为 20，然后上移使其位于 <code>title</code> 和 <code>releaseYear</code> 列之间。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqgvcm8l6j30qg073dg3.jpg" alt="png"> </p></li><li><p>选择 <code>row2</code> 表中的 <code>directorName</code> 列，并将其拖放到与输出表中的 <code>directedBy</code> 列对应的 <code>Expression</code> (表达式) 字段。</p><p>新建了<code>查找表</code>和<code>输出表</code>之间的映射。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqh1huai9j31h60az753.jpg" alt="png"></p></li><li><p>单击 OK (确定) 确认映射并关闭 Map 编辑器，并在系统询问是否传播更改时单击 Yes (是)。</p><p>映射配置将保存，且输出 schema 会同步到输出组件 tLogRow。</p></li><li><p>按下 F6 或单击 Run (运行) 视图中的 Run (运行) 按钮来执行作业。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqh5nwv2zj30hm07s3yx.jpg" alt="png"></p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqh7aco34j30nt0of75r.jpg" alt="png"></p><p>此时只有含有效导演信息的影片记录才会显示在Run(运行)控制台。</p><h2 id="收集被拒影片信息并将处理结果保存到数据库"><a href="#收集被拒影片信息并将处理结果保存到数据库" class="headerlink" title="收集被拒影片信息并将处理结果保存到数据库"></a>收集被拒影片信息并将处理结果保存到数据库</h2><p>本场景主要是根据筛选影片信息中的场景，进一步扩展作业，来收集缺少导演信息的影片数据，并将有效和无效的数据写入MySQL数据库。</p><h3 id="将数据库输出组件添加到作业"><a href="#将数据库输出组件添加到作业" class="headerlink" title="将数据库输出组件添加到作业"></a>将数据库输出组件添加到作业</h3></li><li><p>通过复制在上一个场景中创建的作业来新建作业，并将新作业命名为 <code>write_movies_to_db</code>，然后双击作业，在设计工作区中将其打开。</p></li><li><p>右键单击 <code>tLogRow</code> 组件，然后从上下文菜单中选择 <code>Delete</code> (删除) 以将其删除。</p></li><li><p>单击 <code>tLogRow</code> 在设计工作区上的位置并键入 <code>tMySqlOutput</code> 的名称或名称的一部分，然后选择并双击列表上的 <code>tMySqlOutput</code> 将其添加到设计工作区。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqhmv8f5vj30g708sq3l.jpg" alt="png"></p></li><li><p>右键单击 <code>tMap</code> 组件，从上下文菜单中选择 <code>Row (行) &gt; Valid_movies</code>，然后单击 <code>tMySqlOutput</code> 将其与 <code>tMap</code> 连接。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqhoth94mj30hm07t0sx.jpg" alt="png"></p><p>连接名称 <code>Valid_movies</code> 对应于 <code>tMap</code> 中现有输出表的名称。</p></li><li><p>单击 <code>tMap</code> 组件，然后将 <code>o</code> 图标拖放到设计工作区。</p><p>此时会显示文本字段和建议组件列表。除组件列表外，您可以选择一个组件来查看其描述。</p></li><li><p>在文本字段中，键入 <code>tMySqlOutput</code> 的名称，在列表中选中组件，然后按 Enter 键将另一个 <code>tMySqlOutput</code> 组件添加到设计工作区。</p><p>此时会显示一个对话框，要求您输入输出连接的名称。</p></li><li><p>在对话框中，输入 <code>Invalid_movies</code> 并单击 OK (确定) 将 <code>tMap</code> 连接到第二个 <code>tMySqlOutput</code> 组件。 </p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqhs0iprqj30ho0bdwew.jpg" alt="png"></p><p>此时，已成功添加并连接了将处理过的影片信息写入MySQL数据库所需的数据库输出组件。接下来，则需要在<code>tMap</code>中配置新映射，在<code>tMySqlOutput</code>组件中配置数据库设置。</p><h3 id="配置被拒数据的映射"><a href="#配置被拒数据的映射" class="headerlink" title="配置被拒数据的映射"></a>配置被拒数据的映射</h3><p>此过程主要说明如何配置映射来收集被拒信息。</p></li><li><p>双击 <code>tMap</code> 组件打开 <code>Map</code> 编辑器。 </p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqhulf6nlj30h908c3yn.jpg" alt="png"></p><p>已自动创建名为 <code>Invalid_movies</code> 的第二个输出表。 </p></li><li><p>将 <code>row1</code> 表中的 <code>movieID</code> 和 <code>title</code> 列拖放到 <code>Invalid_movies</code> 表。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqhvl7pvwj31g709bwfc.jpg" alt="png"> </p></li><li><p>单击 <code>Invalid_movies</code> 表中的 <code>tMap settings</code> (tMap 设置) 按钮，单击 <code>Catch lookup inner join reject</code> (获取查找内部连接被拒) 的 <code>Value</code> (值) 字段，然后单击出现的 <code>[...]</code> 按钮打开 <code>Options</code> (选项) 对话框。在对话框中，选择 true，然后单击 OK (确定)。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqhxo7dqaj31gc0cljsj.jpg" alt="png"></p><p>使用此设置，<code>不含导演 ID</code> 或者<code>导演 ID 与引用文件不匹配</code>的记录将传到此输出。 </p></li><li><p>单击 OK (确定) 确认映射并关闭 Map 编辑器，并在系统询问是否传播更改时单击 Yes (是)。</p><p>映射配置将保存，且输出 schema 会同步到输出组件。</p><p>此时，已成功为被拒输出配置了映射。</p><h3 id="配置MySQL数据库输出"><a href="#配置MySQL数据库输出" class="headerlink" title="配置MySQL数据库输出"></a>配置MySQL数据库输出</h3><p>此过程主要说明如何配置数据库输出组件以将影片信息写入MySQL数据库表。</p></li><li><p>双击第一个 <code>tMySqlOutput</code> 组件，在 <code>Component</code> (组件) 视图中打开其 <code>Basic settings</code> (基本设置)。 </p></li><li><p>提供访问数据库所需的连接详细信息，在相关字段中填入<code>主机名或 IP 地址</code>、<code>端口号</code>、<code>数据库名称</code>、<code>用户名</code>和<code>密码</code>。</p><p>输入密码时，首先需要单击 <code>Password</code> (密码) 字段旁边的 <code>[...]</code> 按钮打开对话框，在文本字段中输入以双引号括起的密码，然后单击 OK (确定)。</p></li><li><p>在 <code>Table</code> (表) 字段中，输入目标数据库表的名称。</p><p>在本示例中，有效影片信息的表是 <code>valid_movies</code>。</p></li><li><p>根据需要选择 <code>Action on table</code> (表操作) 和 <code>Action on data</code> (数据操作)。</p><p>在本示例中，如已有表，我们先要移除表，然后创建一个空表，并使用默认选项执行数据操作。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqi31bhfnj30w10bpgmi.jpg" alt="png"></p></li><li><p>在第二个 <code>tMySqlOutput</code> 组件的 <code>Basic settings</code> (基本设置) 中，使用与第一个 <code>tMySqlOutput</code> 相同的设置，目标数据库表的名称除外。</p><p>本示例中，无效影片信息的表是 <code>invalid_movies</code>。</p></li><li><p>按下 F6 或单击 Run (运行) 视图中的 Run (运行) 按钮来执行作业。 </p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqil4fcr3j30j20bpdge.jpg" alt="png"></p><p>此时，含<code>有效导演信息的影片记录</code>将保存到名为<code>valid_movies</code>的数据库表中，<code>不含有效导演信息的影片记录</code>则将保存到名为<code>invalid_movies</code>的数据库表中。</p><h3 id="查看数据库数据"><a href="#查看数据库数据" class="headerlink" title="查看数据库数据"></a>查看数据库数据</h3><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqiqiu8y4j31870smjtu.jpg" alt=""></p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJgy1ggqipbwd5vj30q60smabe.jpg" alt="png"></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Talend-——-创建第一份作业&quot;&gt;&lt;a href=&quot;#Talend-——-创建第一份作业&quot; class=&quot;headerlink&quot; title=&quot;Talend —— 创建第一份作业&quot;&gt;&lt;/a&gt;Talend —— 创建第一份作业&lt;/h1&gt;&lt;blockquote&gt;

      
    
    </summary>
    
    
      <category term="Talend" scheme="http://yoursite.com/categories/Talend/"/>
    
    
      <category term="Talend" scheme="http://yoursite.com/tags/Talend/"/>
    
  </entry>
  
  <entry>
    <title>Talend Open Studio for Data Integration入门指南</title>
    <link href="http://yoursite.com/2020/07/12/2020-07-12-Talend-Open-Studio-for-Data-Integration-%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/"/>
    <id>http://yoursite.com/2020/07/12/2020-07-12-Talend-Open-Studio-for-Data-Integration-%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</id>
    <published>2020-07-12T15:06:00.000Z</published>
    <updated>2020-07-12T15:16:24.547Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Talend-Open-Studio-for-Data-Integration入门指南"><a href="#Talend-Open-Studio-for-Data-Integration入门指南" class="headerlink" title="Talend Open Studio for Data Integration入门指南"></a>Talend Open Studio for Data Integration入门指南</h1><blockquote><p> <a href="http://www.docin.com/p-635429817.html" target="_blank" rel="noopener">http://www.docin.com/p-635429817.html</a> </p></blockquote><blockquote><p><a href="https://help.talend.com/reader/7hgjT5MQXu0xS9dSnR0iyg/DiI47n6mRgfPN0VpR5RdRQ" target="_blank" rel="noopener">https://help.talend.com/reader/7hgjT5MQXu0xS9dSnR0iyg/DiI47n6mRgfPN0VpR5RdRQ</a> </p></blockquote><blockquote><p><a href="https://help.talend.com/reader/SZ38A55h3ojQJL~paOP16g/_nrE2Ff2sAylaqNGOFz73Q" target="_blank" rel="noopener">https://help.talend.com/reader/SZ38A55h3ojQJL~paOP16g/_nrE2Ff2sAylaqNGOFz73Q</a> </p></blockquote><h2 id="Talend"><a href="#Talend" class="headerlink" title="Talend"></a>Talend</h2><p>Talend是一种ETL(Extraction-Transformation-Loading 数据提取-转换-加载)工具。主要是负责完成数据从数据源向目标数据仓库转化的过程，是实施数据仓库的重要步骤。</p><p>Talend，中文名拓蓝，一家专业的开源集成软件公司。Talend是市场上唯一提供集数据集成、数据分析及清洗，主数据管理，应用集成为一体的软件提供商。</p><p>Talend Open Studio for Integration工具可执行数据仓库到数据库之间的数据同步，提供基于Eclipse RCP的图形操作界面。</p><h2 id="登录Talend-Studio"><a href="#登录Talend-Studio" class="headerlink" title="登录Talend Studio"></a>登录Talend Studio</h2><ol><li>在Talend Studio登录窗口中，选择Create a new project，如指定项目名称：getting_started，然后单击Finish创建一个新的本地项目.</li><li>当”其他Talend软件包”向导打开时，通过选择”必需的”和”可选的第三方库”复选框并单击”完成”来安装其他软件包.在”下载外部模块”窗口中，单击向导底部的”全部接受”按钮以接受Studio中使用的外部模块的所有许可证.</li><li>Talend页面概览:<img src="http://ww1.sinaimg.cn/large/007d8nWJly1ggodbgf86sj31hc0sm0vr.jpg" alt="OESBBD%CGUO8CMIA{AT{D1V.png"></li></ol><h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><ol><li>创建一个新的本地工程talendworkspace.</li></ol><p><img src="http://ww1.sinaimg.cn/large/007d8nWJly1ggogm9e8lyj30my0b9aca.jpg" alt="4BTQ97F@CBB(P3{TS{_6~1V.png"></p><ol start="2"><li>点击Welcome页面的Start now!进入Talend页面.</li></ol><p><img src="http://ww1.sinaimg.cn/large/007d8nWJly1ggogr7hudpj31hc0smwgp.jpg" alt="jpg"></p><p>最左侧为目录，中间区域为作业设计区和job运行区，最右边为存放所有组件的画板，中下部分为组件的一些属性设置。</p><ol start="3"><li>右击左侧存储库中的”作业设计”，点击”创建作业”如图。</li></ol><p><img src="http://ww1.sinaimg.cn/large/007d8nWJly1ggoh87i5rcj30nv0fddgo.jpg" alt="2{A3R{YP2ZV0L@Y~N4K_BJN.png"></p><ol start="4"><li>点击左侧”元数据”/“数据库连接”，右击选择”创建数据库连接”，并填写作业名(以字母开头)。并填写连接数据库的相关信息。</li></ol><p><img src="http://ww1.sinaimg.cn/large/007d8nWJly1ggohg4h7j8j30lb0hvaam.jpg" alt=")80WNHINUAI79HCZ0_7DX~A.png"></p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJly1ggoho3vfmcj30lb0m2gml.jpg" alt="DUKKNS_~}QU[8MERA]ZEIBT.png"></p><p>tips: 服务器可直接填写”localhost”.</p><p>测试连接，出现连接失败问题。修改方案如下：</p><blockquote><p><a href="https://blog.csdn.net/anaini1314/article/details/71157832" target="_blank" rel="noopener">https://blog.csdn.net/anaini1314/article/details/71157832</a> </p></blockquote><p><img src="http://ww1.sinaimg.cn/large/007d8nWJly1ggoi10svstj30lb0m2gmp.jpg" alt="5_71Y{XK4OX1Q4%VVTTT~Y5.png"></p><ol start="5"><li>创建完连接后，便可以使用这个连接进行作业设计抽取数据工作。</li></ol><ul><li><strong>输入、输出组件</strong>：所有的包含input和output名称的组件都是输入输出组件。根据数据库类型不同，组件也不相同。如oracle数据库的输入输出组件为:tOracleInput、tOracleOutput。<strong>输入组件</strong>主要是抽取数据并设置源数据表，然后通过<strong>输出组件</strong>设置目标表，连接上即可传送数据。</li><li><strong>tMap组件</strong>：当进行两个表的数据传输时，如果两个表的字段名字不一样，就需要这个组件进行连接。指明对应目标数据表和源数据表这两个表的字段。</li></ul><p>本地Mysql数据库创建的表数据(database:TalendTest, table:movies):</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJly1ggojryv9wxj30wl06zdga.jpg" alt=""></p><p>然后可以将需要的组件在画板中找到并且拖到空白作业中，或者直接拖已经配置好的数据源选择组件(不需要再配置数据源)。</p><blockquote><p>假设在作业设计中新建一个作业，把Mysql数据库中movies表的数据进行抽取到另一个表中(本文movies-&gt;movies，实际上应该是不同表).</p></blockquote><p><strong>首先是input组件</strong>：</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJly1ggok7jmdxdj311o0i1tb0.jpg" alt="79SM5_H}SN7}%UQS8ZHOJZS.png"></p><p>设置input组件信息，在查询中写sql语句查出你所抽取的信息，然后用双引号括起来。并点击属性中的Guess schema得到字段信息，如果类型不对可以修改。</p><p><strong>然后是output组件</strong>：</p><p>同样配置output组件的信息，主要是在表中填写目标表名字，表操作因为”movies”表已存在可以选择无操作，如果没有可以选择创建表等其他操作。数据操作是插入，根据需要也可以选择其他操作如更新等。</p><p><strong>最后是进行两表的连接</strong>：</p><p>点击input组件选择行-主线到output组件，然后output组件的属性中选择：同步列。获取input的字段信息。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJly1ggokj2xg4mj30ok0leq45.jpg" alt=""></p><p><strong>点击运行按钮</strong>：</p><p>点击运行中的运行按钮，即可运行作业进行数据抽取，完成作业。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJly1ggokngqbb5j30ln0gk3za.jpg" alt="png"></p><p>如图看到，4条数据被抽取过去，这里的数据结构和字段都是一样的，如果不同的话我们还需要tMap组件来进行连接。</p><p>tip: 如下图是联合两表查询出的数据结果并且保存在一个excel文件中。</p><p><img src="http://ww1.sinaimg.cn/large/007d8nWJly1ggokvvpas1j30nr089jtm.jpg" alt="1.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Talend-Open-Studio-for-Data-Integration入门指南&quot;&gt;&lt;a href=&quot;#Talend-Open-Studio-for-Data-Integration入门指南&quot; class=&quot;headerlink&quot; title=&quot;Talend
      
    
    </summary>
    
    
      <category term="Talend" scheme="http://yoursite.com/categories/Talend/"/>
    
    
      <category term="Talend" scheme="http://yoursite.com/tags/Talend/"/>
    
  </entry>
  
  <entry>
    <title>My first blog</title>
    <link href="http://yoursite.com/2020/01/14/2020-01-14-My-first-blog/"/>
    <id>http://yoursite.com/2020/01/14/2020-01-14-My-first-blog/</id>
    <published>2020-01-14T14:32:24.000Z</published>
    <updated>2020-01-29T14:52:01.095Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"Hello world"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Hello-World&quot;&gt;&lt;a href=&quot;#Hello-World&quot; class=&quot;headerlink&quot; title=&quot;Hello World&quot;&gt;&lt;/a&gt;Hello World&lt;/h2&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;
      
    
    </summary>
    
    
      <category term="test" scheme="http://yoursite.com/categories/test/"/>
    
    
      <category term="test" scheme="http://yoursite.com/tags/test/"/>
    
  </entry>
  
</feed>
