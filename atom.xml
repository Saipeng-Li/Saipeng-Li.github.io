<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>经年</title>
  
  <subtitle>FEARLESS ALONE</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-02-26T17:37:27.591Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Guran</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Rasa-Building Assistants</title>
    <link href="http://yoursite.com/2020/02/27/2020-02-27-Rasa-Building-Assistants/"/>
    <id>http://yoursite.com/2020/02/27/2020-02-27-Rasa-Building-Assistants/</id>
    <published>2020-02-27T03:23:00.000Z</published>
    <updated>2020-02-26T17:37:27.591Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Building-Assistants"><a href="#Building-Assistants" class="headerlink" title="Building Assistants"></a>Building Assistants</h2><h3 id="Building-a-simple-FAQ-assistant"><a href="#Building-a-simple-FAQ-assistant" class="headerlink" title="Building a simple FAQ assistant"></a>Building a simple FAQ assistant</h3><p>Allow the user to ask a simple question and get a response.</p><blockquote><ul><li>Responding to simple intents with the MemoizationPolicy</li><li>Handling FAQs using the ResponseSelector</li></ul></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir rasa-assistant</span><br><span class="line">rasa init</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcabas6og0j30go0ay3zj.jpg" alt=""></p><p>And remove the default content from this bot, so that the <code>nlu.md</code>,<code>stories.md</code> and <code>domain.yml</code> are empty.</p><h4 id="Memoization-Policy"><a href="#Memoization-Policy" class="headerlink" title="Memoization Policy"></a>Memoization Policy</h4><p>The <code>MemoizationPolicy</code> remembers examples from training stories for up to a <code>max_history</code> of turns(includes messages the user sent, and actions the assistant performed).</p><hr><p>Editing <code>config.yml</code> file as follows:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">policies:</span><br><span class="line">- name: MemoizationPolicy</span><br><span class="line">  max_history: 1</span><br><span class="line">- name: MappingPolicy</span><br></pre></td></tr></table></figure><blockquote><p>The MappingPolicy is there because it handles the logic of the <code>/restart</code> intent, which allows you to clear the conversation history and start fresh.</p></blockquote><hr><p>Add some stories for the <code>goodbye</code>,<code>thank</code>,and <code>greet</code> intents to the <code>stories.md</code> file:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## greet</span></span><br><span class="line">* greet</span><br><span class="line">  - utter_greet</span><br><span class="line"></span><br><span class="line"><span class="comment">## thank</span></span><br><span class="line">* thank</span><br><span class="line">  - utter_noworries</span><br><span class="line"></span><br><span class="line"><span class="comment">## goodbye</span></span><br><span class="line">* <span class="built_in">bye</span></span><br><span class="line">  - utter_bye</span><br></pre></td></tr></table></figure><hr><p>Add the intents, actions and templates  to our <code>domain.yml</code> file:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">intents:</span><br><span class="line">  - greet</span><br><span class="line">  - <span class="built_in">bye</span></span><br><span class="line">  - thank</span><br><span class="line"></span><br><span class="line">actions:</span><br><span class="line">  - utter_greet</span><br><span class="line">  - utter_noworries</span><br><span class="line">  - utter_bye</span><br><span class="line"></span><br><span class="line">templates:</span><br><span class="line">  utter_noworries:</span><br><span class="line">    - text: No worries!</span><br><span class="line">  utter_greet:</span><br><span class="line">    - text: Hi</span><br><span class="line">  utter_bye:</span><br><span class="line">    - text: Bye!</span><br></pre></td></tr></table></figure><hr><p>Copy over some NLU data from Sara into our <code>nlu.md</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## intent:greet</span></span><br><span class="line">- Hi</span><br><span class="line">- Hey</span><br><span class="line">- Hi bot</span><br><span class="line">- Hey bot</span><br><span class="line">- Hello</span><br><span class="line">- Good morning</span><br><span class="line">- hi again</span><br><span class="line">- hi folks</span><br><span class="line"></span><br><span class="line"><span class="comment">## intent:bye</span></span><br><span class="line">- goodbye</span><br><span class="line">- goodnight</span><br><span class="line">- good <span class="built_in">bye</span></span><br><span class="line">- good night</span><br><span class="line">- see ya</span><br><span class="line">- toodle-oo</span><br><span class="line">- <span class="built_in">bye</span> <span class="built_in">bye</span></span><br><span class="line">- gotta go</span><br><span class="line">- farewell</span><br><span class="line"></span><br><span class="line"><span class="comment">## intent:thank</span></span><br><span class="line">- Thanks</span><br><span class="line">- Thank you</span><br><span class="line">- Thank you so much</span><br><span class="line">- Thanks bot</span><br><span class="line">- Thanks <span class="keyword">for</span> that</span><br><span class="line">- cheers</span><br></pre></td></tr></table></figure><hr><p>Train a first model and test the bot.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rasa train</span><br><span class="line">rasa shell</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcaborfhfxj30vo06c414.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Building-Assistants&quot;&gt;&lt;a href=&quot;#Building-Assistants&quot; class=&quot;headerlink&quot; title=&quot;Building Assistants&quot;&gt;&lt;/a&gt;Building Assistants&lt;/h2&gt;&lt;h3 i
      
    
    </summary>
    
    
      <category term="NLU" scheme="http://yoursite.com/categories/NLU/"/>
    
    
      <category term="NLU" scheme="http://yoursite.com/tags/NLU/"/>
    
      <category term="RASA" scheme="http://yoursite.com/tags/RASA/"/>
    
  </entry>
  
  <entry>
    <title>RASA Basics</title>
    <link href="http://yoursite.com/2020/02/26/2020-02-26-RASA-Basics/"/>
    <id>http://yoursite.com/2020/02/26/2020-02-26-RASA-Basics/</id>
    <published>2020-02-26T13:27:00.000Z</published>
    <updated>2020-02-26T17:10:23.869Z</updated>
    
    <content type="html"><![CDATA[<p>overview of the most common terms in the Rasa documentation:</p><blockquote><ol><li>Create a New Project</li><li>View Your NLU Training Data</li><li>Define Your Model Configuration</li><li>Write Your First Stories</li><li>Define a Domain</li><li>Train a Model</li><li>Talk to Your Assistant</li></ol></blockquote><h2 id="Rasa-Basics"><a href="#Rasa-Basics" class="headerlink" title="Rasa Basics"></a>Rasa Basics</h2><p>Goal: Build a simple, friendly assistant which ask how you’re doing and send you a fun picture to cheer you up if you are sad.</p><h3 id="Create-a-New-Project"><a href="#Create-a-New-Project" class="headerlink" title="Create a New Project"></a>Create a New Project</h3><p>The first step is to create a new Rasa project.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rasa init --no-prompt</span><br></pre></td></tr></table></figure><p><code>rasa init</code> command creates all the files that a Rasa project needs and trains a simple bot on some sample data. </p><p>If you leave out the <code>--no-prompt</code> flag you will be asked some questions about how you want your project to be set up.</p><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gca6cflu5mj30vi09udkf.jpg" alt=""></p><p>This creates the following files:</p><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gca6dhxg0kj30g00aoab1.jpg" alt=""></p><blockquote><p><strong>__init__.py</strong>: an empty file that helps python find your actions</p><p><strong>actions.py</strong>: code for your custom actions</p><p><strong>config.yml</strong>: configuration of your NLU and Core models</p><p><strong>credentials.yml</strong>: details for connecting to other services</p><p><strong>data/nlu.md</strong>: your NLU training data</p><p><strong>data/stories.md</strong>: your stories</p><p><strong>domain.yml</strong>: your assistant’s domain</p><p><strong>endpoints.yml</strong>: details for connecting to channels like fb messenger</p><p><strong>models/&lt;timestamp&gt;.tar.gz</strong>: your initial model </p></blockquote><h3 id="View-Your-NLU-Training-Data"><a href="#View-Your-NLU-Training-Data" class="headerlink" title="View Your NLU Training Data"></a>View Your NLU Training Data</h3><p>The first piece of a Rasa assistant is an <code>NLU</code> model.</p><p><code>NLU</code>:  Natural Language Understanding, which means turning user messages into structured data. </p><p>To do this with Rasa, you provide <code>training examples</code> that show how Rasa should understand user messages, and then train a model by showing it those examples.</p><p>See the NLU training data created by the <code>rasa init</code> command:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat data/nlu.md</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gca6s8sq3hj30vo0mydn4.jpg" alt=""></p><blockquote><p> The lines starting with <code>##</code> define the names of your <code>intents</code>, which are groups of messages with the same meaning. </p></blockquote><blockquote><p>Rasa’s job will be to predict the correct intent when your users send new, unseen messages to your assistant. </p></blockquote><h3 id="Define-Your-Model-Configuration"><a href="#Define-Your-Model-Configuration" class="headerlink" title="Define Your Model Configuration"></a>Define Your Model Configuration</h3><p>The configuration file defines the <code>NLU</code> and <code>core components</code> that your model will use. </p><p>In this example, your NLU model will use the <code>supervised_embeddings</code> pipeline. </p><p>Take a look at your model configuration file:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat config.yml</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gca6yso8dkj30j209sjuq.jpg" alt=""></p><blockquote><p>The <code>language</code> and <code>pipeline</code> key specify how the NLU model should be built. </p><p>The <code>policies</code> key defines the policies that the Core model will use.</p></blockquote><h3 id="Write-Your-First-Stories"><a href="#Write-Your-First-Stories" class="headerlink" title="Write Your First Stories"></a>Write Your First Stories</h3><p>At this stage, you will teach <strong>your assistant how to respond to your messages</strong>. This is called <code>dialogue management</code>, and is handled by your <code>Core model</code>.</p><p><code>Core models</code> learn from real conversational data in the form of training “stories”. </p><p>A <code>story</code> is a real conversation between a user and an assistant.  Lines with intents and entities reflect the <code>user&#39;s input</code> and the <code>action names</code> show what the assistant should do in response.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat data/stories.md</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gca904q7pwj30ne0se469.jpg" alt=""></p><blockquote><p>Lines that start with <code>-</code> are actions taken by the assistant. </p><p>An action can do anything, including calling an API and interacting with the outside world.</p></blockquote><p>View the example stories inside the file <code>data/stories.md</code>:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat data/stories.md</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gca8k2c7q5j30vo0myqab.jpg" alt=""></p><h3 id="Define-a-Domain"><a href="#Define-a-Domain" class="headerlink" title="Define a Domain"></a>Define a Domain</h3><p>The <code>domain</code> defines the universe your assistant lives in: </p><ul><li>what user input it should expect to get</li><li>what actions it should be able to predict</li><li>how to respond </li><li>what information to store</li></ul><p>The domain for our assistant is saved in a file called <code>domain.yml</code>.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat domain.yml</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gca8n5ecp2j30u00w6naz.jpg" alt=""></p><blockquote><p><code>intents</code>: things you expect users to say</p><p><code>actions</code>: things your assistant can do and say</p><p><code>templates</code>: template strings for the things your assistant can say</p></blockquote><p><strong>Rasa Core’s job</strong> is to choose the right action to execute at each step of the conversation. </p><p>The assistant will respond with a message based on a template from the <code>templates</code> section.</p><h3 id="Train-a-Model"><a href="#Train-a-Model" class="headerlink" title="Train a Model"></a>Train a Model</h3><p>Anytime we <strong>add a new NLU or Core data</strong>, or <strong>update the domain or configuration</strong>, we need to <code>re-train</code> a neural network on our example stories and NLU data.</p><p>The command will call the Rasa Core and NLU train functions and store the trained model into the <code>models/</code> directory. </p><blockquote><p>The command will automatically only retrain the <strong>different model parts</strong> if something has changed in their data or configuration.</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rasa train</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Finished training."</span></span><br></pre></td></tr></table></figure><p>The <code>rasa train</code> command will look for both <code>NLU</code> and <code>Core data</code> and will train a combined model.</p><h3 id="Talk-to-Your-Assistant"><a href="#Talk-to-Your-Assistant" class="headerlink" title="Talk to Your Assistant"></a>Talk to Your Assistant</h3><p>Finish builting an assistant powered entirely by machine learning.</p><p>Start talking to your assistant by running:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rasa shell</span><br></pre></td></tr></table></figure><p>Error:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Exception <span class="string">'Loop'</span> object has no attribute <span class="string">'_ready'</span></span><br></pre></td></tr></table></figure><p>And some resolutions on Github:</p><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcaa4r3q5nj311w0po43a.jpg" alt=""></p><p>Reload <code>rasa shell</code>:</p><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcaarnprq6j30vk0gwdow.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;overview of the most common terms in the Rasa documentation:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Create a New Project&lt;/li&gt;
&lt;li&gt;View Your NLU Traini
      
    
    </summary>
    
    
      <category term="NLU" scheme="http://yoursite.com/categories/NLU/"/>
    
    
      <category term="NLU" scheme="http://yoursite.com/tags/NLU/"/>
    
      <category term="RASA" scheme="http://yoursite.com/tags/RASA/"/>
    
  </entry>
  
  <entry>
    <title>Rasa NLU</title>
    <link href="http://yoursite.com/2020/02/25/2020-02-25-Rasa-NLU/"/>
    <id>http://yoursite.com/2020/02/25/2020-02-25-Rasa-NLU/</id>
    <published>2020-02-25T04:11:00.000Z</published>
    <updated>2020-02-26T05:36:42.753Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Rasa-NLU"><a href="#Rasa-NLU" class="headerlink" title="Rasa NLU"></a>Rasa NLU</h1><p>自然语言理解(NLU)系统是问答系统、聊天机器人等更高级应用的基石。基本的NLU工具，包括<strong>实体识别</strong>和<strong>意图识别</strong>两个任务。</p><p>Rasa NLU是一个开源的、可本地部署并配套有语料标注工具<code>rasa-nlu-trainer</code>的自然语言理解框架。</p><p>Rasa NLU本身是只支持英文与德文的。中文因为其特殊性需要加入特定的<code>tokenizer</code>作为整个流水线的一部分。(加入<code>jieba</code>作为中文的<code>tokenizer</code>，适用于[中文的rasa NLU的代码][<a href="https://github.com/crownpku/rasa_nlu_chi]" target="_blank" rel="noopener">https://github.com/crownpku/rasa_nlu_chi]</a>)</p><h3 id="语料获取及预处理"><a href="#语料获取及预处理" class="headerlink" title="语料获取及预处理"></a>语料获取及预处理</h3><p>Rasa NLU的实体识别和意图识别的任务，需要一个训练好的<code>MITIE</code>模型。这个MITIE模型是非监督训练得到的，类似于word2vec中的word embedding。</p><p>要训练该MITIE模型，需要一个规模比较大的中文语料。最好是根据自己对应的需求去选择语料。做金融方面的chatbot就多爬取些财经新闻，做医疗的chatbot就多获取些医疗相关文章。</p><h4 id="中文Wikipedia语料及处理"><a href="#中文Wikipedia语料及处理" class="headerlink" title="中文Wikipedia语料及处理"></a>中文Wikipedia语料及处理</h4><h5 id="下载数据"><a href="#下载数据" class="headerlink" title="下载数据"></a>下载数据</h5><p> 使用中文维基百科语料来进行MITIE模型训练。</p><p>数据下载地址：<a href="https://dumps.wikimedia.org/zhwiki/latest/zhwiki-latest-pages-articles.xml.bz2" target="_blank" rel="noopener">https://dumps.wikimedia.org/zhwiki/latest/zhwiki-latest-pages-articles.xml.bz2</a></p><blockquote><p>官网下载速度极慢。网上20190320数据[网盘资源][<a href="https://pan.baidu.com/s/1mExG-phI4tJOKiuA9O-Zyw]" target="_blank" rel="noopener">https://pan.baidu.com/s/1mExG-phI4tJOKiuA9O-Zyw]</a><s9wm></p></blockquote><h5 id="抽取数据"><a href="#抽取数据" class="headerlink" title="抽取数据"></a>抽取数据</h5><p>对于上述下载的语料库，需要进一步抽取，可以选择</p><ul><li>自己写程序抽取</li><li>使用Wikipedia Extractor抽取</li><li>使用gensim中wikicorpus库抽取</li></ul><p>此处使用<code>Wikipedia Extractor</code>来抽取数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/attardi/wikiextractor.git wikiextractor</span><br><span class="line">cd wikiextractor</span><br><span class="line">python3 WikiExtractor.py -b <span class="number">1024</span>M -o extracted zhwiki-latest-pages-articles.xml.bz2</span><br></pre></td></tr></table></figure><p>执行结果：</p><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gc8oj4zuguj30vm0320us.jpg" alt=""></p><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gc8ok01t3dj30ug04cgmb.jpg" alt=""></p><p>可以看到一共处理了1050183篇文章，通过以上抽取后得到两个文件<code>wiki_00</code>和<code>wiki_01</code>。</p><p>里面的格式如下：</p><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gc8phnv68bj30zk0mwdzd.jpg" alt=""></p><h5 id="繁体转简体"><a href="#繁体转简体" class="headerlink" title="繁体转简体"></a>繁体转简体</h5><p>wikipedia中文数据繁简混杂的，里面包含大陆简体、台湾繁体、港澳繁体等多种不同的数据。</p><p>使用开源项目opencc来进行繁简转换：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">brew install OpenCC</span><br><span class="line">OpenCC -i wiki_00 -o zh_wiki_00 -c t2s</span><br><span class="line">OpenCC -i wiki_01 -o zh_wiki_01 -c t2s</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gc8r685k1lj30zk0mwkaj.jpg" alt=""></p><h5 id="符号处理"><a href="#符号处理" class="headerlink" title="符号处理"></a>符号处理</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fenci</span><span class="params">(input_file)</span>:</span></span><br><span class="line">    outfile = codecs.open(<span class="string">'std_'</span> + input_file, <span class="string">'w'</span>, <span class="string">'utf-8'</span>)</span><br><span class="line">    <span class="keyword">with</span> codecs.open(input_file, <span class="string">'r'</span>, <span class="string">'utf-8'</span>) <span class="keyword">as</span> myfile:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> myfile:</span><br><span class="line">            <span class="comment"># 去除字符串中的&lt;doc&gt;&lt;/doc&gt;</span></span><br><span class="line">            line = re.sub(<span class="string">'&lt;doc (.*)&gt;'</span>,<span class="string">''</span>,line)</span><br><span class="line">            line = re.sub(<span class="string">'&lt;/doc&gt;'</span>,<span class="string">''</span>,line)</span><br><span class="line">            <span class="comment"># 只保留中文、大小写字母和阿拉伯数字</span></span><br><span class="line">            line = re.sub(<span class="string">'[^0-9A-Za-z\u4e00-\u9fa5]'</span>,<span class="string">''</span>,line)</span><br><span class="line">            outfile.write(line)</span><br><span class="line">    outfile.close()</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    input_file = sys.argv[<span class="number">1</span>]</span><br><span class="line">    fenci(input_file)</span><br></pre></td></tr></table></figure><p>将上述代码保存为<code>std.py</code>文件，放在与数据文件相同的目录。执行命令：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python3 std.py zh_wiki_00</span><br><span class="line">python3 std.py zh_wiki_01</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gc8u2apa55j30ly09gjxe.jpg" alt=""></p><h5 id="分词"><a href="#分词" class="headerlink" title="分词"></a>分词</h5><p>利用<code>jieba</code>进行分词:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python3 -m jieba -d <span class="string">" "</span> ./std_zh_wiki_00 &gt; ./cut_zh_wiki_00</span><br><span class="line">python3 -m jieba -d <span class="string">" "</span> ./std_zh_wiki_01 &gt; ./cut_zh_wiki_01</span><br></pre></td></tr></table></figure><p>或者：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"></span><br><span class="line">file_need_cut = <span class="string">'std_zh_wiki_01'</span></span><br><span class="line">file_after_cut = <span class="string">'cut_zh_wiki_01'</span></span><br><span class="line"></span><br><span class="line">fn = open(file_need_cut,<span class="string">'r'</span>,encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">f = open(file_after_cut,<span class="string">'w+'</span>,encoding=<span class="string">'utf-8'</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> fn.readlines():</span><br><span class="line">    words=jieba.cut(line)</span><br><span class="line">    f.write(<span class="string">" "</span>.join(words))</span><br><span class="line">f.close()</span><br><span class="line">fn.close()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Rasa-NLU&quot;&gt;&lt;a href=&quot;#Rasa-NLU&quot; class=&quot;headerlink&quot; title=&quot;Rasa NLU&quot;&gt;&lt;/a&gt;Rasa NLU&lt;/h1&gt;&lt;p&gt;自然语言理解(NLU)系统是问答系统、聊天机器人等更高级应用的基石。基本的NLU工具，包括&lt;
      
    
    </summary>
    
    
      <category term="NLU" scheme="http://yoursite.com/categories/NLU/"/>
    
    
      <category term="NLP" scheme="http://yoursite.com/tags/NLP/"/>
    
      <category term="Rasa" scheme="http://yoursite.com/tags/Rasa/"/>
    
  </entry>
  
  <entry>
    <title>爬取新浪微博内容</title>
    <link href="http://yoursite.com/2020/02/05/2020-02-05-%E7%88%AC%E5%8F%96%E6%96%B0%E6%B5%AA%E5%BE%AE%E5%8D%9A%E5%86%85%E5%AE%B9/"/>
    <id>http://yoursite.com/2020/02/05/2020-02-05-%E7%88%AC%E5%8F%96%E6%96%B0%E6%B5%AA%E5%BE%AE%E5%8D%9A%E5%86%85%E5%AE%B9/</id>
    <published>2020-02-05T11:50:00.000Z</published>
    <updated>2020-02-05T15:43:44.811Z</updated>
    
    <content type="html"><![CDATA[<h2 id="爬取新浪微博用户信息及微博内容"><a href="#爬取新浪微博用户信息及微博内容" class="headerlink" title="爬取新浪微博用户信息及微博内容"></a>爬取新浪微博用户信息及微博内容</h2><blockquote><p>引用：<a href="https://blog.csdn.net/Asher117/article/details/82793091" target="_blank" rel="noopener">https://blog.csdn.net/Asher117/article/details/82793091</a></p></blockquote><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><ul><li>使用selenium模拟爬虫</li><li>使用BeautifulSoup解析HTML</li></ul><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><h4 id="选取爬取目标网址"><a href="#选取爬取目标网址" class="headerlink" title="选取爬取目标网址"></a>选取爬取目标网址</h4><p>新浪微博网址分为网页端和手机端。大部分爬取微博数据都会选择爬取手机端，因为对比起来手机端囊括数据较多，且较为轻量。</p><p>网页端：<a href="https://s.weibo.com/" target="_blank" rel="noopener">https://s.weibo.com/</a></p><p>手机端：<a href="https://m.weibo.cn/" target="_blank" rel="noopener">https://m.weibo.cn/</a></p><p>因为要使用网页端微博的“高级搜索”功能，因此选取网页端微博进行模拟登录。</p><h4 id="模拟登录"><a href="#模拟登录" class="headerlink" title="模拟登录"></a>模拟登录</h4><p>模拟登录代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> rsa</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WeiBoLogin</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    class of WeiBoLogin, to login weibo.com</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        constructor</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        self.user_name = <span class="literal">None</span></span><br><span class="line">        self.pass_word = <span class="literal">None</span></span><br><span class="line">        self.user_uniqueid = <span class="literal">None</span></span><br><span class="line">        self.user_nick = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">        self.session = requests.Session()</span><br><span class="line">        self.session.headers.update(&#123;<span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 6.3; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0"</span>&#125;)</span><br><span class="line">        self.session.get(<span class="string">"http://weibo.com/login.php"</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(self, user_name, pass_word)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        login weibo.com, return True or False</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        self.user_name = user_name</span><br><span class="line">        self.pass_word = pass_word</span><br><span class="line">        self.user_uniqueid = <span class="literal">None</span></span><br><span class="line">        self.user_nick = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># get json data</span></span><br><span class="line">        s_user_name = self.get_username()</span><br><span class="line">        json_data = self.get_json_data(su_value=s_user_name)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> json_data:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        s_pass_word = self.get_password(json_data[<span class="string">"servertime"</span>], json_data[<span class="string">"nonce"</span>], json_data[<span class="string">"pubkey"</span>])</span><br><span class="line"></span><br><span class="line">        <span class="comment"># make post_data</span></span><br><span class="line">        post_data = &#123;</span><br><span class="line">            <span class="string">"entry"</span>: <span class="string">"weibo"</span>,</span><br><span class="line">            <span class="string">"gateway"</span>: <span class="string">"1"</span>,</span><br><span class="line">            <span class="string">"from"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"savestate"</span>: <span class="string">"7"</span>,</span><br><span class="line">            <span class="string">"userticket"</span>: <span class="string">"1"</span>,</span><br><span class="line">            <span class="string">"vsnf"</span>: <span class="string">"1"</span>,</span><br><span class="line">            <span class="string">"service"</span>: <span class="string">"miniblog"</span>,</span><br><span class="line">            <span class="string">"encoding"</span>: <span class="string">"UTF-8"</span>,</span><br><span class="line">            <span class="string">"pwencode"</span>: <span class="string">"rsa2"</span>,</span><br><span class="line">            <span class="string">"sr"</span>: <span class="string">"1280*800"</span>,</span><br><span class="line">            <span class="string">"prelt"</span>: <span class="string">"529"</span>,</span><br><span class="line">            <span class="string">"url"</span>: <span class="string">"http://weibo.com/ajaxlogin.php?framelogin=1&amp;callback=parent.sinaSSOController.feedBackUrlCallBack"</span>,</span><br><span class="line">            <span class="string">"rsakv"</span>: json_data[<span class="string">"rsakv"</span>],</span><br><span class="line">            <span class="string">"servertime"</span>: json_data[<span class="string">"servertime"</span>],</span><br><span class="line">            <span class="string">"nonce"</span>: json_data[<span class="string">"nonce"</span>],</span><br><span class="line">            <span class="string">"su"</span>: s_user_name,</span><br><span class="line">            <span class="string">"sp"</span>: s_pass_word,</span><br><span class="line">            <span class="string">"returntype"</span>: <span class="string">"TEXT"</span>,</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># get captcha code</span></span><br><span class="line">        <span class="keyword">if</span> json_data[<span class="string">"showpin"</span>] == <span class="number">1</span>:</span><br><span class="line">            url = <span class="string">"http://login.sina.com.cn/cgi/pin.php?r=%d&amp;s=0&amp;p=%s"</span> % (int(time.time()), json_data[<span class="string">"pcid"</span>])</span><br><span class="line">            <span class="keyword">with</span> open(<span class="string">"captcha.jpeg"</span>, <span class="string">"wb"</span>) <span class="keyword">as</span> file_out:</span><br><span class="line">                file_out.write(self.session.get(url).content)</span><br><span class="line">            code = input(<span class="string">"请输入验证码:"</span>)</span><br><span class="line">            post_data[<span class="string">"pcid"</span>] = json_data[<span class="string">"pcid"</span>]</span><br><span class="line">            post_data[<span class="string">"door"</span>] = code</span><br><span class="line"></span><br><span class="line">        <span class="comment"># login weibo.com</span></span><br><span class="line">        login_url_1 = <span class="string">"http://login.sina.com.cn/sso/login.php?client=ssologin.js(v1.4.18)&amp;_=%d"</span> % int(time.time())</span><br><span class="line">        json_data_1 = self.session.post(login_url_1, data=post_data).json()</span><br><span class="line">        <span class="keyword">if</span> json_data_1[<span class="string">"retcode"</span>] == <span class="string">"0"</span>:</span><br><span class="line">            params = &#123;</span><br><span class="line">                <span class="string">"callback"</span>: <span class="string">"sinaSSOController.callbackLoginStatus"</span>,</span><br><span class="line">                <span class="string">"client"</span>: <span class="string">"ssologin.js(v1.4.18)"</span>,</span><br><span class="line">                <span class="string">"ticket"</span>: json_data_1[<span class="string">"ticket"</span>],</span><br><span class="line">                <span class="string">"ssosavestate"</span>: int(time.time()),</span><br><span class="line">                <span class="string">"_"</span>: int(time.time()*<span class="number">1000</span>),</span><br><span class="line">            &#125;</span><br><span class="line">            response = self.session.get(<span class="string">"https://passport.weibo.com/wbsso/login"</span>, params=params)</span><br><span class="line">            json_data_2 = json.loads(re.search(<span class="string">r"\((?P&lt;result&gt;.*)\)"</span>, response.text).group(<span class="string">"result"</span>))</span><br><span class="line">            <span class="keyword">if</span> json_data_2[<span class="string">"result"</span>] <span class="keyword">is</span> <span class="literal">True</span>:</span><br><span class="line">                self.user_uniqueid = json_data_2[<span class="string">"userinfo"</span>][<span class="string">"uniqueid"</span>]</span><br><span class="line">                self.user_nick = json_data_2[<span class="string">"userinfo"</span>][<span class="string">"displayname"</span>]</span><br><span class="line">                logging.warning(<span class="string">"WeiBoLogin succeed: %s"</span>, json_data_2)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                logging.warning(<span class="string">"WeiBoLogin failed: %s"</span>, json_data_2)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            logging.warning(<span class="string">"WeiBoLogin failed: %s"</span>, json_data_1)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span> <span class="keyword">if</span> self.user_uniqueid <span class="keyword">and</span> self.user_nick <span class="keyword">else</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_username</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        get legal username</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        username_quote = urllib.parse.quote_plus(self.user_name)</span><br><span class="line">        username_base64 = base64.b64encode(username_quote.encode(<span class="string">"utf-8"</span>))</span><br><span class="line">        <span class="keyword">return</span> username_base64.decode(<span class="string">"utf-8"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_json_data</span><span class="params">(self, su_value)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        get the value of "servertime", "nonce", "pubkey", "rsakv" and "showpin", etc</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        params = &#123;</span><br><span class="line">            <span class="string">"entry"</span>: <span class="string">"weibo"</span>,</span><br><span class="line">            <span class="string">"callback"</span>: <span class="string">"sinaSSOController.preloginCallBack"</span>,</span><br><span class="line">            <span class="string">"rsakt"</span>: <span class="string">"mod"</span>,</span><br><span class="line">            <span class="string">"checkpin"</span>: <span class="string">"1"</span>,</span><br><span class="line">            <span class="string">"client"</span>: <span class="string">"ssologin.js(v1.4.18)"</span>,</span><br><span class="line">            <span class="string">"su"</span>: su_value,</span><br><span class="line">            <span class="string">"_"</span>: int(time.time()*<span class="number">1000</span>),</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            response = self.session.get(<span class="string">"http://login.sina.com.cn/sso/prelogin.php"</span>, params=params)</span><br><span class="line">            json_data = json.loads(re.search(<span class="string">r"\((?P&lt;data&gt;.*)\)"</span>, response.text).group(<span class="string">"data"</span>))</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> excep:</span><br><span class="line">            json_data = &#123;&#125;</span><br><span class="line">            logging.error(<span class="string">"WeiBoLogin get_json_data error: %s"</span>, excep)</span><br><span class="line"></span><br><span class="line">        logging.debug(<span class="string">"WeiBoLogin get_json_data: %s"</span>, json_data)</span><br><span class="line">        <span class="keyword">return</span> json_data</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_password</span><span class="params">(self, servertime, nonce, pubkey)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        get legal password</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        string = (str(servertime) + <span class="string">"\t"</span> + str(nonce) + <span class="string">"\n"</span> + str(self.pass_word)).encode(<span class="string">"utf-8"</span>)</span><br><span class="line">        public_key = rsa.PublicKey(int(pubkey, <span class="number">16</span>), int(<span class="string">"10001"</span>, <span class="number">16</span>))</span><br><span class="line">        password = rsa.encrypt(string, public_key)</span><br><span class="line">        password = binascii.b2a_hex(password)</span><br><span class="line">        <span class="keyword">return</span> password.decode()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    logging.basicConfig(level=logging.DEBUG, format=<span class="string">"%(asctime)s\t%(levelname)s\t%(message)s"</span>)</span><br><span class="line">    weibo = WeiBoLogin()</span><br><span class="line">    weibo.login(<span class="string">"username"</span>, <span class="string">"password"</span>)</span><br></pre></td></tr></table></figure><p>运行，模拟登录成功：</p><p><a href="https://imgchr.com/i/1scf3D" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2020/02/05/1scf3D.png" alt="1scf3D.png"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;爬取新浪微博用户信息及微博内容&quot;&gt;&lt;a href=&quot;#爬取新浪微博用户信息及微博内容&quot; class=&quot;headerlink&quot; title=&quot;爬取新浪微博用户信息及微博内容&quot;&gt;&lt;/a&gt;爬取新浪微博用户信息及微博内容&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;引用：&lt;a
      
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="爬虫" scheme="http://yoursite.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="weibo" scheme="http://yoursite.com/tags/weibo/"/>
    
  </entry>
  
  <entry>
    <title>My first blog</title>
    <link href="http://yoursite.com/2020/01/14/2020-01-14-My-first-blog/"/>
    <id>http://yoursite.com/2020/01/14/2020-01-14-My-first-blog/</id>
    <published>2020-01-14T14:32:24.000Z</published>
    <updated>2020-01-29T14:52:01.095Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"Hello world"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Hello-World&quot;&gt;&lt;a href=&quot;#Hello-World&quot; class=&quot;headerlink&quot; title=&quot;Hello World&quot;&gt;&lt;/a&gt;Hello World&lt;/h2&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;
      
    
    </summary>
    
    
      <category term="test" scheme="http://yoursite.com/categories/test/"/>
    
    
      <category term="test" scheme="http://yoursite.com/tags/test/"/>
    
  </entry>
  
</feed>
