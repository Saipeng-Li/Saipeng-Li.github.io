<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>经年</title>
  
  <subtitle>FEARLESS ALONE</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-02-27T04:55:34.342Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Guran</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Rasa NLU Tutorial</title>
    <link href="http://yoursite.com/2020/02/27/2020-02-27-Rasa-NLU-Tutorial/"/>
    <id>http://yoursite.com/2020/02/27/2020-02-27-Rasa-NLU-Tutorial/</id>
    <published>2020-02-27T04:54:00.000Z</published>
    <updated>2020-02-27T04:55:34.342Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>转载：<a href="https://www.zhihu.com/people/taominze/posts" target="_blank" rel="noopener">https://www.zhihu.com/people/taominze/posts</a></p></blockquote><h2 id="Rasa-NLU系列-一-——Rasa-NLU"><a href="#Rasa-NLU系列-一-——Rasa-NLU" class="headerlink" title="Rasa NLU系列(一)——Rasa NLU"></a>Rasa NLU系列(一)——Rasa NLU</h2><p>Rasa NLU 是一种开源自然语言处理工具，用于对话机器人中的意图分类、响应检索和实体提取。例如：像下面的句子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;I am looking for a Mexican restaurant in the center of town&quot;</span><br></pre></td></tr></table></figure><p>返回结构化数据如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"intent"</span>: <span class="string">"search_restaurant"</span>,</span><br><span class="line">  <span class="attr">"entities"</span>: &#123;</span><br><span class="line">    <span class="attr">"cuisine"</span> : <span class="string">"Mexican"</span>,</span><br><span class="line">    <span class="attr">"location"</span> : <span class="string">"center"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Rasa NLU 以前是一个单独的库，现在已经被整合到 Rasa 框架中。</p><h3 id="训练-NLU-模型"><a href="#训练-NLU-模型" class="headerlink" title="训练 NLU 模型"></a>训练 NLU 模型</h3><p>你可以将 Rasa 作为一个 NLU 组件来使用，要训练 NLU 模型，运行一下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rasa train nlu</span><br></pre></td></tr></table></figure><p>这将在 data/ 目录下寻找 NLU 训练数据，并将训练后的模型保存在 models/ 目录下，该模型以 nlu- 开头命名。</p><h3 id="使用命令行测试-NLU-模型"><a href="#使用命令行测试-NLU-模型" class="headerlink" title="使用命令行测试 NLU 模型"></a>使用命令行测试 NLU 模型</h3><p>运行下面的命令来测试你的 NLU 模型：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rasa shell nlu</span><br></pre></td></tr></table></figure><p>启动 rasa shell 并提示你输入消息进行测试。你可以输入任意多的消息。另外，你可以省略 nlu 参数，直接传入 nlu 模型。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rasa shell -m models&#x2F;nlu-20190515-144445.tar.gz</span><br></pre></td></tr></table></figure><h3 id="启动-NLU-服务"><a href="#启动-NLU-服务" class="headerlink" title="启动 NLU 服务"></a>启动 NLU 服务</h3><p>使用以下命令启动你的 NLU 模型服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rasa run --enable-api -m models&#x2F;nlu-20190515-144445.tar.gz</span><br></pre></td></tr></table></figure><p>然后你可以使用以下命令来测试发送请求，进行测试 NLU 模型。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl localhost:5005&#x2F;model&#x2F;parse -d &#39;&#123;&quot;text&quot;:&quot;hello&quot;&#125;&#39;</span><br></pre></td></tr></table></figure><hr><h2 id="Rasa-NLU系列-二-——训练数据格式"><a href="#Rasa-NLU系列-二-——训练数据格式" class="headerlink" title="Rasa NLU系列(二)——训练数据格式"></a>Rasa NLU系列(二)——训练数据格式</h2><h3 id="数据格式"><a href="#数据格式" class="headerlink" title="数据格式"></a>数据格式</h3><p>NLU 模型的数据格式有两种：Markdown 或 JSON，训练数据存储在一个文件中或者一个目录下的多个文件中，通常使用 Markdown 格式。</p><h4 id="Markdown-格式"><a href="#Markdown-格式" class="headerlink" title="Markdown 格式"></a>Markdown 格式</h4><p>Markdown 是易读易写的 Rasa NLU 格式，示例中使用 Markdown 的链接语法来表示实体，比如：<code>[entity](entitiy name)</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## intent:check_balance</span></span><br><span class="line">- what is my balance &lt;!-- no entity --&gt;</span><br><span class="line">- how much do I have on my [savings](source_account) &lt;!-- entity "source_account" has value "savings" --&gt;</span><br><span class="line">- how much do I have on my [savings account](source_account:savings) &lt;!-- synonyms, method 1--&gt;</span><br><span class="line">- Could I pay in [yen](currency)?  &lt;!-- entity matched by lookup table --&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">## intent:greet</span></span><br><span class="line">- hey</span><br><span class="line">- hello</span><br><span class="line"></span><br><span class="line"><span class="comment">## synonym:savings   &lt;!-- synonyms, method 2 --&gt;</span></span><br><span class="line">- pink pig</span><br><span class="line"></span><br><span class="line"><span class="comment">## regex:zipcode</span></span><br><span class="line">- [<span class="number">0</span><span class="number">-9</span>]&#123;<span class="number">5</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## lookup:currencies   &lt;!-- lookup table list --&gt;</span></span><br><span class="line">- Yen</span><br><span class="line">- USD</span><br><span class="line">- Euro</span><br><span class="line"></span><br><span class="line"><span class="comment">## lookup:additional_currencies  &lt;!-- no list to specify lookup table file --&gt;</span></span><br><span class="line">path/to/currencies.txt</span><br></pre></td></tr></table></figure><p>Rasa NLU 的训练数据分为以下几个部分：</p><ol><li>通用示例</li><li>同义词</li><li>正则表达式</li><li>查找表</li></ol><p>其中<strong>通用示例部分</strong>是必须有的，其他部分虽然不是必须的，但是有助于 NLU 模型的训练学习，让 NLU 模型的预测更准确。</p><p><strong>同义词部分</strong>是将提取的实体映射到相同的名称，例如：“我的储蓄账户”映射为“储蓄”。但是，这仅仅在提取实体之后才会发生，因此你需要提供同义词的示例，以便 Rasa 可以学习提取。</p><p><strong>查找表部分</strong>可以直接指定为列表，也可以指定为 txt 文件（单词或短语以换行分隔）。一旦加载训练数据，这些文件用于生成不区分大小的正则表达式模式，该模式会添加到正则表达式部分中。比如：在上面的例子中，将提供货币名称列表，以便更容易提取该实体。</p><h4 id="JSON-格式"><a href="#JSON-格式" class="headerlink" title="JSON 格式"></a>JSON 格式</h4><p>JSON 格式的最外层字段是 <code>rasa_nlu_data</code>，包含 <code>common_examples</code> <code>entity_synonyms</code> <code>regex_features</code> <code>lookup_tables</code> 字段，其中最重要的是<code>common_examples</code> 字段。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"rasa_nlu_data"</span>: &#123;</span><br><span class="line">        <span class="attr">"common_examples"</span>: [],</span><br><span class="line">        <span class="attr">"regex_features"</span> : [],</span><br><span class="line">        <span class="attr">"lookup_tables"</span>  : [],</span><br><span class="line">        <span class="attr">"entity_synonyms"</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>common_examples</code> 是用来训练你的模型，你应该将所有训练示例放在 <code>common_examples</code> 数组中，正则表达式是辅助分类器检测实体或者意图并提高性能的工具。</p><h3 id="提高意图分类和实体识别"><a href="#提高意图分类和实体识别" class="headerlink" title="提高意图分类和实体识别"></a>提高意图分类和实体识别</h3><h4 id="通用示例"><a href="#通用示例" class="headerlink" title="通用示例"></a>通用示例</h4><p>通用示例由三部分组成：<code>text</code> <code>intent</code> 和 <code>entities</code>。前两个是字符串，最后一个是数组。</p><ul><li><code>text</code> 用户消息（必填）</li><li><code>intent</code> 意图，与用户消息相关的意图（可选）</li><li><code>entities</code> 实体，需要被识别的特定文本（可选）</li></ul><p>实体使用 <code>start</code> 和 <code>end</code> 值指定，共同构成一个 Python 样式范围以应用于字符串，比如：<strong>text=”show me chinese restaurants”</strong>，然后 <strong>text[8:15]==’chinese’</strong>。实际上，实体可以跨越多个单词，也不必与示例中的字符串一一对应，这样有助于将同义词或拼写错误的词映射到同一个词上。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## intent:restaurant_search</span></span><br><span class="line">- show me [chinese](cuisine) restaurants</span><br></pre></td></tr></table></figure><h4 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h4><p>正则表达式用于支持意图分类和实体提取。例如：如果你的实体具有确定性结构（比如邮政编码、电子邮箱地址等），则可以使用正则表达式来简化对该实体的检测。对于邮政编码示例如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## regex:zipcode</span></span><br><span class="line">- [<span class="number">0</span><span class="number">-9</span>]&#123;<span class="number">5</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## regex:greet</span></span><br><span class="line">- hey[^\\s]*</span><br></pre></td></tr></table></figure><p>示例中并没有定义实体、也没有定义意图，仅仅是个描述，你可以记住该正则表达式的用途和对应模式特征的标题。使用正则表达式有助于改善意图分类性能。</p><p>尽可能少的使用单词匹配的方式来创建正则表达式，例如：使用 <code>hey[^\s]*</code> 而不是 <code>hey.*</code>，第一个可能只匹配一个单词，第二个可能匹配整个消息。</p><p>用于实体提取的正则表达式功能，目前只有<strong><code>CRFEntityExtractor</code></strong> 组件支持，其他实体提取器不支持（<strong><code>MitieEntityExtracto</code></strong> <strong><code>SpacyEntityExtractor</code></strong>）。目前，所有的意图分类器都是支持正则表达式功能的。</p><h4 id="查找表"><a href="#查找表" class="headerlink" title="查找表"></a>查找表</h4><p>查找表可以直接指定为列表，也可以指定为 txt 文件（单词或短语以换行分隔）。例如：<code>data/test/lookup_tables/plates.txt</code> 可能包括：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tacos</span><br><span class="line">beef</span><br><span class="line">mapo tofu</span><br><span class="line">burrito</span><br><span class="line">lettuce wrap</span><br></pre></td></tr></table></figure><p>可以通过以下方式加载：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## lookup:plates</span></span><br><span class="line">data/test/lookup_tables/plates.txt</span><br></pre></td></tr></table></figure><p>或者直接将元素包含在查找表中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## lookup:plates</span></span><br><span class="line">- tacos</span><br><span class="line">- beef</span><br><span class="line">- mapo tofu</span><br><span class="line">- burrito</span><br><span class="line">- lettuce wrap</span><br></pre></td></tr></table></figure><p>在数据训练过程中提供查找表，内容将由一个大写和不区分大小写的正则表达式模式组成，该模式在训练示例中查找完全匹配的内容。这些正则表达式可以匹配多个令牌，因此 <code>lettuce wrap</code> 将匹配为 <code>get me a lettuce wrap ASAP</code> ，编码为 <code>[0 0 0 1 1 0]</code> 。这些正则表达式的处理方式与直接在训练数据中指定的正则表达式处理方式是相同的。</p><p><strong>注意：</strong>为了使查找表有效，你的训练数据中必须有一些匹配示例，否则模型不会学习使用查找表匹配功能。在向查找表添加数据时要小心存在错误数据或者其他噪音数据，这可能会影响性能，请确保查找表中的数据为干净数据。</p><h3 id="数据标准化"><a href="#数据标准化" class="headerlink" title="数据标准化"></a>数据标准化</h3><h4 id="实体同义词"><a href="#实体同义词" class="headerlink" title="实体同义词"></a>实体同义词</h4><p>实体同义词是指具有相同值的实体，比如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## intent:search</span></span><br><span class="line">- <span class="keyword">in</span> the center of [NYC](city:New York City)</span><br><span class="line">- <span class="keyword">in</span> the centre of [New York City](city)</span><br></pre></td></tr></table></figure><p>在上面示例中，实体 <code>city</code> 的值均为 <code>New York City</code>。每当找到相同的文本时，该值将使用同义词代替消息中的实际文本。在训练数据中定义同义词，你需要在 <code>pipeline</code> 中定义 <code>EntitySynonymMapper</code> 组件。另外，你也可以添加一个 <code>entity_synonyms</code> 数组来为一个实体值定义多个同义词。比如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## synonym:New York City</span></span><br><span class="line">- NYC</span><br><span class="line">- nyc</span><br><span class="line">- the big apple</span><br></pre></td></tr></table></figure><h3 id="生成更多的示例"><a href="#生成更多的示例" class="headerlink" title="生成更多的示例"></a>生成更多的示例</h3><p>有时生成更多实体示例会很有帮助，比如你有餐厅名称数据库。在社区中也有一些工具来帮助生成更多的实体示例。你也可以使用 <a href="https://link.zhihu.com/?target=https%3A//rodrigopivi.github.io/Chatito/">Chatito</a>（一种使用简单的 DSL 或 <a href="https://link.zhihu.com/?target=https%3A//yuukanoo.github.io/tracy">Tracy</a> 以 rasa 格式生成训练数据集的工具）工具来创建一些训练数据集。但是，生成更多的示例通常会导致过拟合，如果有大量实体值，建议使用查找表功能。</p><hr><h2 id="Rasa-NLU系列-三-——选择一个pipeline"><a href="#Rasa-NLU系列-三-——选择一个pipeline" class="headerlink" title="Rasa NLU系列(三)——选择一个pipeline"></a>Rasa NLU系列(三)——选择一个pipeline</h2><p>选择一个 pipeline。选择 NLU pipeline 可以让你自定义模型并在数据集上进行微调。</p><h3 id="短回答"><a href="#短回答" class="headerlink" title="短回答"></a>短回答</h3><p>如果你的训练数据集少于 1000，可以使用语言模型 spaCy，使用 <code>pretraine_embeddings_spacy</code> 作为 pipeline：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">language: <span class="string">"en"</span></span><br><span class="line"></span><br><span class="line">pipeline: <span class="string">"pretrained_embeddings_spacy"</span></span><br></pre></td></tr></table></figure><p>如果你的训练数据集有 1000 或更多带有标签的数据，使用 <code>supervised_embeddings</code> 作为 pipeline：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">language: <span class="string">"en"</span></span><br><span class="line"></span><br><span class="line">pipeline: <span class="string">"supervised_embeddings"</span></span><br></pre></td></tr></table></figure><h3 id="长回答"><a href="#长回答" class="headerlink" title="长回答"></a>长回答</h3><p>最重要的两个 pipeline 是：<code>supervised_embeddings</code> 和 <code>pretrained_embeddings_spacy</code>。它们之间最大的区别是：<code>pretrained_embeddings_spacy</code> pipeline 是来自 GloVe 或 fastText 的预训练词向量；<code>supervised_embeddings</code> pipeline 不使用任何预先训练的词向量，是为了你的训练集而用的。</p><h4 id="pretrained-embeddings-spacy"><a href="#pretrained-embeddings-spacy" class="headerlink" title="pretrained_embeddings_spacy"></a>pretrained_embeddings_spacy</h4><p><code>pretrained_embeddings_spacy</code> pipeline 的优势在于，当你有一个训练示例，比如：“我想买苹果”，并且要求 Rasa 预测“买梨”的意图，那么你的模型已经知道“苹果”和“梨子”这两个词非常相似，如果你没有太多的训练数据，这将很有用。</p><h4 id="supervised-embeddings"><a href="#supervised-embeddings" class="headerlink" title="supervised_embeddings"></a>supervised_embeddings</h4><p><code>supervised_embeddings</code> pipeline 的优势在于，针对你的 domain 自定义词向量。例如：在英语中单词 “balance” 与 “symmetry” 密切相关，但是与单词 “cash” 有很大不同。在银行领域，”balance” 与 “cash” 密切相关，你希望你的模型能够做到这一点。该 pipeline 不使用特定语言模型，因此它可以与任何你分好词（空格分词或自定义分词）的语言一起使用。</p><h4 id="MITIE"><a href="#MITIE" class="headerlink" title="MITIE"></a>MITIE</h4><p>你可以在 pipeline 中使用 MITIE 作为词向量的来源，请参考 <a href="https://link.zhihu.com/?target=https%3A//rasa.com/docs/rasa/nlu/choosing-a-pipeline/%23section-mitie-pipeline">MITIE</a>。MITIE 后端对于小数据集表现良好，但如果你有数百个以上的示例，训练时间可能会花费很长时间。我们不建议你使用它，因为在将来的版本中可能不再支持 MITIE。</p><h4 id="比较不同的-pipelines"><a href="#比较不同的-pipelines" class="headerlink" title="比较不同的 pipelines"></a>比较不同的 pipelines</h4><p>Rasa 提供了直接比较在不同 pipelines 上数据的性能工具，详情请参考比较 <a href="https://link.zhihu.com/?target=https%3A//rasa.com/docs/rasa/user-guide/evaluating-models/%23comparing-nlu-pipelines">NLU pipelines</a>。</p><h3 id="类别不平衡"><a href="#类别不平衡" class="headerlink" title="类别不平衡"></a>类别不平衡</h3><p>如果存在很大的类别不平衡，例如：你有很多针对某些意图的训练数据，但是其他意图的训练数据很少，通常情况下分类算法表现不佳。为了缓解这个问题，rasa 的 <code>supervised_embeddings</code> pipeline 使用了 <code>balanced</code> 批处理策略。</p><p>该算法确保在每一批次中或至少在尽可能多的后续批次中，代表所有类别，模仿某些类别比其他类别更频繁的事实。默认情况下是使用 <code>balanced</code> 平衡批处理策略。如果你想使用其他的经典批处理策略，在你的配置文件中添加该策略，比如：<code>batch_strategy: sequence</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">language: <span class="string">"en"</span></span><br><span class="line"></span><br><span class="line">pipeline:</span><br><span class="line">- name: <span class="string">"CountVectorsFeaturizer"</span></span><br><span class="line">- name: <span class="string">"EmbeddingIntentClassifier"</span></span><br><span class="line">  batch_strategy: sequence</span><br></pre></td></tr></table></figure><h3 id="多意图"><a href="#多意图" class="headerlink" title="多意图"></a>多意图</h3><p>如果你要将意图拆分为多个标签，比如用于预测多个意图或者建模分层意图结构，那么只能使用有监督的嵌入 pipeline 来执行此操作。因此，需要使用这些标识：<code>WhitespaceTokenizer</code>：</p><ul><li><code>intent_split_symbol</code>：设置分隔符字符串以拆分意图标签，默认 <code>_</code> 。</li></ul><p><a href="https://link.zhihu.com/?target=https%3A//blog.rasa.com/how-to-handle-multiple-intents-per-input-using-rasa-nlu-tensorflow-pipeline/%3F_ga%3D2.253478665.1209149500.1574239925-1880295025.1573435637">这里</a>是关于如何在 Rasa Core 和 NLU 中使用多个意图的教程。以下是一个配置示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">language: <span class="string">"en"</span></span><br><span class="line"></span><br><span class="line">pipeline:</span><br><span class="line">- name: <span class="string">"WhitespaceTokenizer"</span></span><br><span class="line">  intent_split_symbol: <span class="string">"_"</span></span><br><span class="line">- name: <span class="string">"CountVectorsFeaturizer"</span></span><br><span class="line">- name: <span class="string">"EmbeddingIntentClassifier"</span></span><br></pre></td></tr></table></figure><h3 id="理解-Rasa-NLU-Pipeline"><a href="#理解-Rasa-NLU-Pipeline" class="headerlink" title="理解 Rasa NLU Pipeline"></a>理解 Rasa NLU Pipeline</h3><p>在 Rasa NLU 中，传入消息后是由一系列组件进行处理。这些组件在所谓的处理 pipelines 中一个接一个地执行。有用于实体提取、意图分类、响应选择、预处理等组件，如果要添加自己的组件，比如：进行拼写检查或情感分析，请参考<a href="https://link.zhihu.com/?target=https%3A//rasa.com/docs/rasa/api/custom-nlu-components/%23custom-nlu-components">自定义 NLU 组件部分</a>。</p><p>每个组件都处理输入并新建输出，输出可以由 pipelines 中该组件之后的任何组件使用。有一些组件仅仅生成信息给其他组件使用，还有一些组件会生成 <code>Output</code> 属性，这些属性将在处理完成后返回。比如：对于 <code>I am looking for Chinese food</code> 这句话的输出是：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"text"</span>: <span class="string">"I am looking for Chinese food"</span>,</span><br><span class="line">    <span class="attr">"entities"</span>: [</span><br><span class="line">        &#123;<span class="attr">"start"</span>: <span class="number">8</span>, <span class="attr">"end"</span>: <span class="number">15</span>, <span class="attr">"value"</span>: <span class="string">"chinese"</span>, <span class="attr">"entity"</span>: <span class="string">"cuisine"</span>, <span class="attr">"extractor"</span>: <span class="string">"CRFEntityExtractor"</span>, <span class="attr">"confidence"</span>: <span class="number">0.864</span>&#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"intent"</span>: &#123;<span class="attr">"confidence"</span>: <span class="number">0.6485910906220309</span>, <span class="attr">"name"</span>: <span class="string">"restaurant_search"</span>&#125;,</span><br><span class="line">    <span class="attr">"intent_ranking"</span>: [</span><br><span class="line">        &#123;<span class="attr">"confidence"</span>: <span class="number">0.6485910906220309</span>, <span class="attr">"name"</span>: <span class="string">"restaurant_search"</span>&#125;,</span><br><span class="line">        &#123;<span class="attr">"confidence"</span>: <span class="number">0.1416153159565678</span>, <span class="attr">"name"</span>: <span class="string">"affirm"</span>&#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是预配置 <code>pretrained_embeddings_spacy</code> pipeline 中不同组件的结果组合。比如：<code>entities</code> 属性是由 <code>CRFEntityExtractor</code> 组件创建的。</p><h3 id="组件的生命周期"><a href="#组件的生命周期" class="headerlink" title="组件的生命周期"></a>组件的生命周期</h3><p>每个组件都可以实现基类 <code>Component</code> 中的几种方法，在 pipeline 中，将按照特定顺序调用这些不同的方法，让我们假设，我们将以下 pipeline 添加到我们的配置中：<code>&quot;pipeline&quot;: [&quot;Component A&quot;, &quot;Component B&quot;, &quot;Last Component&quot;]</code> 。下图显示了在训练此 pipeline 中的调用顺序。</p><p><img src="https://d33wubrfki0l68.cloudfront.net/1c97278ef18e83661f9faff7c903e4f94ec0158f/9fe1c/_images/component_lifecycle.png" alt=""></p><p>在使用 <code>create</code> 函数之前，会创建一个 <code>context</code> 上下文，此上下文用于组件之间传递信息。例如：一个组件可以计算训练数据的特征向量，将其存储在上下文中，另一个组件可以从这个上下文中检索这些特征向量用于意图分类。</p><p>使用配置填充来初始化上下文，图片中的箭头表示了调用顺序，并可视化了传递上下文的路径。当所有组件训练并持久化之后，最终的上下文字典将被用来持久化模型的元数据。</p><h3 id="返回实体字典说明"><a href="#返回实体字典说明" class="headerlink" title="返回实体字典说明"></a>返回实体字典说明</h3><p>解析完后，该实体以字典形式返回。有两个字段显示 pipeline 如何影响实体的返回信息：<code>extractor</code> 字段告诉你哪个实体提取器提取了该特定实体，<code>processors</code> 字段告诉你更改了该特定实体的组件名。</p><p>使用同义词会导致 <code>value</code> 字段与 <code>text</code> 不完全匹配的情况，它将返回经过训练的同义词。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"text"</span>: <span class="string">"show me chinese restaurants"</span>,</span><br><span class="line">  <span class="attr">"intent"</span>: <span class="string">"restaurant_search"</span>,</span><br><span class="line">  <span class="attr">"entities"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"start"</span>: <span class="number">8</span>,</span><br><span class="line">      <span class="attr">"end"</span>: <span class="number">15</span>,</span><br><span class="line">      <span class="attr">"value"</span>: <span class="string">"chinese"</span>,</span><br><span class="line">      <span class="attr">"entity"</span>: <span class="string">"cuisine"</span>,</span><br><span class="line">      <span class="attr">"extractor"</span>: <span class="string">"CRFEntityExtractor"</span>,</span><br><span class="line">      <span class="attr">"confidence"</span>: <span class="number">0.854</span>,</span><br><span class="line">      <span class="attr">"processors"</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="预配置Pipelines"><a href="#预配置Pipelines" class="headerlink" title="预配置Pipelines"></a>预配置Pipelines</h3><p><strong>模板</strong>(如下面的<code>pretrained_embeddings_spacy</code>)是完整组件列表的一个快捷方式，比如：以下两个配置是等价的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">language: <span class="string">"en"</span></span><br><span class="line"></span><br><span class="line">pipeline: <span class="string">"pretrained_embeddings_spacy"</span></span><br><span class="line">language: <span class="string">"en"</span></span><br><span class="line"></span><br><span class="line">pipeline:</span><br><span class="line">- name: <span class="string">"SpacyNLP"</span></span><br><span class="line">- name: <span class="string">"SpacyTokenizer"</span></span><br><span class="line">- name: <span class="string">"SpacyFeaturizer"</span></span><br><span class="line">- name: <span class="string">"RegexFeaturizer"</span></span><br><span class="line">- name: <span class="string">"CRFEntityExtractor"</span></span><br><span class="line">- name: <span class="string">"EntitySynonymMapper"</span></span><br><span class="line">- name: <span class="string">"SklearnIntentClassifier"</span></span><br></pre></td></tr></table></figure><p>以上是所有自定义预配置 pipelines 模板的列表。</p><h4 id="supervised-embeddings-1"><a href="#supervised-embeddings-1" class="headerlink" title="supervised_embeddings"></a>supervised_embeddings</h4><p>在 <code>config.yml</code> 配置文件中定义 <code>supervised_embeddings</code> pipeline，来训练你的 Rasa 模型，定义方式如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">language: <span class="string">"en"</span></span><br><span class="line">  </span><br><span class="line">pipeline: <span class="string">"supervised_embeddings"</span></span><br></pre></td></tr></table></figure><p>该 <code>supervised_embeddings</code> pipeline 可以支持任何语言。默认情况下，它以空格进行分词。你可以通过添加或更改组件来自定义该 pipeline 的设置。以下是构成 <code>supervised_embeddings</code> pipeline 的默认配置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">language: <span class="string">"en"</span></span><br><span class="line"></span><br><span class="line">pipeline:</span><br><span class="line">- name: <span class="string">"WhitespaceTokenizer"</span></span><br><span class="line">- name: <span class="string">"RegexFeaturizer"</span></span><br><span class="line">- name: <span class="string">"CRFEntityExtractor"</span></span><br><span class="line">- name: <span class="string">"EntitySynonymMapper"</span></span><br><span class="line">- name: <span class="string">"CountVectorsFeaturizer"</span></span><br><span class="line">- name: <span class="string">"CountVectorsFeaturizer"</span></span><br><span class="line">  analyzer: <span class="string">"char_wb"</span></span><br><span class="line">  min_ngram: <span class="number">1</span></span><br><span class="line">  max_ngram: <span class="number">4</span></span><br><span class="line">- name: <span class="string">"EmbeddingIntentClassifier"</span></span><br></pre></td></tr></table></figure><p>如果你的语言没有空格分隔，比如汉语，你可以将 <code>WhitespaceTokenizer</code> 换成你自己的分词器。我们支持许多不同的<a href="https://link.zhihu.com/?target=https%3A//rasa.com/docs/rasa/nlu/components/%23tokenizers">分词器</a>，比如：Jieba 分词，或者你也可以创建自己的分词器。</p><p>上面示例中的 pipeline 使用了两个实例 <code>CountVectorsFeaturizer</code> 。第一个用于单词的文本特征化，第二个基于字符 <code>n-grams</code> 对文本进行特征化处理，保留词边界。通过经验发现，第二个功能很强大，但我们决定也保留第一个强大的功能。</p><h4 id="pretrained-embeddings-spacy-1"><a href="#pretrained-embeddings-spacy-1" class="headerlink" title="pretrained_embeddings_spacy"></a>pretrained_embeddings_spacy</h4><p><code>pretrained_embeddings_spacy</code> pipeline 的模板如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">language: <span class="string">"en"</span></span><br><span class="line"></span><br><span class="line">pipeline: <span class="string">"pretrained_embeddings_spacy"</span></span><br></pre></td></tr></table></figure><p>有关加载 <code>spacy</code> 语言模型更多的信息，请参考<a href="https://link.zhihu.com/?target=https%3A//rasa.com/docs/rasa/nlu/language-support/%23pretrained-word-vectors">预训练词向量</a>。配置信息如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">language: <span class="string">"en"</span></span><br><span class="line"></span><br><span class="line">pipeline:</span><br><span class="line">- name: <span class="string">"SpacyNLP"</span></span><br><span class="line">- name: <span class="string">"SpacyTokenizer"</span></span><br><span class="line">- name: <span class="string">"SpacyFeaturizer"</span></span><br><span class="line">- name: <span class="string">"RegexFeaturizer"</span></span><br><span class="line">- name: <span class="string">"CRFEntityExtractor"</span></span><br><span class="line">- name: <span class="string">"EntitySynonymMapper"</span></span><br><span class="line">- name: <span class="string">"SklearnIntentClassifier"</span></span><br></pre></td></tr></table></figure><h4 id="MITIE-1"><a href="#MITIE-1" class="headerlink" title="MITIE"></a>MITIE</h4><p>作者：Kevin陶民泽<br>链接：<a href="https://zhuanlan.zhihu.com/p/95985939" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/95985939</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><p>使用 MITIE pipeline，需要从语料库中训练词向量。相关介绍可以再<a href="https://link.zhihu.com/?target=https%3A//rasa.com/docs/rasa/nlu/language-support/%23mitie">这里</a>查看。<code>model</code> 参数用来传入文件路径。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">language: <span class="string">"en"</span></span><br><span class="line"></span><br><span class="line">pipeline:</span><br><span class="line">- name: <span class="string">"MitieNLP"</span></span><br><span class="line">  model: <span class="string">"data/total_word_feature_extractor.dat"</span></span><br><span class="line">- name: <span class="string">"MitieTokenizer"</span></span><br><span class="line">- name: <span class="string">"MitieEntityExtractor"</span></span><br><span class="line">- name: <span class="string">"EntitySynonymMapper"</span></span><br><span class="line">- name: <span class="string">"RegexFeaturizer"</span></span><br><span class="line">- name: <span class="string">"MitieFeaturizer"</span></span><br><span class="line">- name: <span class="string">"SklearnIntentClassifier"</span></span><br></pre></td></tr></table></figure><p>该 pipeline 的另一个版本是使用 MITIE 的特征器和多类分类器。该版本的训练可能很慢，所以不建议用于大型数据集上。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">language: <span class="string">"en"</span></span><br><span class="line"></span><br><span class="line">pipeline:</span><br><span class="line">- name: <span class="string">"MitieNLP"</span></span><br><span class="line">  model: <span class="string">"data/total_word_feature_extractor.dat"</span></span><br><span class="line">- name: <span class="string">"MitieTokenizer"</span></span><br><span class="line">- name: <span class="string">"MitieEntityExtractor"</span></span><br><span class="line">- name: <span class="string">"EntitySynonymMapper"</span></span><br><span class="line">- name: <span class="string">"RegexFeaturizer"</span></span><br><span class="line">- name: <span class="string">"MitieIntentClassifier"</span></span><br></pre></td></tr></table></figure><h4 id="自定义Pipelines"><a href="#自定义Pipelines" class="headerlink" title="自定义Pipelines"></a>自定义Pipelines</h4><p>你可以选择不使用模板，你可以通过列出要使用的组件名称来自定义自己的 pipeline。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pipeline:</span><br><span class="line">- name: <span class="string">"SpacyNLP"</span></span><br><span class="line">- name: <span class="string">"CRFEntityExtractor"</span></span><br><span class="line">- name: <span class="string">"EntitySynonymMapper"</span></span><br></pre></td></tr></table></figure><p>这将创建仅仅用于实体识别的 pipeline，不用于意图分类。因此，Rasa NLU 不会预测任何意图，你可以在<a href="https://link.zhihu.com/?target=https%3A//rasa.com/docs/rasa/nlu/components/%23components">组件中</a>找到每个组件的详细信息。</p><p>如果你想要在 pipeline 中自定义组件，请参阅<a href="https://link.zhihu.com/?target=https%3A//rasa.com/docs/rasa/api/custom-nlu-components/%23custom-nlu-components">自定义 NLU 组件部分</a>。</p><hr><h2 id="Rasa-NLU系列-四-——语言支持"><a href="#Rasa-NLU系列-四-——语言支持" class="headerlink" title="Rasa NLU系列(四)——语言支持"></a>Rasa NLU系列(四)——语言支持</h2><p>你可以使用 Rasa 来构建任何你所需要的语言助手！<strong>Rasa 的 <code>supervised_embeddings</code> pipeline 可以用在任何语言的训练数据集上。</strong>这个 pipeline 使用你提供的数据从头开始创建词嵌入。</p><p>另外，我们也提供了预训练好的词嵌入，比如：spaCy。</p><h3 id="使用任何语言训练模型"><a href="#使用任何语言训练模型" class="headerlink" title="使用任何语言训练模型"></a>使用任何语言训练模型</h3><p>Rasa 的 <code>supervised_embeddings</code> pipeline 可以用于任何语言训练模型，它将使用你自己的训练数据来创建自定义词嵌入。这意味着任何特定单词的向量表示形式将取决于与其他在训练数据集中的单词的关系。这种定制化意味着，该 pipeline 非常适合依赖于特定领域数据的示例，比如：需要哪些提取特定产品名称的示例。</p><p>使用你的首选语言训练 Rasa 模型，可以通过Rasa 入门教程 NLU 系列（二）中的说明，将 <code>supervised_embeddings</code> pipeline 配置在 <code>config.yml</code> 文件中，或者配置其他文件中的 pipeline。</p><p>配置 <code>supervised_embeddings</code> pipeline 并生成一些 NLU 训练数据后，使用 <code>rasa train nlu</code> 命令训练模型。当训练完成后，你就可以测试该语言模型了。通过以下来运行你的 NLU 模型：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rasa shell nlu</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：如果你发现你的模型识别效果不佳，或者无法识别，请尝试更多的示例数据来训练模型。</p><h3 id="预训练词向量"><a href="#预训练词向量" class="headerlink" title="预训练词向量"></a>预训练词向量</h3><p>如果预训词向量中有你使用的语言，那么预训练词向量是一个不错的好方法，因为词向量是根据大量数据训练得到的，例如维基百科。</p><h4 id="spaCy"><a href="#spaCy" class="headerlink" title="spaCy"></a>spaCy</h4><p>通过 <code>pretrained_embeddings_spacy</code> pipeline，你可以使用 spaCy 的预训练语言模型或者加载 fastText 向量，这些向量可用于数百种语言。如果你想将自定义的模型合并到 spaCy 中，请查看他们有关<a href="https://link.zhihu.com/?target=https%3A//spacy.io/docs/usage/adding-languages">添加语言</a>部分。如文档中所述，你需要注册你的语言模型并将其链接到语言标识符，这将允许 Rasa 通过传递语言标识符作为 <code>language</code> 来加载和使用你的新语言。</p><h4 id="MITIE-2"><a href="#MITIE-2" class="headerlink" title="MITIE"></a>MITIE</h4><p>你还可以使用 MITIE 从语料库中预先训练自己的词向量，需要做以下几点：</p><ol><li>获得干净的语料库作为一组文本文件。</li><li>在语料库上构建并运行 MITIE Wordrep 工具。这可能需要几小时或几天，这取决于你的数据量和硬件配置。你需要大约 128G 的 RAM 才能运行 Wordrep 工具。</li><li>将你的配置文件中的 <code>model</code> 参数设置为新的路径：<code>total_word_feature_extractor.dat</code>。</li></ol><p>有关如何训练 MITIE 词向量的完整示例，请查看<a href="https://link.zhihu.com/?target=http%3A//www.crownpku.com/2017/07/27/%E7%94%A8Rasa_NLU%E6%9E%84%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AD%E6%96%87NLU%E7%B3%BB%E7%BB%9F.html">这篇文章</a>。</p><hr><h2 id="Rasa-NLU系列-五-——实体提取"><a href="#Rasa-NLU系列-五-——实体提取" class="headerlink" title="Rasa NLU系列(五)——实体提取"></a>Rasa NLU系列(五)——实体提取</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>以下是可用的实体提取器及其用途的概述：</p><table><thead><tr><th align="left">Component</th><th align="left">Requires</th><th align="left">Model</th><th align="left">Notes</th></tr></thead><tbody><tr><td align="left"><code>CRFEntityExtractor</code></td><td align="left">sklearn-crfsuite</td><td align="left">conditional random field</td><td align="left">good for training custom entities</td></tr><tr><td align="left"><code>SpacyEntityExtractor</code></td><td align="left">spaCy</td><td align="left">averaged perceptron</td><td align="left">provides pre-trained entities</td></tr><tr><td align="left"><code>DucklingHTTPExtractor</code></td><td align="left">running duckling</td><td align="left">context-free grammar</td><td align="left">provides pre-trained entities</td></tr><tr><td align="left"><code>MitieEntityExtractor</code></td><td align="left">MITIE</td><td align="left">structured SVM</td><td align="left">good for training custom entities</td></tr><tr><td align="left"><code>EntitySynonymMapper</code></td><td align="left">existing entities</td><td align="left">N/A</td><td align="left">maps known synonyms</td></tr></tbody></table><p>如果你的 pipeline 包括了上述一个或多个组件，那么经过训练的模型的输出将包括提取的实体以及有关哪个组件提取了它们的一些元数据信息。<code>processors</code> 字段包含更改每个实体的组件名。以下是一个示例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"text"</span>: <span class="string">"show me chinese restaurants"</span>,</span><br><span class="line">  <span class="attr">"intent"</span>: <span class="string">"restaurant_search"</span>,</span><br><span class="line">  <span class="attr">"entities"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"start"</span>: <span class="number">8</span>,</span><br><span class="line">      <span class="attr">"end"</span>: <span class="number">15</span>,</span><br><span class="line">      <span class="attr">"value"</span>: <span class="string">"chinese"</span>,</span><br><span class="line">      <span class="attr">"entity"</span>: <span class="string">"cuisine"</span>,</span><br><span class="line">      <span class="attr">"extractor"</span>: <span class="string">"CRFEntityExtractor"</span>,</span><br><span class="line">      <span class="attr">"confidence"</span>: <span class="number">0.854</span>,</span><br><span class="line">      <span class="attr">"processors"</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有些提取器可能包含其他信息，比如 <code>duckling</code>：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"additional_info"</span>:&#123;</span><br><span class="line">    <span class="attr">"grain"</span>:<span class="string">"day"</span>,</span><br><span class="line">    <span class="attr">"type"</span>:<span class="string">"value"</span>,</span><br><span class="line">    <span class="attr">"value"</span>:<span class="string">"2018-06-21T00:00:00.000-07:00"</span>,</span><br><span class="line">    <span class="attr">"values"</span>:[</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"grain"</span>:<span class="string">"day"</span>,</span><br><span class="line">        <span class="attr">"type"</span>:<span class="string">"value"</span>,</span><br><span class="line">        <span class="attr">"value"</span>:<span class="string">"2018-06-21T00:00:00.000-07:00"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"confidence"</span>:<span class="number">1.0</span>,</span><br><span class="line">  <span class="attr">"end"</span>:<span class="number">5</span>,</span><br><span class="line">  <span class="attr">"entity"</span>:<span class="string">"time"</span>,</span><br><span class="line">  <span class="attr">"extractor"</span>:<span class="string">"DucklingHTTPExtractor"</span>,</span><br><span class="line">  <span class="attr">"start"</span>:<span class="number">0</span>,</span><br><span class="line">  <span class="attr">"text"</span>:<span class="string">"today"</span>,</span><br><span class="line">  <span class="attr">"value"</span>:<span class="string">"2018-06-21T00:00:00.000-07:00"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="自定义实体"><a href="#自定义实体" class="headerlink" title="自定义实体"></a>自定义实体</h3><p>几乎每个对话机器人和语音 APP 都会有一些自定义的实体。一个餐饮助手应该将 <code>chinese</code> 理解为 <code>cuisine</code>，但是对于一个语言学习助手来说，意义就大不相同了。<code>CRFEntityExtractor</code> 组件可以根据训练数据集，使用任何语言学习自定义实体。有关如何在训练数据中包括实体，请参考Rasa 入门教程 NLU 系列（二）。</p><h3 id="提取地点、日期、人名、组织机构"><a href="#提取地点、日期、人名、组织机构" class="headerlink" title="提取地点、日期、人名、组织机构"></a>提取地点、日期、人名、组织机构</h3><p>spaCy 拥有优秀的预训练命名实体识别器，应用于几种不同的语言上。你可以在<a href="https://link.zhihu.com/?target=https%3A//demos.explosion.ai/displacy-ent/">交互式演示</a>中对其进行测试。我们不建议你使用 spaCy 来训练自己的 NER，除非你有大量数据并且知道自己在做什么。有些 spaCy 模型是对大小写敏感的。</p><h3 id="日期、金额、时间段、距离、序号"><a href="#日期、金额、时间段、距离、序号" class="headerlink" title="日期、金额、时间段、距离、序号"></a>日期、金额、时间段、距离、序号</h3><p><code>duckling</code> 库将实际的日期对象转换成你可以使用的表达方式，比如：“下周四晚上 8 点”被转换成如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"next Thursday at 8pm"</span></span><br><span class="line">=&gt; &#123;"value":"2019-11-29T20:00:00.000+01:00"&#125;</span><br></pre></td></tr></table></figure><p><a href="https://link.zhihu.com/?target=https%3A//github.com/facebook/duckling/tree/master/Duckling/Dimensions">这里</a>列出了支持的语言，Duckling 也可以处理诸如“两个小时”之类的时间段、金额、距离和序号。有幸的是，有个 duckling 的 docker 容器可供使用，你只需要注册并连接到 Rasa NLU上（请参阅 <a href="https://link.zhihu.com/?target=https%3A//rasa.com/docs/rasa/nlu/components/%23ducklinghttpextractor">DucklingHTTPExtractor</a>）。</p><h3 id="正则表达式Regex"><a href="#正则表达式Regex" class="headerlink" title="正则表达式Regex"></a>正则表达式Regex</h3><p>你可以使用正则表达式来帮助 CRF 模型学习识别实体，在你的训练集中，你可以提供一个正则表达式列表，每个正则表达式都提供一个带有 0 和 1 的二进制特征的 <code>CRFEntityExtractor</code> ，如果找到了则为 1，否则为 0。</p><p>例如：德国的街道的名字通常以 <code>strasse</code> 结尾，通过添加正则表达式，我们告诉模型注意以这种方式结尾的单词，并迅速学习将其与位置实体相关联。</p><p>如果你只想精准匹配正则表达式，你可以在收到 Rasa NLU 模型响应后，在代码中执行此操作，作为后处理步骤。</p><h3 id="将自定义特征传给-CRFEntityExtractor"><a href="#将自定义特征传给-CRFEntityExtractor" class="headerlink" title="将自定义特征传给 CRFEntityExtractor"></a>将自定义特征传给 <code>CRFEntityExtractor</code></h3><p>如果你想要将自定义特征传给 <code>CRFEntityExtractor</code>，可以通过创建一个 <code>Featurizer</code> 来提供 <code>ner_features</code> 功能。如果这样做，<code>ner_features</code> 应为 <code>len(tokens)</code> 的可迭代项，其中每个实体都是一个向量。如果在配置中的数组 <code>features</code> 里的 <code>CRFEntityExtractor</code> 找到了 <code>ner_features</code>，它将把向量传给 <code>CRFEntityExtractor</code>。你可以使用：ref: <code>SpacyFeaturizer</code> 这个简单的例子将词向量作为特征传给 <code>CRFEntityExtract</code></p><hr><h2 id="Rasa-NLU系列-六-——组件"><a href="#Rasa-NLU系列-六-——组件" class="headerlink" title="Rasa NLU系列(六)——组件"></a>Rasa NLU系列(六)——组件</h2><h3 id="词向量"><a href="#词向量" class="headerlink" title="词向量"></a>词向量</h3><h4 id="MitieNLP"><a href="#MitieNLP" class="headerlink" title="MitieNLP"></a>MitieNLP</h4><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcaumgpaefj31360g0ju1.jpg" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pipeline:</span><br><span class="line">- name: <span class="string">"MitieNLP"</span></span><br><span class="line">  <span class="comment"># language model to load</span></span><br><span class="line">  model: <span class="string">"data/total_word_feature_extractor.dat"</span></span><br></pre></td></tr></table></figure><p>有关该文件的更多信息，请安装 MITIE。</p><h4 id="SpacyNLP"><a href="#SpacyNLP" class="headerlink" title="SpacyNLP"></a>SpacyNLP</h4><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcaunordu2j313o0la782.jpg" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">pipeline:</span><br><span class="line">- name: <span class="string">"SpacyNLP"</span></span><br><span class="line">  <span class="comment"># language model to load</span></span><br><span class="line">  model: <span class="string">"en_core_web_md"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># when retrieving word vectors, this will decide if the casing</span></span><br><span class="line">  <span class="comment"># of the word is relevant. E.g. `hello` and `Hello` will</span></span><br><span class="line">  <span class="comment"># retrieve the same vector, if set to `false`. For some</span></span><br><span class="line">  <span class="comment"># applications and models it makes sense to differentiate</span></span><br><span class="line">  <span class="comment"># between these two words, therefore setting this to `true`.</span></span><br><span class="line">  case_sensitive: false</span><br></pre></td></tr></table></figure><h3 id="特征器"><a href="#特征器" class="headerlink" title="特征器"></a>特征器</h3><h4 id="MitieFeaturizer"><a href="#MitieFeaturizer" class="headerlink" title="MitieFeaturizer"></a>MitieFeaturizer</h4><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcaupnvqckj313g0fs76r.jpg" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pipeline:</span><br><span class="line">- name: <span class="string">"MitieFeaturizer"</span></span><br></pre></td></tr></table></figure><h4 id="SpacyFeaturizer"><a href="#SpacyFeaturizer" class="headerlink" title="SpacyFeaturizer"></a>SpacyFeaturizer</h4><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcauqoaih2j313c0i6dio.jpg" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pipeline:</span><br><span class="line">- name: <span class="string">"SpacyFeaturizer"</span></span><br><span class="line">  <span class="comment"># Whether to add word vectors to ``ner_features`` (default: False)</span></span><br><span class="line">  ner_feature_vectors: <span class="literal">True</span></span><br></pre></td></tr></table></figure><h4 id="NGramFeaturizer"><a href="#NGramFeaturizer" class="headerlink" title="NGramFeaturizer"></a>NGramFeaturizer</h4><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcaurlrspvj313a0qowie.jpg" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pipeline:</span><br><span class="line">- name: <span class="string">"NGramFeaturizer"</span></span><br><span class="line">  <span class="comment"># Maximum number of ngrams to use when augmenting</span></span><br><span class="line">  <span class="comment"># feature vectors with character ngrams</span></span><br><span class="line">  max_number_of_ngrams: <span class="number">10</span></span><br></pre></td></tr></table></figure><h4 id="RegexFeaturizer"><a href="#RegexFeaturizer" class="headerlink" title="RegexFeaturizer"></a>RegexFeaturizer</h4><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcausmuce1j30jh0ga0uc.jpg" alt=""></p><h4 id="CountVectorsFeaturizer"><a href="#CountVectorsFeaturizer" class="headerlink" title="CountVectorsFeaturizer"></a>CountVectorsFeaturizer</h4><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcautt90hrj30jg0lc41l.jpg" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">pipeline:</span><br><span class="line">- name: <span class="string">"CountVectorsFeaturizer"</span></span><br><span class="line">  <span class="comment"># whether to use a shared vocab</span></span><br><span class="line">  <span class="string">"use_shared_vocab"</span>: <span class="literal">False</span>,</span><br><span class="line">  <span class="comment"># whether to use word or character n-grams</span></span><br><span class="line">  <span class="comment"># 'char_wb' creates character n-grams only inside word boundaries</span></span><br><span class="line">  <span class="comment"># n-grams at the edges of words are padded with space.</span></span><br><span class="line">  analyzer: <span class="string">'word'</span>  <span class="comment"># use 'char' or 'char_wb' for character</span></span><br><span class="line">  <span class="comment"># the parameters are taken from</span></span><br><span class="line">  <span class="comment"># sklearn's CountVectorizer</span></span><br><span class="line">  <span class="comment"># regular expression for tokens</span></span><br><span class="line">  token_pattern: <span class="string">r'(?u)\b\w\w+\b'</span></span><br><span class="line">  <span class="comment"># remove accents during the preprocessing step</span></span><br><span class="line">  strip_accents: <span class="literal">None</span>  <span class="comment"># &#123;'ascii', 'unicode', None&#125;</span></span><br><span class="line">  <span class="comment"># list of stop words</span></span><br><span class="line">  stop_words: <span class="literal">None</span>  <span class="comment"># string &#123;'english'&#125;, list, or None (default)</span></span><br><span class="line">  <span class="comment"># min document frequency of a word to add to vocabulary</span></span><br><span class="line">  <span class="comment"># float - the parameter represents a proportion of documents</span></span><br><span class="line">  <span class="comment"># integer - absolute counts</span></span><br><span class="line">  min_df: <span class="number">1</span>  <span class="comment"># float in range [0.0, 1.0] or int</span></span><br><span class="line">  <span class="comment"># max document frequency of a word to add to vocabulary</span></span><br><span class="line">  <span class="comment"># float - the parameter represents a proportion of documents</span></span><br><span class="line">  <span class="comment"># integer - absolute counts</span></span><br><span class="line">  max_df: <span class="number">1.0</span>  <span class="comment"># float in range [0.0, 1.0] or int</span></span><br><span class="line">  <span class="comment"># set ngram range</span></span><br><span class="line">  min_ngram: <span class="number">1</span>  <span class="comment"># int</span></span><br><span class="line">  max_ngram: <span class="number">1</span>  <span class="comment"># int</span></span><br><span class="line">  <span class="comment"># limit vocabulary size</span></span><br><span class="line">  max_features: <span class="literal">None</span>  <span class="comment"># int or None</span></span><br><span class="line">  <span class="comment"># if convert all characters to lowercase</span></span><br><span class="line">  lowercase: true  <span class="comment"># bool</span></span><br><span class="line">  <span class="comment"># handling Out-Of-Vacabulary (OOV) words</span></span><br><span class="line">  <span class="comment"># will be converted to lowercase if lowercase is true</span></span><br><span class="line">  OOV_token: <span class="literal">None</span>  <span class="comment"># string or None</span></span><br><span class="line">  OOV_words: []  <span class="comment"># list of strings</span></span><br></pre></td></tr></table></figure><h3 id="意图分类器"><a href="#意图分类器" class="headerlink" title="意图分类器"></a>意图分类器</h3><h4 id="KeywordIntentClassifier"><a href="#KeywordIntentClassifier" class="headerlink" title="KeywordIntentClassifier"></a>KeywordIntentClassifier</h4><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcauvgcbtrj30je07uwfa.jpg" alt=""></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"intent"</span>: &#123;<span class="attr">"name"</span>: <span class="string">"greet"</span>, <span class="attr">"confidence"</span>: <span class="number">0.98343</span>&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="MitieIntentClassifier"><a href="#MitieIntentClassifier" class="headerlink" title="MitieIntentClassifier"></a>MitieIntentClassifier</h4><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcauw63j2uj30jj07naat.jpg" alt=""></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Configuration</span><br><span class="line">pipeline:</span><br><span class="line">- name: "MitieIntentClassifier"</span><br><span class="line"></span><br><span class="line"># Output Example</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"intent"</span>: &#123;<span class="attr">"name"</span>: <span class="string">"greet"</span>, <span class="attr">"confidence"</span>: <span class="number">0.98343</span>&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="SklearnIntentClassifier"><a href="#SklearnIntentClassifier" class="headerlink" title="SklearnIntentClassifier"></a>SklearnIntentClassifier</h4><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcauwse8d1j30jg0duq4h.jpg" alt=""></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># Configuration</span><br><span class="line">pipeline:</span><br><span class="line">- name: "SklearnIntentClassifier"</span><br><span class="line">  # Specifies the list of regularization values to</span><br><span class="line">  # cross-validate over for C-SVM.</span><br><span class="line">  # This is used with the ``kernel`` hyperparameter in GridSearchCV.</span><br><span class="line">  C: [1, 2, 5, 10, 20, 100]</span><br><span class="line">  # Specifies the kernel to use with C-SVM.</span><br><span class="line">  # This is used with the ``C`` hyperparameter in GridSearchCV.</span><br><span class="line">  kernels: ["linear"]</span><br><span class="line"></span><br><span class="line"># Output Example</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"intent"</span>: &#123;<span class="attr">"name"</span>: <span class="string">"greet"</span>, <span class="attr">"confidence"</span>: <span class="number">0.78343</span>&#125;,</span><br><span class="line">    <span class="attr">"intent_ranking"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"confidence"</span>: <span class="number">0.1485910906220309</span>,</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"goodbye"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"confidence"</span>: <span class="number">0.08161531595656784</span>,</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"restaurant_search"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="EmbeddingIntentClassifier"><a href="#EmbeddingIntentClassifier" class="headerlink" title="EmbeddingIntentClassifier"></a>EmbeddingIntentClassifier</h4><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcauy24z09j30jm180gsr.jpg" alt=""></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"># Configuration</span><br><span class="line">defaults = &#123;</span><br><span class="line">    # nn architecture</span><br><span class="line">    # sizes of hidden layers before the embedding layer for input words</span><br><span class="line">    # the number of hidden layers is thus equal to the length of this list</span><br><span class="line">    "hidden_layers_sizes_a": [256, 128],</span><br><span class="line">    # sizes of hidden layers before the embedding layer for intent labels</span><br><span class="line">    # the number of hidden layers is thus equal to the length of this list</span><br><span class="line">    "hidden_layers_sizes_b": [],</span><br><span class="line">    # Whether to share the hidden layer weights between input words and labels</span><br><span class="line">    "share_hidden_layers": False,</span><br><span class="line">    # training parameters</span><br><span class="line">    # initial and final batch sizes - batch size will be</span><br><span class="line">    # linearly increased for each epoch</span><br><span class="line">    "batch_size": [64, 256],</span><br><span class="line">    # how to create batches</span><br><span class="line">    "batch_strategy": "balanced",  # string 'sequence' or 'balanced'</span><br><span class="line">    # number of epochs</span><br><span class="line">    "epochs": 300,</span><br><span class="line">    # set random seed to any int to get reproducible results</span><br><span class="line">    "random_seed": None,</span><br><span class="line">    # embedding parameters</span><br><span class="line">    # dimension size of embedding vectors</span><br><span class="line">    "embed_dim": 20,</span><br><span class="line">    # the type of the similarity</span><br><span class="line">    "num_neg": 20,</span><br><span class="line">    # flag if minimize only maximum similarity over incorrect actions</span><br><span class="line">    "similarity_type": "auto",  # string 'auto' or 'cosine' or 'inner'</span><br><span class="line">    # the type of the loss function</span><br><span class="line">    "loss_type": "softmax",  # string 'softmax' or 'margin'</span><br><span class="line">    # how similar the algorithm should try</span><br><span class="line">    # to make embedding vectors for correct labels</span><br><span class="line">    "mu_pos": 0.8,  # should be 0.0 &lt; ... &lt; 1.0 for 'cosine'</span><br><span class="line">    # maximum negative similarity for incorrect labels</span><br><span class="line">    "mu_neg": -0.4,  # should be -1.0 &lt; ... &lt; 1.0 for 'cosine'</span><br><span class="line">    # flag: if true, only minimize the maximum similarity for incorrect labels</span><br><span class="line">    "use_max_sim_neg": True,</span><br><span class="line">    # scale loss inverse proportionally to confidence of correct prediction</span><br><span class="line">    "scale_loss": True,</span><br><span class="line">    # regularization parameters</span><br><span class="line">    # the scale of L2 regularization</span><br><span class="line">    "C2": 0.002,</span><br><span class="line">    # the scale of how critical the algorithm should be of minimizing the</span><br><span class="line">    # maximum similarity between embeddings of different labels</span><br><span class="line">    "C_emb": 0.8,</span><br><span class="line">    # dropout rate for rnn</span><br><span class="line">    "droprate": 0.2,</span><br><span class="line">    # visualization of accuracy</span><br><span class="line">    # how often to calculate training accuracy</span><br><span class="line">    "evaluate_every_num_epochs": 20,  # small values may hurt performance</span><br><span class="line">    # how many examples to use for calculation of training accuracy</span><br><span class="line">    "evaluate_on_num_examples": 0,  # large values may hurt performance</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># Output Example</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"intent"</span>: &#123;<span class="attr">"name"</span>: <span class="string">"greet"</span>, <span class="attr">"confidence"</span>: <span class="number">0.8343</span>&#125;,</span><br><span class="line">    <span class="attr">"intent_ranking"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"confidence"</span>: <span class="number">0.385910906220309</span>,</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"goodbye"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"confidence"</span>: <span class="number">0.28161531595656784</span>,</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"restaurant_search"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h3><h4 id="Response-Selector"><a href="#Response-Selector" class="headerlink" title="Response Selector"></a>Response Selector</h4><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcauzpe6rfj30jh0ij772.jpg" alt=""></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"># Configuration</span><br><span class="line">defaults = &#123;</span><br><span class="line">    # nn architecture</span><br><span class="line">    # sizes of hidden layers before the embedding layer for input words</span><br><span class="line">    # the number of hidden layers is thus equal to the length of this list</span><br><span class="line">    "hidden_layers_sizes_a": [256, 128],</span><br><span class="line">    # sizes of hidden layers before the embedding layer for intent labels</span><br><span class="line">    # the number of hidden layers is thus equal to the length of this list</span><br><span class="line">    "hidden_layers_sizes_b": [256, 128],</span><br><span class="line">    # Whether to share the hidden layer weights between input words and intent labels</span><br><span class="line">    "share_hidden_layers": False,</span><br><span class="line">    # training parameters</span><br><span class="line">    # initial and final batch sizes - batch size will be</span><br><span class="line">    # linearly increased for each epoch</span><br><span class="line">    "batch_size": [64, 256],</span><br><span class="line">    # how to create batches</span><br><span class="line">    "batch_strategy": "balanced",  # string 'sequence' or 'balanced'</span><br><span class="line">    # number of epochs</span><br><span class="line">    "epochs": 300,</span><br><span class="line">    # set random seed to any int to get reproducible results</span><br><span class="line">    "random_seed": None,</span><br><span class="line">    # embedding parameters</span><br><span class="line">    # dimension size of embedding vectors</span><br><span class="line">    "embed_dim": 20,</span><br><span class="line">    # the type of the similarity</span><br><span class="line">    "num_neg": 20,</span><br><span class="line">    # flag if minimize only maximum similarity over incorrect actions</span><br><span class="line">    "similarity_type": "auto",  # string 'auto' or 'cosine' or 'inner'</span><br><span class="line">    # the type of the loss function</span><br><span class="line">    "loss_type": "softmax",  # string 'softmax' or 'margin'</span><br><span class="line">    # how similar the algorithm should try</span><br><span class="line">    # to make embedding vectors for correct intent labels</span><br><span class="line">    "mu_pos": 0.8,  # should be 0.0 &lt; ... &lt; 1.0 for 'cosine'</span><br><span class="line">    # maximum negative similarity for incorrect intent labels</span><br><span class="line">    "mu_neg": -0.4,  # should be -1.0 &lt; ... &lt; 1.0 for 'cosine'</span><br><span class="line">    # flag: if true, only minimize the maximum similarity for</span><br><span class="line">    # incorrect intent labels</span><br><span class="line">    "use_max_sim_neg": True,</span><br><span class="line">    # scale loss inverse proportionally to confidence of correct prediction</span><br><span class="line">    "scale_loss": True,</span><br><span class="line">    # regularization parameters</span><br><span class="line">    # the scale of L2 regularization</span><br><span class="line">    "C2": 0.002,</span><br><span class="line">    # the scale of how critical the algorithm should be of minimizing the</span><br><span class="line">    # maximum similarity between embeddings of different intent labels</span><br><span class="line">    "C_emb": 0.8,</span><br><span class="line">    # dropout rate for rnn</span><br><span class="line">    "droprate": 0.2,</span><br><span class="line">    # visualization of accuracy</span><br><span class="line">    # how often to calculate training accuracy</span><br><span class="line">    "evaluate_every_num_epochs": 20,  # small values may hurt performance</span><br><span class="line">    # how many examples to use for calculation of training accuracy</span><br><span class="line">    "evaluate_on_num_examples": 0,  # large values may hurt performance,</span><br><span class="line">    # selector config</span><br><span class="line">    # name of the intent for which this response selector is to be trained</span><br><span class="line">    "retrieval_intent": None,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># Output Example</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"text"</span>: <span class="string">"What is the recommend python version to install?"</span>,</span><br><span class="line">    <span class="attr">"entities"</span>: [],</span><br><span class="line">    <span class="attr">"intent"</span>: &#123;<span class="attr">"confidence"</span>: <span class="number">0.6485910906220309</span>, <span class="attr">"name"</span>: <span class="string">"faq"</span>&#125;,</span><br><span class="line">    <span class="attr">"intent_ranking"</span>: [</span><br><span class="line">        &#123;<span class="attr">"confidence"</span>: <span class="number">0.6485910906220309</span>, <span class="attr">"name"</span>: <span class="string">"faq"</span>&#125;,</span><br><span class="line">        &#123;<span class="attr">"confidence"</span>: <span class="number">0.1416153159565678</span>, <span class="attr">"name"</span>: <span class="string">"greet"</span>&#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"response_selector"</span>: &#123;</span><br><span class="line">      <span class="attr">"faq"</span>: &#123;</span><br><span class="line">        <span class="attr">"response"</span>: &#123;<span class="attr">"confidence"</span>: <span class="number">0.7356462617</span>, <span class="attr">"name"</span>: <span class="string">"Supports 3.5, 3.6 and 3.7, recommended version is 3.6"</span>&#125;,</span><br><span class="line">        <span class="attr">"ranking"</span>: [</span><br><span class="line">            &#123;<span class="attr">"confidence"</span>: <span class="number">0.7356462617</span>, <span class="attr">"name"</span>: <span class="string">"Supports 3.5, 3.6 and 3.7, recommended version is 3.6"</span>&#125;,</span><br><span class="line">            &#123;<span class="attr">"confidence"</span>: <span class="number">0.2134543431</span>, <span class="attr">"name"</span>: <span class="string">"You can ask me about how to get started"</span>&#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分词器"><a href="#分词器" class="headerlink" title="分词器"></a>分词器</h3><h4 id="WhitespaceTokenizer"><a href="#WhitespaceTokenizer" class="headerlink" title="WhitespaceTokenizer"></a>WhitespaceTokenizer</h4><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcav1ixk09j30jj0gr405.jpg" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pipeline:</span><br><span class="line">- name: <span class="string">"WhitespaceTokenizer"</span></span><br><span class="line">  case_sensitive: false</span><br></pre></td></tr></table></figure><h4 id="JiebaTokenizer"><a href="#JiebaTokenizer" class="headerlink" title="JiebaTokenizer"></a>JiebaTokenizer</h4><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcav24z11ij30jf0alwfp.jpg" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pipeline:</span><br><span class="line">- name: <span class="string">"JiebaTokenizer"</span></span><br><span class="line">  dictionary_path: <span class="string">"path/to/custom/dictionary/dir"</span></span><br></pre></td></tr></table></figure><h4 id="MitieTokenizer"><a href="#MitieTokenizer" class="headerlink" title="MitieTokenizer"></a>MitieTokenizer</h4><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcav2tnqmoj30jc06oaao.jpg" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pipeline:</span><br><span class="line">- name: <span class="string">"MitieTokenizer"</span></span><br></pre></td></tr></table></figure><h4 id="SpacyTokenizer"><a href="#SpacyTokenizer" class="headerlink" title="SpacyTokenizer"></a>SpacyTokenizer</h4><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcav3c8choj30jh05pt98.jpg" alt=""></p><h3 id="实体提取器"><a href="#实体提取器" class="headerlink" title="实体提取器"></a>实体提取器</h3><h4 id="MitieEntityExtractor"><a href="#MitieEntityExtractor" class="headerlink" title="MitieEntityExtractor"></a>MitieEntityExtractor</h4><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcav3x7xadj30jj0amgmr.jpg" alt=""></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># Configuration</span><br><span class="line">pipeline:</span><br><span class="line">- name: "MitieEntityExtractor"</span><br><span class="line"></span><br><span class="line"># Output Example</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"entities"</span>: [&#123;<span class="attr">"value"</span>: <span class="string">"New York City"</span>,</span><br><span class="line">                  <span class="attr">"start"</span>: <span class="number">20</span>,</span><br><span class="line">                  <span class="attr">"end"</span>: <span class="number">33</span>,</span><br><span class="line">                  <span class="attr">"confidence"</span>: <span class="literal">null</span>,</span><br><span class="line">                  <span class="attr">"entity"</span>: <span class="string">"city"</span>,</span><br><span class="line">                  <span class="attr">"extractor"</span>: <span class="string">"MitieEntityExtractor"</span>&#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="SpacyEntityExtractor"><a href="#SpacyEntityExtractor" class="headerlink" title="SpacyEntityExtractor"></a>SpacyEntityExtractor</h4><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcav4qv1xuj30jj0cst9o.jpg" alt=""></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># Configuration</span><br><span class="line">pipeline:</span><br><span class="line">- name: "SpacyEntityExtractor"</span><br><span class="line">  # dimensions to extract</span><br><span class="line">  dimensions: ["PERSON", "LOC", "ORG", "PRODUCT"]</span><br><span class="line"></span><br><span class="line"># Output Example</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"entities"</span>: [&#123;<span class="attr">"value"</span>: <span class="string">"New York City"</span>,</span><br><span class="line">                  <span class="attr">"start"</span>: <span class="number">20</span>,</span><br><span class="line">                  <span class="attr">"end"</span>: <span class="number">33</span>,</span><br><span class="line">                  <span class="attr">"entity"</span>: <span class="string">"city"</span>,</span><br><span class="line">                  <span class="attr">"confidence"</span>: <span class="literal">null</span>,</span><br><span class="line">                  <span class="attr">"extractor"</span>: <span class="string">"SpacyEntityExtractor"</span>&#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="EntitySynonymMapper"><a href="#EntitySynonymMapper" class="headerlink" title="EntitySynonymMapper"></a>EntitySynonymMapper</h4><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcav5cs0ezj30jl0brjsv.jpg" alt=""></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[&#123;</span><br><span class="line">  <span class="attr">"text"</span>: <span class="string">"I moved to New York City"</span>,</span><br><span class="line">  <span class="attr">"intent"</span>: <span class="string">"inform_relocation"</span>,</span><br><span class="line">  <span class="attr">"entities"</span>: [&#123;<span class="attr">"value"</span>: <span class="string">"nyc"</span>,</span><br><span class="line">                <span class="attr">"start"</span>: <span class="number">11</span>,</span><br><span class="line">                <span class="attr">"end"</span>: <span class="number">24</span>,</span><br><span class="line">                <span class="attr">"entity"</span>: <span class="string">"city"</span>,</span><br><span class="line">               &#125;]</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"text"</span>: <span class="string">"I got a new flat in NYC."</span>,</span><br><span class="line">  <span class="attr">"intent"</span>: <span class="string">"inform_relocation"</span>,</span><br><span class="line">  <span class="attr">"entities"</span>: [&#123;<span class="attr">"value"</span>: <span class="string">"nyc"</span>,</span><br><span class="line">                <span class="attr">"start"</span>: <span class="number">20</span>,</span><br><span class="line">                <span class="attr">"end"</span>: <span class="number">23</span>,</span><br><span class="line">                <span class="attr">"entity"</span>: <span class="string">"city"</span>,</span><br><span class="line">               &#125;]</span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure><h4 id="CRFEntityExtractor"><a href="#CRFEntityExtractor" class="headerlink" title="CRFEntityExtractor"></a>CRFEntityExtractor</h4><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcav657w09j30ji0oe0uj.jpg" alt=""></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"># Configuration</span><br><span class="line">pipeline:</span><br><span class="line">- name: "CRFEntityExtractor"</span><br><span class="line">  # The features are a ``[before, word, after]`` array with</span><br><span class="line">  # before, word, after holding keys about which</span><br><span class="line">  # features to use for each word, for example, ``"title"``</span><br><span class="line">  # in array before will have the feature</span><br><span class="line">  # "is the preceding word in title case?".</span><br><span class="line">  # Available features are:</span><br><span class="line">  # ``low``, ``title``, ``suffix5``, ``suffix3``, ``suffix2``,</span><br><span class="line">  # ``suffix1``, ``pos``, ``pos2``, ``prefix5``, ``prefix2``,</span><br><span class="line">  # ``bias``, ``upper``, ``digit``, ``pattern``, and ``ner_features``</span><br><span class="line">  features: [["low", "title"], ["bias", "suffix3"], ["upper", "pos", "pos2"]]</span><br><span class="line"></span><br><span class="line">  # The flag determines whether to use BILOU tagging or not. BILOU</span><br><span class="line">  # tagging is more rigorous however</span><br><span class="line">  # requires more examples per entity. Rule of thumb: use only</span><br><span class="line">  # if more than 100 examples per entity.</span><br><span class="line">  BILOU_flag: true</span><br><span class="line"></span><br><span class="line">  # This is the value given to sklearn_crfcuite.CRF tagger before training.</span><br><span class="line">  max_iterations: 50</span><br><span class="line"></span><br><span class="line">  # This is the value given to sklearn_crfcuite.CRF tagger before training.</span><br><span class="line">  # Specifies the L1 regularization coefficient.</span><br><span class="line">  L1_c: 0.1</span><br><span class="line"></span><br><span class="line">  # This is the value given to sklearn_crfcuite.CRF tagger before training.</span><br><span class="line">  # Specifies the L2 regularization coefficient.</span><br><span class="line">  L2_c: 0.1</span><br><span class="line"></span><br><span class="line"># Output Example</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"entities"</span>: [&#123;<span class="attr">"value"</span>:<span class="string">"New York City"</span>,</span><br><span class="line">                  <span class="attr">"start"</span>: <span class="number">20</span>,</span><br><span class="line">                  <span class="attr">"end"</span>: <span class="number">33</span>,</span><br><span class="line">                  <span class="attr">"entity"</span>: <span class="string">"city"</span>,</span><br><span class="line">                  <span class="attr">"confidence"</span>: <span class="number">0.874</span>,</span><br><span class="line">                  <span class="attr">"extractor"</span>: <span class="string">"CRFEntityExtractor"</span>&#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="DucklingHTTPExtractor"><a href="#DucklingHTTPExtractor" class="headerlink" title="DucklingHTTPExtractor"></a>DucklingHTTPExtractor</h4><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcav6uq52nj30ji0shad3.jpg" alt=""></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># Configuration</span><br><span class="line">pipeline:</span><br><span class="line">- name: "DucklingHTTPExtractor"</span><br><span class="line">  # url of the running duckling server</span><br><span class="line">  url: "http://localhost:8000"</span><br><span class="line">  # dimensions to extract</span><br><span class="line">  dimensions: ["time", "number", "amount-of-money", "distance"]</span><br><span class="line">  # allows you to configure the locale, by default the language is</span><br><span class="line">  # used</span><br><span class="line">  locale: "de_DE"</span><br><span class="line">  # if not set the default timezone of Duckling is going to be used</span><br><span class="line">  # needed to calculate dates from relative expressions like "tomorrow"</span><br><span class="line">  timezone: "Europe/Berlin"</span><br><span class="line">  # Timeout for receiving response from http url of the running duckling server</span><br><span class="line">  # if not set the default timeout of duckling http url is set to 3 seconds.</span><br><span class="line">  timeout : 3</span><br><span class="line"></span><br><span class="line"># Output Example</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"entities"</span>: [&#123;<span class="attr">"end"</span>: <span class="number">53</span>,</span><br><span class="line">                  <span class="attr">"entity"</span>: <span class="string">"time"</span>,</span><br><span class="line">                  <span class="attr">"start"</span>: <span class="number">48</span>,</span><br><span class="line">                  <span class="attr">"value"</span>: <span class="string">"2019-11-24T00:00:00.000+02:00"</span>,</span><br><span class="line">                  <span class="attr">"confidence"</span>: <span class="number">1.0</span>,</span><br><span class="line">                  <span class="attr">"extractor"</span>: <span class="string">"DucklingHTTPExtractor"</span>&#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;转载：&lt;a href=&quot;https://www.zhihu.com/people/taominze/posts&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.zhihu.com/people/taominz
      
    
    </summary>
    
    
      <category term="NLU" scheme="http://yoursite.com/categories/NLU/"/>
    
    
      <category term="NLU" scheme="http://yoursite.com/tags/NLU/"/>
    
      <category term="RASA" scheme="http://yoursite.com/tags/RASA/"/>
    
  </entry>
  
  <entry>
    <title>Rasa Basics</title>
    <link href="http://yoursite.com/2020/02/26/2020-02-26-Rasa-Basics/"/>
    <id>http://yoursite.com/2020/02/26/2020-02-26-Rasa-Basics/</id>
    <published>2020-02-26T13:27:00.000Z</published>
    <updated>2020-02-27T04:57:10.468Z</updated>
    
    <content type="html"><![CDATA[<p>overview of the most common terms in the Rasa documentation:</p><blockquote><ol><li>Create a New Project</li><li>View Your NLU Training Data</li><li>Define Your Model Configuration</li><li>Write Your First Stories</li><li>Define a Domain</li><li>Train a Model</li><li>Talk to Your Assistant</li></ol></blockquote><h2 id="Rasa-Basics"><a href="#Rasa-Basics" class="headerlink" title="Rasa Basics"></a>Rasa Basics</h2><p>Goal: Build a simple, friendly assistant which ask how you’re doing and send you a fun picture to cheer you up if you are sad.</p><h3 id="Create-a-New-Project"><a href="#Create-a-New-Project" class="headerlink" title="Create a New Project"></a>Create a New Project</h3><p>The first step is to create a new Rasa project.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rasa init --no-prompt</span><br></pre></td></tr></table></figure><p><code>rasa init</code> command creates all the files that a Rasa project needs and trains a simple bot on some sample data. </p><p>If you leave out the <code>--no-prompt</code> flag you will be asked some questions about how you want your project to be set up.</p><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gca6cflu5mj30vi09udkf.jpg" alt=""></p><p>This creates the following files:</p><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gca6dhxg0kj30g00aoab1.jpg" alt=""></p><blockquote><p><strong>__init__.py</strong>: an empty file that helps python find your actions</p><p><strong>actions.py</strong>: code for your custom actions</p><p><strong>config.yml</strong>: configuration of your NLU and Core models</p><p><strong>credentials.yml</strong>: details for connecting to other services</p><p><strong>data/nlu.md</strong>: your NLU training data</p><p><strong>data/stories.md</strong>: your stories</p><p><strong>domain.yml</strong>: your assistant’s domain</p><p><strong>endpoints.yml</strong>: details for connecting to channels like fb messenger</p><p><strong>models/&lt;timestamp&gt;.tar.gz</strong>: your initial model </p></blockquote><h3 id="View-Your-NLU-Training-Data"><a href="#View-Your-NLU-Training-Data" class="headerlink" title="View Your NLU Training Data"></a>View Your NLU Training Data</h3><p>The first piece of a Rasa assistant is an <code>NLU</code> model.</p><p><code>NLU</code>:  Natural Language Understanding, which means turning user messages into structured data. </p><p>To do this with Rasa, you provide <code>training examples</code> that show how Rasa should understand user messages, and then train a model by showing it those examples.</p><p>See the NLU training data created by the <code>rasa init</code> command:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat data/nlu.md</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gca6s8sq3hj30vo0mydn4.jpg" alt=""></p><blockquote><p> The lines starting with <code>##</code> define the names of your <code>intents</code>, which are groups of messages with the same meaning. </p></blockquote><blockquote><p>Rasa’s job will be to predict the correct intent when your users send new, unseen messages to your assistant. </p></blockquote><h3 id="Define-Your-Model-Configuration"><a href="#Define-Your-Model-Configuration" class="headerlink" title="Define Your Model Configuration"></a>Define Your Model Configuration</h3><p>The configuration file defines the <code>NLU</code> and <code>core components</code> that your model will use. </p><p>In this example, your NLU model will use the <code>supervised_embeddings</code> pipeline. </p><p>Take a look at your model configuration file:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat config.yml</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gca6yso8dkj30j209sjuq.jpg" alt=""></p><blockquote><p>The <code>language</code> and <code>pipeline</code> key specify how the NLU model should be built. </p><p>The <code>policies</code> key defines the policies that the Core model will use.</p></blockquote><h3 id="Write-Your-First-Stories"><a href="#Write-Your-First-Stories" class="headerlink" title="Write Your First Stories"></a>Write Your First Stories</h3><p>At this stage, you will teach <strong>your assistant how to respond to your messages</strong>. This is called <code>dialogue management</code>, and is handled by your <code>Core model</code>.</p><p><code>Core models</code> learn from real conversational data in the form of training “stories”. </p><p>A <code>story</code> is a real conversation between a user and an assistant.  Lines with intents and entities reflect the <code>user&#39;s input</code> and the <code>action names</code> show what the assistant should do in response.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat data/stories.md</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gca904q7pwj30ne0se469.jpg" alt=""></p><blockquote><p>Lines that start with <code>-</code> are actions taken by the assistant. </p><p>An action can do anything, including calling an API and interacting with the outside world.</p></blockquote><p>View the example stories inside the file <code>data/stories.md</code>:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat data/stories.md</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gca8k2c7q5j30vo0myqab.jpg" alt=""></p><h3 id="Define-a-Domain"><a href="#Define-a-Domain" class="headerlink" title="Define a Domain"></a>Define a Domain</h3><p>The <code>domain</code> defines the universe your assistant lives in: </p><ul><li>what user input it should expect to get</li><li>what actions it should be able to predict</li><li>how to respond </li><li>what information to store</li></ul><p>The domain for our assistant is saved in a file called <code>domain.yml</code>.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat domain.yml</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gca8n5ecp2j30u00w6naz.jpg" alt=""></p><blockquote><p><code>intents</code>: things you expect users to say</p><p><code>actions</code>: things your assistant can do and say</p><p><code>templates</code>: template strings for the things your assistant can say</p></blockquote><p><strong>Rasa Core’s job</strong> is to choose the right action to execute at each step of the conversation. </p><p>The assistant will respond with a message based on a template from the <code>templates</code> section.</p><h3 id="Train-a-Model"><a href="#Train-a-Model" class="headerlink" title="Train a Model"></a>Train a Model</h3><p>Anytime we <strong>add a new NLU or Core data</strong>, or <strong>update the domain or configuration</strong>, we need to <code>re-train</code> a neural network on our example stories and NLU data.</p><p>The command will call the Rasa Core and NLU train functions and store the trained model into the <code>models/</code> directory. </p><blockquote><p>The command will automatically only retrain the <strong>different model parts</strong> if something has changed in their data or configuration.</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rasa train</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Finished training."</span></span><br></pre></td></tr></table></figure><p>The <code>rasa train</code> command will look for both <code>NLU</code> and <code>Core data</code> and will train a combined model.</p><h3 id="Talk-to-Your-Assistant"><a href="#Talk-to-Your-Assistant" class="headerlink" title="Talk to Your Assistant"></a>Talk to Your Assistant</h3><p>Finish builting an assistant powered entirely by machine learning.</p><p>Start talking to your assistant by running:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rasa shell</span><br></pre></td></tr></table></figure><p>Error:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Exception <span class="string">'Loop'</span> object has no attribute <span class="string">'_ready'</span></span><br></pre></td></tr></table></figure><p>And some resolutions on Github:</p><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcaa4r3q5nj311w0po43a.jpg" alt=""></p><p>Reload <code>rasa shell</code>:</p><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gcaarnprq6j30vk0gwdow.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;overview of the most common terms in the Rasa documentation:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Create a New Project&lt;/li&gt;
&lt;li&gt;View Your NLU Traini
      
    
    </summary>
    
    
      <category term="NLU" scheme="http://yoursite.com/categories/NLU/"/>
    
    
      <category term="NLU" scheme="http://yoursite.com/tags/NLU/"/>
    
      <category term="RASA" scheme="http://yoursite.com/tags/RASA/"/>
    
  </entry>
  
  <entry>
    <title>Rasa NLU Example</title>
    <link href="http://yoursite.com/2020/02/25/2020-02-25-Rasa-NLU-Example/"/>
    <id>http://yoursite.com/2020/02/25/2020-02-25-Rasa-NLU-Example/</id>
    <published>2020-02-25T04:11:00.000Z</published>
    <updated>2020-02-27T04:56:27.956Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Rasa-NLU"><a href="#Rasa-NLU" class="headerlink" title="Rasa NLU"></a>Rasa NLU</h1><p>自然语言理解(NLU)系统是问答系统、聊天机器人等更高级应用的基石。基本的NLU工具，包括<strong>实体识别</strong>和<strong>意图识别</strong>两个任务。</p><p>Rasa NLU是一个开源的、可本地部署并配套有语料标注工具<code>rasa-nlu-trainer</code>的自然语言理解框架。</p><p>Rasa NLU本身是只支持英文与德文的。中文因为其特殊性需要加入特定的<code>tokenizer</code>作为整个流水线的一部分。(加入<code>jieba</code>作为中文的<code>tokenizer</code>，适用于[中文的rasa NLU的代码][<a href="https://github.com/crownpku/rasa_nlu_chi]" target="_blank" rel="noopener">https://github.com/crownpku/rasa_nlu_chi]</a>)</p><h3 id="语料获取及预处理"><a href="#语料获取及预处理" class="headerlink" title="语料获取及预处理"></a>语料获取及预处理</h3><p>Rasa NLU的实体识别和意图识别的任务，需要一个训练好的<code>MITIE</code>模型。这个MITIE模型是非监督训练得到的，类似于word2vec中的word embedding。</p><p>要训练该MITIE模型，需要一个规模比较大的中文语料。最好是根据自己对应的需求去选择语料。做金融方面的chatbot就多爬取些财经新闻，做医疗的chatbot就多获取些医疗相关文章。</p><h4 id="中文Wikipedia语料及处理"><a href="#中文Wikipedia语料及处理" class="headerlink" title="中文Wikipedia语料及处理"></a>中文Wikipedia语料及处理</h4><h5 id="下载数据"><a href="#下载数据" class="headerlink" title="下载数据"></a>下载数据</h5><p> 使用中文维基百科语料来进行MITIE模型训练。</p><p>数据下载地址：<a href="https://dumps.wikimedia.org/zhwiki/latest/zhwiki-latest-pages-articles.xml.bz2" target="_blank" rel="noopener">https://dumps.wikimedia.org/zhwiki/latest/zhwiki-latest-pages-articles.xml.bz2</a></p><blockquote><p>官网下载速度极慢。网上20190320数据[网盘资源][<a href="https://pan.baidu.com/s/1mExG-phI4tJOKiuA9O-Zyw]" target="_blank" rel="noopener">https://pan.baidu.com/s/1mExG-phI4tJOKiuA9O-Zyw]</a><s9wm></p></blockquote><h5 id="抽取数据"><a href="#抽取数据" class="headerlink" title="抽取数据"></a>抽取数据</h5><p>对于上述下载的语料库，需要进一步抽取，可以选择</p><ul><li>自己写程序抽取</li><li>使用Wikipedia Extractor抽取</li><li>使用gensim中wikicorpus库抽取</li></ul><p>此处使用<code>Wikipedia Extractor</code>来抽取数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/attardi/wikiextractor.git wikiextractor</span><br><span class="line">cd wikiextractor</span><br><span class="line">python3 WikiExtractor.py -b <span class="number">1024</span>M -o extracted zhwiki-latest-pages-articles.xml.bz2</span><br></pre></td></tr></table></figure><p>执行结果：</p><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gc8oj4zuguj30vm0320us.jpg" alt=""></p><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gc8ok01t3dj30ug04cgmb.jpg" alt=""></p><p>可以看到一共处理了1050183篇文章，通过以上抽取后得到两个文件<code>wiki_00</code>和<code>wiki_01</code>。</p><p>里面的格式如下：</p><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gc8phnv68bj30zk0mwdzd.jpg" alt=""></p><h5 id="繁体转简体"><a href="#繁体转简体" class="headerlink" title="繁体转简体"></a>繁体转简体</h5><p>wikipedia中文数据繁简混杂的，里面包含大陆简体、台湾繁体、港澳繁体等多种不同的数据。</p><p>使用开源项目opencc来进行繁简转换：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">brew install OpenCC</span><br><span class="line">OpenCC -i wiki_00 -o zh_wiki_00 -c t2s</span><br><span class="line">OpenCC -i wiki_01 -o zh_wiki_01 -c t2s</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gc8r685k1lj30zk0mwkaj.jpg" alt=""></p><h5 id="符号处理"><a href="#符号处理" class="headerlink" title="符号处理"></a>符号处理</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fenci</span><span class="params">(input_file)</span>:</span></span><br><span class="line">    outfile = codecs.open(<span class="string">'std_'</span> + input_file, <span class="string">'w'</span>, <span class="string">'utf-8'</span>)</span><br><span class="line">    <span class="keyword">with</span> codecs.open(input_file, <span class="string">'r'</span>, <span class="string">'utf-8'</span>) <span class="keyword">as</span> myfile:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> myfile:</span><br><span class="line">            <span class="comment"># 去除字符串中的&lt;doc&gt;&lt;/doc&gt;</span></span><br><span class="line">            line = re.sub(<span class="string">'&lt;doc (.*)&gt;'</span>,<span class="string">''</span>,line)</span><br><span class="line">            line = re.sub(<span class="string">'&lt;/doc&gt;'</span>,<span class="string">''</span>,line)</span><br><span class="line">            <span class="comment"># 只保留中文、大小写字母和阿拉伯数字</span></span><br><span class="line">            line = re.sub(<span class="string">'[^0-9A-Za-z\u4e00-\u9fa5]'</span>,<span class="string">''</span>,line)</span><br><span class="line">            outfile.write(line)</span><br><span class="line">    outfile.close()</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    input_file = sys.argv[<span class="number">1</span>]</span><br><span class="line">    fenci(input_file)</span><br></pre></td></tr></table></figure><p>将上述代码保存为<code>std.py</code>文件，放在与数据文件相同的目录。执行命令：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python3 std.py zh_wiki_00</span><br><span class="line">python3 std.py zh_wiki_01</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="https://tva1.sinaimg.cn/large/0082zybply1gc8u2apa55j30ly09gjxe.jpg" alt=""></p><h5 id="分词"><a href="#分词" class="headerlink" title="分词"></a>分词</h5><p>利用<code>jieba</code>进行分词:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python3 -m jieba -d <span class="string">" "</span> ./std_zh_wiki_00 &gt; ./cut_zh_wiki_00</span><br><span class="line">python3 -m jieba -d <span class="string">" "</span> ./std_zh_wiki_01 &gt; ./cut_zh_wiki_01</span><br></pre></td></tr></table></figure><p>或者：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"></span><br><span class="line">file_need_cut = <span class="string">'std_zh_wiki_01'</span></span><br><span class="line">file_after_cut = <span class="string">'cut_zh_wiki_01'</span></span><br><span class="line"></span><br><span class="line">fn = open(file_need_cut,<span class="string">'r'</span>,encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">f = open(file_after_cut,<span class="string">'w+'</span>,encoding=<span class="string">'utf-8'</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> fn.readlines():</span><br><span class="line">    words=jieba.cut(line)</span><br><span class="line">    f.write(<span class="string">" "</span>.join(words))</span><br><span class="line">f.close()</span><br><span class="line">fn.close()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Rasa-NLU&quot;&gt;&lt;a href=&quot;#Rasa-NLU&quot; class=&quot;headerlink&quot; title=&quot;Rasa NLU&quot;&gt;&lt;/a&gt;Rasa NLU&lt;/h1&gt;&lt;p&gt;自然语言理解(NLU)系统是问答系统、聊天机器人等更高级应用的基石。基本的NLU工具，包括&lt;
      
    
    </summary>
    
    
      <category term="NLU" scheme="http://yoursite.com/categories/NLU/"/>
    
    
      <category term="NLP" scheme="http://yoursite.com/tags/NLP/"/>
    
      <category term="Rasa" scheme="http://yoursite.com/tags/Rasa/"/>
    
  </entry>
  
  <entry>
    <title>爬取新浪微博内容</title>
    <link href="http://yoursite.com/2020/02/05/2020-02-05-%E7%88%AC%E5%8F%96%E6%96%B0%E6%B5%AA%E5%BE%AE%E5%8D%9A%E5%86%85%E5%AE%B9/"/>
    <id>http://yoursite.com/2020/02/05/2020-02-05-%E7%88%AC%E5%8F%96%E6%96%B0%E6%B5%AA%E5%BE%AE%E5%8D%9A%E5%86%85%E5%AE%B9/</id>
    <published>2020-02-05T11:50:00.000Z</published>
    <updated>2020-02-05T15:43:44.811Z</updated>
    
    <content type="html"><![CDATA[<h2 id="爬取新浪微博用户信息及微博内容"><a href="#爬取新浪微博用户信息及微博内容" class="headerlink" title="爬取新浪微博用户信息及微博内容"></a>爬取新浪微博用户信息及微博内容</h2><blockquote><p>引用：<a href="https://blog.csdn.net/Asher117/article/details/82793091" target="_blank" rel="noopener">https://blog.csdn.net/Asher117/article/details/82793091</a></p></blockquote><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><ul><li>使用selenium模拟爬虫</li><li>使用BeautifulSoup解析HTML</li></ul><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><h4 id="选取爬取目标网址"><a href="#选取爬取目标网址" class="headerlink" title="选取爬取目标网址"></a>选取爬取目标网址</h4><p>新浪微博网址分为网页端和手机端。大部分爬取微博数据都会选择爬取手机端，因为对比起来手机端囊括数据较多，且较为轻量。</p><p>网页端：<a href="https://s.weibo.com/" target="_blank" rel="noopener">https://s.weibo.com/</a></p><p>手机端：<a href="https://m.weibo.cn/" target="_blank" rel="noopener">https://m.weibo.cn/</a></p><p>因为要使用网页端微博的“高级搜索”功能，因此选取网页端微博进行模拟登录。</p><h4 id="模拟登录"><a href="#模拟登录" class="headerlink" title="模拟登录"></a>模拟登录</h4><p>模拟登录代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> rsa</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WeiBoLogin</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    class of WeiBoLogin, to login weibo.com</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        constructor</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        self.user_name = <span class="literal">None</span></span><br><span class="line">        self.pass_word = <span class="literal">None</span></span><br><span class="line">        self.user_uniqueid = <span class="literal">None</span></span><br><span class="line">        self.user_nick = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">        self.session = requests.Session()</span><br><span class="line">        self.session.headers.update(&#123;<span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 6.3; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0"</span>&#125;)</span><br><span class="line">        self.session.get(<span class="string">"http://weibo.com/login.php"</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(self, user_name, pass_word)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        login weibo.com, return True or False</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        self.user_name = user_name</span><br><span class="line">        self.pass_word = pass_word</span><br><span class="line">        self.user_uniqueid = <span class="literal">None</span></span><br><span class="line">        self.user_nick = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># get json data</span></span><br><span class="line">        s_user_name = self.get_username()</span><br><span class="line">        json_data = self.get_json_data(su_value=s_user_name)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> json_data:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        s_pass_word = self.get_password(json_data[<span class="string">"servertime"</span>], json_data[<span class="string">"nonce"</span>], json_data[<span class="string">"pubkey"</span>])</span><br><span class="line"></span><br><span class="line">        <span class="comment"># make post_data</span></span><br><span class="line">        post_data = &#123;</span><br><span class="line">            <span class="string">"entry"</span>: <span class="string">"weibo"</span>,</span><br><span class="line">            <span class="string">"gateway"</span>: <span class="string">"1"</span>,</span><br><span class="line">            <span class="string">"from"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"savestate"</span>: <span class="string">"7"</span>,</span><br><span class="line">            <span class="string">"userticket"</span>: <span class="string">"1"</span>,</span><br><span class="line">            <span class="string">"vsnf"</span>: <span class="string">"1"</span>,</span><br><span class="line">            <span class="string">"service"</span>: <span class="string">"miniblog"</span>,</span><br><span class="line">            <span class="string">"encoding"</span>: <span class="string">"UTF-8"</span>,</span><br><span class="line">            <span class="string">"pwencode"</span>: <span class="string">"rsa2"</span>,</span><br><span class="line">            <span class="string">"sr"</span>: <span class="string">"1280*800"</span>,</span><br><span class="line">            <span class="string">"prelt"</span>: <span class="string">"529"</span>,</span><br><span class="line">            <span class="string">"url"</span>: <span class="string">"http://weibo.com/ajaxlogin.php?framelogin=1&amp;callback=parent.sinaSSOController.feedBackUrlCallBack"</span>,</span><br><span class="line">            <span class="string">"rsakv"</span>: json_data[<span class="string">"rsakv"</span>],</span><br><span class="line">            <span class="string">"servertime"</span>: json_data[<span class="string">"servertime"</span>],</span><br><span class="line">            <span class="string">"nonce"</span>: json_data[<span class="string">"nonce"</span>],</span><br><span class="line">            <span class="string">"su"</span>: s_user_name,</span><br><span class="line">            <span class="string">"sp"</span>: s_pass_word,</span><br><span class="line">            <span class="string">"returntype"</span>: <span class="string">"TEXT"</span>,</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># get captcha code</span></span><br><span class="line">        <span class="keyword">if</span> json_data[<span class="string">"showpin"</span>] == <span class="number">1</span>:</span><br><span class="line">            url = <span class="string">"http://login.sina.com.cn/cgi/pin.php?r=%d&amp;s=0&amp;p=%s"</span> % (int(time.time()), json_data[<span class="string">"pcid"</span>])</span><br><span class="line">            <span class="keyword">with</span> open(<span class="string">"captcha.jpeg"</span>, <span class="string">"wb"</span>) <span class="keyword">as</span> file_out:</span><br><span class="line">                file_out.write(self.session.get(url).content)</span><br><span class="line">            code = input(<span class="string">"请输入验证码:"</span>)</span><br><span class="line">            post_data[<span class="string">"pcid"</span>] = json_data[<span class="string">"pcid"</span>]</span><br><span class="line">            post_data[<span class="string">"door"</span>] = code</span><br><span class="line"></span><br><span class="line">        <span class="comment"># login weibo.com</span></span><br><span class="line">        login_url_1 = <span class="string">"http://login.sina.com.cn/sso/login.php?client=ssologin.js(v1.4.18)&amp;_=%d"</span> % int(time.time())</span><br><span class="line">        json_data_1 = self.session.post(login_url_1, data=post_data).json()</span><br><span class="line">        <span class="keyword">if</span> json_data_1[<span class="string">"retcode"</span>] == <span class="string">"0"</span>:</span><br><span class="line">            params = &#123;</span><br><span class="line">                <span class="string">"callback"</span>: <span class="string">"sinaSSOController.callbackLoginStatus"</span>,</span><br><span class="line">                <span class="string">"client"</span>: <span class="string">"ssologin.js(v1.4.18)"</span>,</span><br><span class="line">                <span class="string">"ticket"</span>: json_data_1[<span class="string">"ticket"</span>],</span><br><span class="line">                <span class="string">"ssosavestate"</span>: int(time.time()),</span><br><span class="line">                <span class="string">"_"</span>: int(time.time()*<span class="number">1000</span>),</span><br><span class="line">            &#125;</span><br><span class="line">            response = self.session.get(<span class="string">"https://passport.weibo.com/wbsso/login"</span>, params=params)</span><br><span class="line">            json_data_2 = json.loads(re.search(<span class="string">r"\((?P&lt;result&gt;.*)\)"</span>, response.text).group(<span class="string">"result"</span>))</span><br><span class="line">            <span class="keyword">if</span> json_data_2[<span class="string">"result"</span>] <span class="keyword">is</span> <span class="literal">True</span>:</span><br><span class="line">                self.user_uniqueid = json_data_2[<span class="string">"userinfo"</span>][<span class="string">"uniqueid"</span>]</span><br><span class="line">                self.user_nick = json_data_2[<span class="string">"userinfo"</span>][<span class="string">"displayname"</span>]</span><br><span class="line">                logging.warning(<span class="string">"WeiBoLogin succeed: %s"</span>, json_data_2)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                logging.warning(<span class="string">"WeiBoLogin failed: %s"</span>, json_data_2)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            logging.warning(<span class="string">"WeiBoLogin failed: %s"</span>, json_data_1)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span> <span class="keyword">if</span> self.user_uniqueid <span class="keyword">and</span> self.user_nick <span class="keyword">else</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_username</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        get legal username</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        username_quote = urllib.parse.quote_plus(self.user_name)</span><br><span class="line">        username_base64 = base64.b64encode(username_quote.encode(<span class="string">"utf-8"</span>))</span><br><span class="line">        <span class="keyword">return</span> username_base64.decode(<span class="string">"utf-8"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_json_data</span><span class="params">(self, su_value)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        get the value of "servertime", "nonce", "pubkey", "rsakv" and "showpin", etc</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        params = &#123;</span><br><span class="line">            <span class="string">"entry"</span>: <span class="string">"weibo"</span>,</span><br><span class="line">            <span class="string">"callback"</span>: <span class="string">"sinaSSOController.preloginCallBack"</span>,</span><br><span class="line">            <span class="string">"rsakt"</span>: <span class="string">"mod"</span>,</span><br><span class="line">            <span class="string">"checkpin"</span>: <span class="string">"1"</span>,</span><br><span class="line">            <span class="string">"client"</span>: <span class="string">"ssologin.js(v1.4.18)"</span>,</span><br><span class="line">            <span class="string">"su"</span>: su_value,</span><br><span class="line">            <span class="string">"_"</span>: int(time.time()*<span class="number">1000</span>),</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            response = self.session.get(<span class="string">"http://login.sina.com.cn/sso/prelogin.php"</span>, params=params)</span><br><span class="line">            json_data = json.loads(re.search(<span class="string">r"\((?P&lt;data&gt;.*)\)"</span>, response.text).group(<span class="string">"data"</span>))</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> excep:</span><br><span class="line">            json_data = &#123;&#125;</span><br><span class="line">            logging.error(<span class="string">"WeiBoLogin get_json_data error: %s"</span>, excep)</span><br><span class="line"></span><br><span class="line">        logging.debug(<span class="string">"WeiBoLogin get_json_data: %s"</span>, json_data)</span><br><span class="line">        <span class="keyword">return</span> json_data</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_password</span><span class="params">(self, servertime, nonce, pubkey)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        get legal password</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        string = (str(servertime) + <span class="string">"\t"</span> + str(nonce) + <span class="string">"\n"</span> + str(self.pass_word)).encode(<span class="string">"utf-8"</span>)</span><br><span class="line">        public_key = rsa.PublicKey(int(pubkey, <span class="number">16</span>), int(<span class="string">"10001"</span>, <span class="number">16</span>))</span><br><span class="line">        password = rsa.encrypt(string, public_key)</span><br><span class="line">        password = binascii.b2a_hex(password)</span><br><span class="line">        <span class="keyword">return</span> password.decode()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    logging.basicConfig(level=logging.DEBUG, format=<span class="string">"%(asctime)s\t%(levelname)s\t%(message)s"</span>)</span><br><span class="line">    weibo = WeiBoLogin()</span><br><span class="line">    weibo.login(<span class="string">"username"</span>, <span class="string">"password"</span>)</span><br></pre></td></tr></table></figure><p>运行，模拟登录成功：</p><p><a href="https://imgchr.com/i/1scf3D" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2020/02/05/1scf3D.png" alt="1scf3D.png"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;爬取新浪微博用户信息及微博内容&quot;&gt;&lt;a href=&quot;#爬取新浪微博用户信息及微博内容&quot; class=&quot;headerlink&quot; title=&quot;爬取新浪微博用户信息及微博内容&quot;&gt;&lt;/a&gt;爬取新浪微博用户信息及微博内容&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;引用：&lt;a
      
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="爬虫" scheme="http://yoursite.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="weibo" scheme="http://yoursite.com/tags/weibo/"/>
    
  </entry>
  
  <entry>
    <title>My first blog</title>
    <link href="http://yoursite.com/2020/01/14/2020-01-14-My-first-blog/"/>
    <id>http://yoursite.com/2020/01/14/2020-01-14-My-first-blog/</id>
    <published>2020-01-14T14:32:24.000Z</published>
    <updated>2020-01-29T14:52:01.095Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"Hello world"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Hello-World&quot;&gt;&lt;a href=&quot;#Hello-World&quot; class=&quot;headerlink&quot; title=&quot;Hello World&quot;&gt;&lt;/a&gt;Hello World&lt;/h2&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;
      
    
    </summary>
    
    
      <category term="test" scheme="http://yoursite.com/categories/test/"/>
    
    
      <category term="test" scheme="http://yoursite.com/tags/test/"/>
    
  </entry>
  
</feed>
