<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>经年</title>
  
  <subtitle>FEARLESS ALONE</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-02-05T15:43:44.811Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Guran</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>爬取新浪微博内容</title>
    <link href="http://yoursite.com/2020/02/05/2020-02-05-%E7%88%AC%E5%8F%96%E6%96%B0%E6%B5%AA%E5%BE%AE%E5%8D%9A%E5%86%85%E5%AE%B9/"/>
    <id>http://yoursite.com/2020/02/05/2020-02-05-%E7%88%AC%E5%8F%96%E6%96%B0%E6%B5%AA%E5%BE%AE%E5%8D%9A%E5%86%85%E5%AE%B9/</id>
    <published>2020-02-05T11:50:00.000Z</published>
    <updated>2020-02-05T15:43:44.811Z</updated>
    
    <content type="html"><![CDATA[<h2 id="爬取新浪微博用户信息及微博内容"><a href="#爬取新浪微博用户信息及微博内容" class="headerlink" title="爬取新浪微博用户信息及微博内容"></a>爬取新浪微博用户信息及微博内容</h2><blockquote><p>引用：<a href="https://blog.csdn.net/Asher117/article/details/82793091" target="_blank" rel="noopener">https://blog.csdn.net/Asher117/article/details/82793091</a></p></blockquote><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><ul><li>使用selenium模拟爬虫</li><li>使用BeautifulSoup解析HTML</li></ul><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><h4 id="选取爬取目标网址"><a href="#选取爬取目标网址" class="headerlink" title="选取爬取目标网址"></a>选取爬取目标网址</h4><p>新浪微博网址分为网页端和手机端。大部分爬取微博数据都会选择爬取手机端，因为对比起来手机端囊括数据较多，且较为轻量。</p><p>网页端：<a href="https://s.weibo.com/" target="_blank" rel="noopener">https://s.weibo.com/</a></p><p>手机端：<a href="https://m.weibo.cn/" target="_blank" rel="noopener">https://m.weibo.cn/</a></p><p>因为要使用网页端微博的“高级搜索”功能，因此选取网页端微博进行模拟登录。</p><h4 id="模拟登录"><a href="#模拟登录" class="headerlink" title="模拟登录"></a>模拟登录</h4><p>模拟登录代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> rsa</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WeiBoLogin</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    class of WeiBoLogin, to login weibo.com</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        constructor</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        self.user_name = <span class="literal">None</span></span><br><span class="line">        self.pass_word = <span class="literal">None</span></span><br><span class="line">        self.user_uniqueid = <span class="literal">None</span></span><br><span class="line">        self.user_nick = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">        self.session = requests.Session()</span><br><span class="line">        self.session.headers.update(&#123;<span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 6.3; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0"</span>&#125;)</span><br><span class="line">        self.session.get(<span class="string">"http://weibo.com/login.php"</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(self, user_name, pass_word)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        login weibo.com, return True or False</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        self.user_name = user_name</span><br><span class="line">        self.pass_word = pass_word</span><br><span class="line">        self.user_uniqueid = <span class="literal">None</span></span><br><span class="line">        self.user_nick = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># get json data</span></span><br><span class="line">        s_user_name = self.get_username()</span><br><span class="line">        json_data = self.get_json_data(su_value=s_user_name)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> json_data:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        s_pass_word = self.get_password(json_data[<span class="string">"servertime"</span>], json_data[<span class="string">"nonce"</span>], json_data[<span class="string">"pubkey"</span>])</span><br><span class="line"></span><br><span class="line">        <span class="comment"># make post_data</span></span><br><span class="line">        post_data = &#123;</span><br><span class="line">            <span class="string">"entry"</span>: <span class="string">"weibo"</span>,</span><br><span class="line">            <span class="string">"gateway"</span>: <span class="string">"1"</span>,</span><br><span class="line">            <span class="string">"from"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"savestate"</span>: <span class="string">"7"</span>,</span><br><span class="line">            <span class="string">"userticket"</span>: <span class="string">"1"</span>,</span><br><span class="line">            <span class="string">"vsnf"</span>: <span class="string">"1"</span>,</span><br><span class="line">            <span class="string">"service"</span>: <span class="string">"miniblog"</span>,</span><br><span class="line">            <span class="string">"encoding"</span>: <span class="string">"UTF-8"</span>,</span><br><span class="line">            <span class="string">"pwencode"</span>: <span class="string">"rsa2"</span>,</span><br><span class="line">            <span class="string">"sr"</span>: <span class="string">"1280*800"</span>,</span><br><span class="line">            <span class="string">"prelt"</span>: <span class="string">"529"</span>,</span><br><span class="line">            <span class="string">"url"</span>: <span class="string">"http://weibo.com/ajaxlogin.php?framelogin=1&amp;callback=parent.sinaSSOController.feedBackUrlCallBack"</span>,</span><br><span class="line">            <span class="string">"rsakv"</span>: json_data[<span class="string">"rsakv"</span>],</span><br><span class="line">            <span class="string">"servertime"</span>: json_data[<span class="string">"servertime"</span>],</span><br><span class="line">            <span class="string">"nonce"</span>: json_data[<span class="string">"nonce"</span>],</span><br><span class="line">            <span class="string">"su"</span>: s_user_name,</span><br><span class="line">            <span class="string">"sp"</span>: s_pass_word,</span><br><span class="line">            <span class="string">"returntype"</span>: <span class="string">"TEXT"</span>,</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># get captcha code</span></span><br><span class="line">        <span class="keyword">if</span> json_data[<span class="string">"showpin"</span>] == <span class="number">1</span>:</span><br><span class="line">            url = <span class="string">"http://login.sina.com.cn/cgi/pin.php?r=%d&amp;s=0&amp;p=%s"</span> % (int(time.time()), json_data[<span class="string">"pcid"</span>])</span><br><span class="line">            <span class="keyword">with</span> open(<span class="string">"captcha.jpeg"</span>, <span class="string">"wb"</span>) <span class="keyword">as</span> file_out:</span><br><span class="line">                file_out.write(self.session.get(url).content)</span><br><span class="line">            code = input(<span class="string">"请输入验证码:"</span>)</span><br><span class="line">            post_data[<span class="string">"pcid"</span>] = json_data[<span class="string">"pcid"</span>]</span><br><span class="line">            post_data[<span class="string">"door"</span>] = code</span><br><span class="line"></span><br><span class="line">        <span class="comment"># login weibo.com</span></span><br><span class="line">        login_url_1 = <span class="string">"http://login.sina.com.cn/sso/login.php?client=ssologin.js(v1.4.18)&amp;_=%d"</span> % int(time.time())</span><br><span class="line">        json_data_1 = self.session.post(login_url_1, data=post_data).json()</span><br><span class="line">        <span class="keyword">if</span> json_data_1[<span class="string">"retcode"</span>] == <span class="string">"0"</span>:</span><br><span class="line">            params = &#123;</span><br><span class="line">                <span class="string">"callback"</span>: <span class="string">"sinaSSOController.callbackLoginStatus"</span>,</span><br><span class="line">                <span class="string">"client"</span>: <span class="string">"ssologin.js(v1.4.18)"</span>,</span><br><span class="line">                <span class="string">"ticket"</span>: json_data_1[<span class="string">"ticket"</span>],</span><br><span class="line">                <span class="string">"ssosavestate"</span>: int(time.time()),</span><br><span class="line">                <span class="string">"_"</span>: int(time.time()*<span class="number">1000</span>),</span><br><span class="line">            &#125;</span><br><span class="line">            response = self.session.get(<span class="string">"https://passport.weibo.com/wbsso/login"</span>, params=params)</span><br><span class="line">            json_data_2 = json.loads(re.search(<span class="string">r"\((?P&lt;result&gt;.*)\)"</span>, response.text).group(<span class="string">"result"</span>))</span><br><span class="line">            <span class="keyword">if</span> json_data_2[<span class="string">"result"</span>] <span class="keyword">is</span> <span class="literal">True</span>:</span><br><span class="line">                self.user_uniqueid = json_data_2[<span class="string">"userinfo"</span>][<span class="string">"uniqueid"</span>]</span><br><span class="line">                self.user_nick = json_data_2[<span class="string">"userinfo"</span>][<span class="string">"displayname"</span>]</span><br><span class="line">                logging.warning(<span class="string">"WeiBoLogin succeed: %s"</span>, json_data_2)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                logging.warning(<span class="string">"WeiBoLogin failed: %s"</span>, json_data_2)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            logging.warning(<span class="string">"WeiBoLogin failed: %s"</span>, json_data_1)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span> <span class="keyword">if</span> self.user_uniqueid <span class="keyword">and</span> self.user_nick <span class="keyword">else</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_username</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        get legal username</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        username_quote = urllib.parse.quote_plus(self.user_name)</span><br><span class="line">        username_base64 = base64.b64encode(username_quote.encode(<span class="string">"utf-8"</span>))</span><br><span class="line">        <span class="keyword">return</span> username_base64.decode(<span class="string">"utf-8"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_json_data</span><span class="params">(self, su_value)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        get the value of "servertime", "nonce", "pubkey", "rsakv" and "showpin", etc</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        params = &#123;</span><br><span class="line">            <span class="string">"entry"</span>: <span class="string">"weibo"</span>,</span><br><span class="line">            <span class="string">"callback"</span>: <span class="string">"sinaSSOController.preloginCallBack"</span>,</span><br><span class="line">            <span class="string">"rsakt"</span>: <span class="string">"mod"</span>,</span><br><span class="line">            <span class="string">"checkpin"</span>: <span class="string">"1"</span>,</span><br><span class="line">            <span class="string">"client"</span>: <span class="string">"ssologin.js(v1.4.18)"</span>,</span><br><span class="line">            <span class="string">"su"</span>: su_value,</span><br><span class="line">            <span class="string">"_"</span>: int(time.time()*<span class="number">1000</span>),</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            response = self.session.get(<span class="string">"http://login.sina.com.cn/sso/prelogin.php"</span>, params=params)</span><br><span class="line">            json_data = json.loads(re.search(<span class="string">r"\((?P&lt;data&gt;.*)\)"</span>, response.text).group(<span class="string">"data"</span>))</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> excep:</span><br><span class="line">            json_data = &#123;&#125;</span><br><span class="line">            logging.error(<span class="string">"WeiBoLogin get_json_data error: %s"</span>, excep)</span><br><span class="line"></span><br><span class="line">        logging.debug(<span class="string">"WeiBoLogin get_json_data: %s"</span>, json_data)</span><br><span class="line">        <span class="keyword">return</span> json_data</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_password</span><span class="params">(self, servertime, nonce, pubkey)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        get legal password</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        string = (str(servertime) + <span class="string">"\t"</span> + str(nonce) + <span class="string">"\n"</span> + str(self.pass_word)).encode(<span class="string">"utf-8"</span>)</span><br><span class="line">        public_key = rsa.PublicKey(int(pubkey, <span class="number">16</span>), int(<span class="string">"10001"</span>, <span class="number">16</span>))</span><br><span class="line">        password = rsa.encrypt(string, public_key)</span><br><span class="line">        password = binascii.b2a_hex(password)</span><br><span class="line">        <span class="keyword">return</span> password.decode()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    logging.basicConfig(level=logging.DEBUG, format=<span class="string">"%(asctime)s\t%(levelname)s\t%(message)s"</span>)</span><br><span class="line">    weibo = WeiBoLogin()</span><br><span class="line">    weibo.login(<span class="string">"username"</span>, <span class="string">"password"</span>)</span><br></pre></td></tr></table></figure><p>运行，模拟登录成功：</p><p><a href="https://imgchr.com/i/1scf3D" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2020/02/05/1scf3D.png" alt="1scf3D.png"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;爬取新浪微博用户信息及微博内容&quot;&gt;&lt;a href=&quot;#爬取新浪微博用户信息及微博内容&quot; class=&quot;headerlink&quot; title=&quot;爬取新浪微博用户信息及微博内容&quot;&gt;&lt;/a&gt;爬取新浪微博用户信息及微博内容&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;引用：&lt;a
      
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="爬虫" scheme="http://yoursite.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="weibo" scheme="http://yoursite.com/tags/weibo/"/>
    
  </entry>
  
  <entry>
    <title>爬虫入门-2</title>
    <link href="http://yoursite.com/2020/02/03/2020-02-03-%E7%88%AC%E8%99%AB%E5%85%A5%E9%97%A8-2/"/>
    <id>http://yoursite.com/2020/02/03/2020-02-03-%E7%88%AC%E8%99%AB%E5%85%A5%E9%97%A8-2/</id>
    <published>2020-02-03T13:38:00.000Z</published>
    <updated>2020-02-03T16:03:30.641Z</updated>
    
    <content type="html"><![CDATA[<h2 id="开始爬虫"><a href="#开始爬虫" class="headerlink" title="开始爬虫"></a>开始爬虫</h2><h3 id="Urllib库"><a href="#Urllib库" class="headerlink" title="Urllib库"></a>Urllib库</h3><p>在python这个内置的Urllib库中，有4个模块：</p><p><font color="#660000">request</font></p><p>request模块即用它来发起请求。</p><p><font color="660000">error</font></p><p>在我们使用request模块遇到错误，可以用它来进行异常处理。</p><p><font color="660000">parse</font></p><p>parse模块用来解析我们的url地址，比如解析域名地址等。</p><p><font color="#660000">robotparser</font></p><p>用来解析网站的robot.txt。</p><h4 id="request模块中的urlopen方法"><a href="#request模块中的urlopen方法" class="headerlink" title="request模块中的urlopen方法"></a>request模块中的urlopen方法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line">urllib.request.urlopen(<span class="string">'http://www.baidu.com'</span>)</span><br></pre></td></tr></table></figure><p>通过request模块的urlopen方法直接用Get请求方式请求百度了，返回的内容和浏览器是一样的，打印出来看：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line">response = urllib.request.urlopen(<span class="string">'http://www.baidu.com'</span>)</span><br><span class="line">print(response.read().decode(<span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2020/02/03/100nPI.png" alt="100nPI.png"></p><p>request的urlopen方法，可以传入的参数如下：</p><p><a href="https://imgchr.com/i/100jQf" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2020/02/03/100jQf.md.png" alt="100jQf.md.png"></a></p><p>其中主要参数有3个。</p><ul><li>url：我们请求的链接</li><li>data：给我们post请求携带参数的。比如我们在登录时，可以把用户名密码封装成data传过去</li><li>timeout：设置请求超时时间。如果等待较长时间服务器没有给我们返回数据，则放弃操作</li></ul><h4 id="request模块中的Request方法"><a href="#request模块中的Request方法" class="headerlink" title="request模块中的Request方法"></a>request模块中的Request方法</h4><p>如果我们要“欺骗”服务器说我们是浏览器或者手机请求，此时我们需要添加请求头信息，即request header，就需要使用到request模块中的Request方法。</p><p><img src="https://s2.ax1x.com/2020/02/03/10BJOO.png" alt="10BJOO.png"></p><p>Request方法的主要参数有url、data、headers、method等。</p><p>除了定义url和data之外，我们还可以定义请求头信息。urlopen默认是Get请求，当我们传入参数它就为Post请求了。而Request可以让我们自己定义请求的方式，这样我们就可以使用Request来封装我们的请求信息。</p><p>接下来模拟登录CSDN。</p><p><img src="https://s2.ax1x.com/2020/02/03/10gKuq.png" alt="10gKuq.png"></p><p><img src="https://s2.ax1x.com/2020/02/03/10g1ET.png" alt="10g1ET.png"></p><p><img src="https://s2.ax1x.com/2020/02/03/10gY8J.png" alt="10gY8J.png"></p><p>了解这些后，就可以来模拟登录了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request,parse</span><br><span class="line"><span class="keyword">import</span> ssl  <span class="comment">#csdn用的是https，因此还要导入ssl</span></span><br><span class="line"><span class="comment">#我们可以使用ssl未经验证的上下文</span></span><br><span class="line">context = ssl._create_unverified_context()</span><br><span class="line"><span class="comment">#定义我们的请求url和header</span></span><br><span class="line">url = <span class="string">'https://passport.csdn.net/login?code=public'</span></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="comment">#假装自己是浏览器</span></span><br><span class="line"><span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#定义一下请求参数</span></span><br><span class="line">dict = &#123;</span><br><span class="line">    <span class="string">'return_url'</span>:<span class="string">'https://www.csdn.net/'</span>,</span><br><span class="line">    <span class="string">'user_name'</span>:<span class="string">'---------'</span>,</span><br><span class="line">    <span class="string">'password'</span>:<span class="string">'--------'</span>,</span><br><span class="line">    <span class="string">'_post_type'</span>:<span class="string">'ajax'</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#把请求的参数转化为byte</span></span><br><span class="line">data = bytes(parse.urlencode(dict),<span class="string">'utf-8'</span>)</span><br><span class="line"><span class="comment">#封装request</span></span><br><span class="line">req = request.Request(url,data=data,headers=headers,method=<span class="string">'POST'</span>)</span><br><span class="line"><span class="comment">#最后我们进行请求</span></span><br><span class="line">response = request.urlopen(req,context=context)</span><br><span class="line">print(response.read().decode(<span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure><p>运行后我们发现又跳回了登录界面。</p><hr><p>参考：<a href="http://www.yanjuntech.cn/archives/955" target="_blank" rel="noopener">http://www.yanjuntech.cn/archives/955</a></p><p>这里CSDN的登陆比较复杂，咱们使用浏览器打开csdn登陆页面，然后鼠标右键查看源代码找到如下登陆部分代码</p><p><img src="http://www.yanjuntech.cn/wp-content/uploads/2018/07/csdn.png" alt="img"></p><blockquote><p>该参数可以理解成每个需要登录的用户都有一个流水号。只有有了webflow发放的有效的流水号，用户才可以说明是已经进入了webflow流程。否则，没有流水号的情况下，webflow会认为用户还没有进入webflow流程，从而会重新进入一次webflow流程，从而会重新出现登录界面。</p></blockquote><p>所以我们爬虫模拟登陆的时候，需要设置这几个表单，需要获取一下当前登陆的流水号。一般的网站登陆并没有流水号，所以登陆会比较简单，但是这里CSDN需要获取一下，所以稍微有点复杂。</p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;开始爬虫&quot;&gt;&lt;a href=&quot;#开始爬虫&quot; class=&quot;headerlink&quot; title=&quot;开始爬虫&quot;&gt;&lt;/a&gt;开始爬虫&lt;/h2&gt;&lt;h3 id=&quot;Urllib库&quot;&gt;&lt;a href=&quot;#Urllib库&quot; class=&quot;headerlink&quot; title=&quot;Url
      
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="爬虫" scheme="http://yoursite.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>爬虫入门-1</title>
    <link href="http://yoursite.com/2020/02/03/2020-02-03-%E7%88%AC%E8%99%AB%E5%85%A5%E9%97%A8-1/"/>
    <id>http://yoursite.com/2020/02/03/2020-02-03-%E7%88%AC%E8%99%AB%E5%85%A5%E9%97%A8-1/</id>
    <published>2020-02-03T06:55:00.000Z</published>
    <updated>2020-02-03T13:38:02.391Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>所有内容是来自于<a href="https://github.com/wistbean/learn_python3_spider的转载和整理。原文包含表情包等更为有趣的教程内容。" target="_blank" rel="noopener">https://github.com/wistbean/learn_python3_spider的转载和整理。原文包含表情包等更为有趣的教程内容。</a></p></blockquote><h2 id="爬虫前"><a href="#爬虫前" class="headerlink" title="爬虫前"></a>爬虫前</h2><h3 id="什么是爬虫"><a href="#什么是爬虫" class="headerlink" title="什么是爬虫"></a>什么是爬虫</h3><p>互联网上的网站都是托管在服务器上24小时运行的。我们的<strong>爬虫</strong>首先会模拟请求，就好像人在浏览器输入网址，然后回车那样。爬虫可以利用一些Http库向指定的服务器发起请求，此时爬虫将自己“假装”成浏览器。大多数的服务器会以为浏览器发送的请求而直接返回数据给爬虫了。当然也有一些网站会建立一些反爬虫机制来实行反爬。</p><h3 id="在Chrome浏览器抓包"><a href="#在Chrome浏览器抓包" class="headerlink" title="在Chrome浏览器抓包"></a>在Chrome浏览器抓包</h3><h4 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h4><p>所谓抓包，就是来摸清浏览器的内部套路。知道请求方式、请求参数、请求头定义、怎么拿到返回的数据等。</p><p>在我们要对某个网站进行爬取的时候，要对其数据进行分析，就要知道应该<strong>怎么请求</strong>，就要知道<strong>获取的数据是什么样的</strong>。</p><p>首先打开<a href="https://www.baidu.com/。按下F12。如下：" target="_blank" rel="noopener">https://www.baidu.com/。按下F12。如下：</a></p><p><a href="https://imgchr.com/i/1wfmAf" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2020/02/03/1wfmAf.md.png" alt="1wfmAf.md.png"></a></p><p>可以看到Element标签下对应的html代码，其实就是该网页的代码。</p><p>点击Network标签，刷新一下。可以看到有许多请求。如下：</p><p><a href="https://imgchr.com/i/1wIpqA" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2020/02/03/1wIpqA.md.png" alt="1wIpqA.md.png"></a></p><p>其实，HTTP的请求方式有好多种:GET/POST/PUT/DELETE/HEAD/OPTIONS/TRACE，其中最常见的是GET和POST请求。</p><h4 id="GET请求"><a href="#GET请求" class="headerlink" title="GET请求"></a>GET请求</h4><p>接下来，搜索【说好不哭】，查看Network可以看到有许多请求。如下：</p><p><img src="https://s2.ax1x.com/2020/02/03/1w7PaR.png" alt="1w7PaR.png"></p><p>这些都是GET请求，随便点击一个请求进行查看。</p><p><img src="https://s2.ax1x.com/2020/02/03/1wHhng.png" alt="1wHhng.png"></p><p>注意到<strong>Request URL</strong>：</p><p><a href="https://www.baidu.com/s?wd=%E8%AF%B4%E5%A5%BD%E4%B8%8D%E5%93%AD&amp;rsv_spt=1&amp;rsv_iqid=0xb05816e7000b654c&amp;issp=1&amp;f=8&amp;rsv_bp=1&amp;rsv_idx=2&amp;ie=utf-8&amp;tn=baiduhome_pg&amp;rsv_enter=1&amp;rsv_dl=tb&amp;rsv_sug3=13&amp;rsv_sug1=9&amp;rsv_sug7=101&amp;rsv_sug2=0&amp;inputT=1809&amp;rsv_sug4=2140。" target="_blank" rel="noopener">https://www.baidu.com/s?wd=%E8%AF%B4%E5%A5%BD%E4%B8%8D%E5%93%AD&amp;rsv_spt=1&amp;rsv_iqid=0xb05816e7000b654c&amp;issp=1&amp;f=8&amp;rsv_bp=1&amp;rsv_idx=2&amp;ie=utf-8&amp;tn=baiduhome_pg&amp;rsv_enter=1&amp;rsv_dl=tb&amp;rsv_sug3=13&amp;rsv_sug1=9&amp;rsv_sug7=101&amp;rsv_sug2=0&amp;inputT=1809&amp;rsv_sug4=2140。</a></p><p>其中网站后面的东西即为GET请求的参数。这些参数以key-value键值对的形式实现，如：wd=%E8%AF%B4%E5%A5%BD%E4%B8%8D%E5%93%AD。</p><p>所以，在使用python写GET请求时，直接在URL后面加个？然后在其后添加参数值即可。如<a href="https://www.baidu.com/s?wd=说好不哭。得到的搜索结果是一样的。" target="_blank" rel="noopener">https://www.baidu.com/s?wd=说好不哭。得到的搜索结果是一样的。</a></p><p><img src="https://s2.ax1x.com/2020/02/03/1wL74A.png" alt="1wL74A.png"></p><p>wd=%E8%AF%B4%E5%A5%BD%E4%B8%8D%E5%93%AD是对汉字【说好不哭】的url编码。</p><blockquote><p>关于URL编码：<a href="http://www.ruanyifeng.com/blog/2010/02/url_encoding.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2010/02/url_encoding.html</a></p></blockquote><h4 id="POST请求"><a href="#POST请求" class="headerlink" title="POST请求"></a>POST请求</h4><p>那么POST请求呢？我们在进行一些<strong>信息提交</strong>的时候，如注册、登录时，我们所做的就是POST请求。POST请求的参数不会直接放在URL上，而是会以Form表单的形式将数据提交给服务器。</p><p>如我们进行CSDN的登录，点击登录按钮后：</p><p><a href="https://imgchr.com/i/10pLmq" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2020/02/03/10pLmq.md.png" alt="10pLmq.md.png"></a></p><p>可以看到GET请求把请求参数暴露在URL上，而POST请求的参数则放在request body里面，POST请求方式还对密码参数加密。所以相对比较安全。</p><h4 id="请求头"><a href="#请求头" class="headerlink" title="请求头"></a>请求头</h4><p>请求头，即Request Header。我们在进行HTTP请求的时候，除了提交一些参数之外，还定义一些HTTP请求的头部信息，如Accept、Host、cookie、User-Agent等等。这些参数也是我们在做爬虫时要用到的。通过这些信息可以“欺骗”服务器，告诉它我们是正规请求。</p><p><img src="https://s2.ax1x.com/2020/02/03/10ExSK.png" alt="10ExSK.png"></p><h4 id="响应"><a href="#响应" class="headerlink" title="响应"></a>响应</h4><h5 id="响应码"><a href="#响应码" class="headerlink" title="响应码"></a>响应码</h5><p>比如我们遇到的404页面，服务器错误返回的502页面等。都是服务器的响应码。</p><p>一般服务器给我们返回200，代表我们请求成功。</p><h5 id="响应头"><a href="#响应头" class="headerlink" title="响应头"></a>响应头</h5><p>再来看Response Headers(响应头)，这个头则主要告诉我们数据以什么样的形式展现，告诉我们cookie的设置。</p><p><img src="https://s2.ax1x.com/2020/02/03/10eSVH.png" alt="10eSVH.png"></p><h5 id="响应体"><a href="#响应体" class="headerlink" title="响应体"></a>响应体</h5><p>其实就是服务器返回给我们的数据。点击Response标签即可看到相关的数据了。</p><p><img src="https://s2.ax1x.com/2020/02/03/10u0Wn.png" alt="10u0Wn.png"></p><p>这些是服务器返回给我们的HTML源代码。对于不同的请求，我们获取到的数据是不一样的，除了HTML的，也有JSON的、图片二进制数据等。可以针对不同情况来解析这些数据。</p><h3 id="通过Fiddler进行手机抓包"><a href="#通过Fiddler进行手机抓包" class="headerlink" title="通过Fiddler进行手机抓包"></a>通过Fiddler进行手机抓包</h3><ul><li>对请求的数据或者响应的数据进行篡改</li><li>手机里面的数据如何抓包</li><li>抓包工具Fiddler</li></ul><p><a href="https://mp.weixin.qq.com/s/NGOUtPIW8n1whOYwR-LQYA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/NGOUtPIW8n1whOYwR-LQYA</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;所有内容是来自于&lt;a href=&quot;https://github.com/wistbean/learn_python3_spider的转载和整理。原文包含表情包等更为有趣的教程内容。&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;h
      
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="爬虫" scheme="http://yoursite.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>My first blog</title>
    <link href="http://yoursite.com/2020/01/14/2020-01-14-My-first-blog/"/>
    <id>http://yoursite.com/2020/01/14/2020-01-14-My-first-blog/</id>
    <published>2020-01-14T14:32:24.000Z</published>
    <updated>2020-01-29T14:52:01.095Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"Hello world"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Hello-World&quot;&gt;&lt;a href=&quot;#Hello-World&quot; class=&quot;headerlink&quot; title=&quot;Hello World&quot;&gt;&lt;/a&gt;Hello World&lt;/h2&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;
      
    
    </summary>
    
    
      <category term="test" scheme="http://yoursite.com/categories/test/"/>
    
    
      <category term="test" scheme="http://yoursite.com/tags/test/"/>
    
  </entry>
  
</feed>
